/* Autogenerated file, do not edit */

#ifndef _MICROCHIP_PIC32MZW2_NC_INTF_H
#define _MICROCHIP_PIC32MZW2_NC_INTF_H

#define WINC_MOD_ID_SYSTEM                                      0x01
#define WINC_MOD_ID_INTERNAL                                    0x02
#define WINC_MOD_ID_CFG                                         0x03
#define WINC_MOD_ID_DHCP                                        0x04
#define WINC_MOD_ID_DNS                                         0x05
#define WINC_MOD_ID_FS                                          0x07
#define WINC_MOD_ID_MQTT                                        0x08
#define WINC_MOD_ID_NETIF                                       0x09
#define WINC_MOD_ID_PING                                        0x0b
#define WINC_MOD_ID_RST                                         0x0c
#define WINC_MOD_ID_SNTP                                        0x0d
#define WINC_MOD_ID_SOCKET                                      0x0e
#define WINC_MOD_ID_TIME                                        0x10
#define WINC_MOD_ID_TLS                                         0x11
#define WINC_MOD_ID_WAP                                         0x12
#define WINC_MOD_ID_WSCN                                        0x13
#define WINC_MOD_ID_WSTA                                        0x14
#define WINC_MOD_ID_ASSOC                                       0x16
#define WINC_MOD_ID_SI                                          0x17
#define WINC_MOD_ID_WPROV                                       0x19
#define WINC_MOD_ID_DI                                          0x1a
#define WINC_MOD_ID_EXTCRYPTO                                   0x1b
#define WINC_MOD_ID_WIFI                                        0x1c

// WINC_STATUS_TYPE: 2 bytes: <MODULE_ID> | <MSG_ID>
#define WINC_STATUS_OK                                          0x0000
#define WINC_STATUS_ERROR                                       0x0001
#define WINC_STATUS_INVALID_CMD                                 0x0002
#define WINC_STATUS_UNKNOWN_CMD                                 0x0003
#define WINC_STATUS_INVALID_PARAMETER                           0x0004
#define WINC_STATUS_INCORRECT_NUM_PARAMS                        0x0005
#define WINC_STATUS_STORE_UPDATE_BLOCKED                        0x0006
#define WINC_STATUS_STORE_ACCESS_FAILED                         0x0007
#define WINC_STATUS_TIMEOUT                                     0x0008
#define WINC_STATUS_HOST_INTERFACE_FAILED                       0x0009
#define WINC_STATUS_ACCESS_DENIED                               0x000a
#define WINC_STATUS_WIFI_API_REQUEST_FAILED                     0x0100
#define WINC_STATUS_STA_NOT_CONNECTED                           0x0101
#define WINC_STATUS_NETWORK_ERROR                               0x0102
#define WINC_STATUS_FILE_SYSTEM_ERROR                           0x0103
#define WINC_STATUS_DNS_TYPE_NOT_SUPPORTED                      0x0500
#define WINC_STATUS_DNS_TIMEOUT                                 0x0501
#define WINC_STATUS_DNS_ERROR                                   0x0502
#define WINC_STATUS_TSFR_PROTOCOL_NOT_SUPPORTED                 0x0700
#define WINC_STATUS_FILE_EXISTS                                 0x0701
#define WINC_STATUS_FILE_NOT_FOUND                              0x0702
#define WINC_STATUS_INVALID_FILE_TYPE                           0x0703
#define WINC_STATUS_MQTT_ERROR                                  0x0800
#define WINC_STATUS_PING_FAILED                                 0x0b00
#define WINC_STATUS_SOCKET_ID_NOT_FOUND                         0x0e00
#define WINC_STATUS_LENGTH_MISMATCH                             0x0e01
#define WINC_STATUS_NO_FREE_SOCKETS                             0x0e02
#define WINC_STATUS_SOCKET_INVALID_PROTOCOL                     0x0e03
#define WINC_STATUS_SOCKET_CLOSE_FAILED                         0x0e04
#define WINC_STATUS_SOCKET_BIND_FAILED                          0x0e05
#define WINC_STATUS_SOCKET_TLS_FAILED                           0x0e06
#define WINC_STATUS_SOCKET_CONNECT_FAILED                       0x0e07
#define WINC_STATUS_SOCKET_SEND_FAILED                          0x0e08
#define WINC_STATUS_SOCKET_SET_OPT_FAILED                       0x0e09
#define WINC_STATUS_SOCKET_REMOTE_NOT_SET                       0x0e0a
#define WINC_STATUS_MULTICAST_ERROR                             0x0e0b
#define WINC_STATUS_SOCKET_NOT_READY                            0x0e0c
#define WINC_STATUS_SOCKET_SEQUENCE_ERROR                       0x0e0d
#define WINC_STATUS_TIME_ERROR                                  0x1000
#define WINC_STATUS_WAP_STOP_REFUSED                            0x1200
#define WINC_STATUS_WAP_STOP_FAILED                             0x1201
#define WINC_STATUS_WAP_START_REFUSED                           0x1202
#define WINC_STATUS_WAP_START_FAILED                            0x1203
#define WINC_STATUS_UNSUPPORTTED_SEC_TYPE                       0x1204
#define WINC_STATUS_STA_DISCONN_REFUSED                         0x1400
#define WINC_STATUS_STA_DISCONN_FAILED                          0x1401
#define WINC_STATUS_STA_CONN_REFUSED                            0x1402
#define WINC_STATUS_STA_CONN_FAILED                             0x1403
#define WINC_STATUS_ASSOC_NOT_FOUND                             0x1600

// WINC_CMD_ID: 2 bytes: <MODULE_ID> | <CMD_ID>
#define WINC_CMD_ID_GMI                                         0x0200
#define WINC_CMD_ID_GMM                                         0x0201
#define WINC_CMD_ID_GMR                                         0x0202
#define WINC_CMD_ID_IPR                                         0x0203
#define WINC_CMD_ID_CFG                                         0x0300
#define WINC_CMD_ID_DHCPSC                                      0x0400
#define WINC_CMD_ID_DNSC                                        0x0500
#define WINC_CMD_ID_DNSRESOLV                                   0x0501
#define WINC_CMD_ID_FS                                          0x0700
#define WINC_CMD_ID_FSTSFR                                      0x0701
#define WINC_CMD_ID_MQTTC                                       0x0800
#define WINC_CMD_ID_MQTTCONN                                    0x0801
#define WINC_CMD_ID_MQTTSUB                                     0x0802
#define WINC_CMD_ID_MQTTSUBLST                                  0x0803
#define WINC_CMD_ID_MQTTSUBRD                                   0x0804
#define WINC_CMD_ID_MQTTUNSUB                                   0x0805
#define WINC_CMD_ID_MQTTPUB                                     0x0806
#define WINC_CMD_ID_MQTTLWT                                     0x0807
#define WINC_CMD_ID_MQTTDISCONN                                 0x0808
#define WINC_CMD_ID_MQTTPROPTX                                  0x0809
#define WINC_CMD_ID_MQTTPROPRX                                  0x080a
#define WINC_CMD_ID_MQTTPROPTXS                                 0x080b
#define WINC_CMD_ID_NETIFC                                      0x0900
#define WINC_CMD_ID_PING                                        0x0b00
#define WINC_CMD_ID_RST                                         0x0c00
#define WINC_CMD_ID_SNTPC                                       0x0d00
#define WINC_CMD_ID_SOCKO                                       0x0e00
#define WINC_CMD_ID_SOCKBL                                      0x0e01
#define WINC_CMD_ID_SOCKBR                                      0x0e02
#define WINC_CMD_ID_SOCKBM                                      0x0e03
#define WINC_CMD_ID_SOCKTLS                                     0x0e04
#define WINC_CMD_ID_SOCKWR                                      0x0e05
#define WINC_CMD_ID_SOCKWRTO                                    0x0e06
#define WINC_CMD_ID_SOCKRD                                      0x0e07
#define WINC_CMD_ID_SOCKRDBUF                                   0x0e08
#define WINC_CMD_ID_SOCKCL                                      0x0e09
#define WINC_CMD_ID_SOCKLST                                     0x0e0a
#define WINC_CMD_ID_SOCKC                                       0x0e0b
#define WINC_CMD_ID_TIME                                        0x1000
#define WINC_CMD_ID_TLSC                                        0x1100
#define WINC_CMD_ID_TLSCSC                                      0x1101
#define WINC_CMD_ID_WAPC                                        0x1200
#define WINC_CMD_ID_WAP                                         0x1201
#define WINC_CMD_ID_WSCNC                                       0x1300
#define WINC_CMD_ID_WSCN                                        0x1301
#define WINC_CMD_ID_WSTAC                                       0x1400
#define WINC_CMD_ID_WSTA                                        0x1401
#define WINC_CMD_ID_ASSOC                                       0x1600
#define WINC_CMD_ID_SI                                          0x1700
#define WINC_CMD_ID_WPROVC                                      0x1900
#define WINC_CMD_ID_WPROV                                       0x1901
#define WINC_CMD_ID_DI                                          0x1a00
#define WINC_CMD_ID_EXTCRYPTO                                   0x1b00
#define WINC_CMD_ID_WIFIC                                       0x1c00

// WINC_AEC_ID: 2 bytes: <MODULE_ID> | <AEC_ID>
#define WINC_AEC_ID_BOOT                                        0x0100
#define WINC_AEC_ID_DNSRESOLV                                   0x0500
#define WINC_AEC_ID_DNSERR                                      0x0501
#define WINC_AEC_ID_MQTTCONN                                    0x0800
#define WINC_AEC_ID_MQTTCONNACK                                 0x0801
#define WINC_AEC_ID_MQTTPUBACK                                  0x0802
#define WINC_AEC_ID_MQTTPUBCOMP                                 0x0803
#define WINC_AEC_ID_MQTTPUBERR                                  0x0804
#define WINC_AEC_ID_MQTTSUB                                     0x0805
#define WINC_AEC_ID_MQTTUNSUB                                   0x0806
#define WINC_AEC_ID_MQTTSUBRX                                   0x0807
#define WINC_AEC_ID_MQTTPROPRX                                  0x0808
#define WINC_AEC_ID_PING                                        0x0b00
#define WINC_AEC_ID_PINGERR                                     0x0b01
#define WINC_AEC_ID_SOCKIND                                     0x0e00
#define WINC_AEC_ID_SOCKRXT                                     0x0e01
#define WINC_AEC_ID_SOCKRXU                                     0x0e02
#define WINC_AEC_ID_SOCKCL                                      0x0e03
#define WINC_AEC_ID_SOCKTLS                                     0x0e04
#define WINC_AEC_ID_SOCKERR                                     0x0e05
#define WINC_AEC_ID_TIME                                        0x1000
#define WINC_AEC_ID_WAPAIP                                      0x1200
#define WINC_AEC_ID_WAPSC                                       0x1201
#define WINC_AEC_ID_WAPSD                                       0x1202
#define WINC_AEC_ID_WAPERR                                      0x1203
#define WINC_AEC_ID_WSCNIND                                     0x1300
#define WINC_AEC_ID_WSCNDONE                                    0x1301
#define WINC_AEC_ID_WSTAAIP                                     0x1400
#define WINC_AEC_ID_WSTALD                                      0x1401
#define WINC_AEC_ID_WSTAERR                                     0x1402
#define WINC_AEC_ID_WSTALU                                      0x1403
#define WINC_AEC_ID_WSTAROAM                                    0x1404
#define WINC_AEC_ID_ASSOC                                       0x1600
#define WINC_AEC_ID_SIMSTAT                                     0x1700
#define WINC_AEC_ID_SIMERR                                      0x1701
#define WINC_AEC_ID_SIWPKTS                                     0x1702
#define WINC_AEC_ID_SIHEAP                                      0x1703
#define WINC_AEC_ID_SIHERR                                      0x1704
#define WINC_AEC_ID_SISTACK                                     0x1705
#define WINC_AEC_ID_WPROVAT                                     0x1900
#define WINC_AEC_ID_WPROVDT                                     0x1901
#define WINC_AEC_ID_EXTCRYPTO                                   0x1b00

#define WINC_CONST_DNS_TYPE_A                                   (1)
#define WINC_CONST_DNS_TYPE_AAAA                                (28)
#define WINC_CONST_FS_OP_LOAD                                   (1)
#define WINC_CONST_FS_OP_LIST                                   (2)
#define WINC_CONST_FS_OP_DEL                                    (3)
#define WINC_CONST_FS_OP_INFO                                   (4)
#define WINC_CONST_FS_FILETYPE_CERT                             (1)
#define WINC_CONST_FS_FILETYPE_PRIKEY                           (2)
#define WINC_CONST_FS_TSFRPROT_XMDM_CS                          (1)
#define WINC_CONST_FS_TSFRPROT_XMDM_CRC                         (2)
#define WINC_CONST_FS_TSFRPROT_XMDM_1K                          (3)
#define WINC_CONST_FS_TSFRPROT_YMDM                             (4)
#define WINC_CONST_FS_TSFRPROT_TSFR                             (5)
#define WINC_CONST_MQTT_CLEAN_USE_EXIST                         (0)
#define WINC_CONST_MQTT_CLEAN_USE_NEW                           (1)
#define WINC_CONST_MQTT_MAX_QOS_QOS0                            (0)
#define WINC_CONST_MQTT_MAX_QOS_QOS1                            (1)
#define WINC_CONST_MQTT_MAX_QOS_QOS2                            (2)
#define WINC_CONST_MQTT_DUP_NEW_MSG                             (0)
#define WINC_CONST_MQTT_DUP_DUP_MSG                             (1)
#define WINC_CONST_MQTT_RETAIN_NOT_RETAINED                     (0)
#define WINC_CONST_MQTT_RETAIN_RETAINGED                        (1)
#define WINC_CONST_MQTT_QOS_QOS0                                (0)
#define WINC_CONST_MQTT_QOS_QOS1                                (1)
#define WINC_CONST_MQTT_QOS_QOS2                                (2)
#define WINC_CONST_MQTT_REASON_CODE_NORMAL                      (0)
#define WINC_CONST_MQTT_REASON_CODE_SEND_LWT                    (4)
#define WINC_CONST_MQTT_REASON_CODE_ERROR                       (128)
#define WINC_CONST_MQTT_REASON_CODE_MALFORM_PKT                 (129)
#define WINC_CONST_MQTT_REASON_CODE_PROT_ERR                    (130)
#define WINC_CONST_MQTT_REASON_CODE_IMP_SPEC_ERR                (131)
#define WINC_CONST_MQTT_REASON_CODE_TOP_INVALID                 (144)
#define WINC_CONST_MQTT_REASON_CODE_RX_MAX_EXCEED               (147)
#define WINC_CONST_MQTT_REASON_CODE_TOP_ALIAS_INVALID           (148)
#define WINC_CONST_MQTT_REASON_CODE_PKT_TOO_LARGE               (149)
#define WINC_CONST_MQTT_REASON_CODE_MSG_RATE_TOO_HIGH           (150)
#define WINC_CONST_MQTT_REASON_CODE_QUOTA_EXCEED                (151)
#define WINC_CONST_MQTT_REASON_CODE_ADMIN_ACT                   (152)
#define WINC_CONST_MQTT_REASON_CODE_PAYLOAD_INVALID             (153)
#define WINC_CONST_MQTT_PROP_SEL_PROP_NOT_SEL                   (0)
#define WINC_CONST_MQTT_PROP_SEL_PROP_SEL                       (1)
#define WINC_CONST_MQTT_CONN_STATE_NOT_CONNECTED                (0)
#define WINC_CONST_MQTT_CONN_STATE_CONNECTED                    (1)
#define WINC_CONST_MQTT_RETURN_CODE_SUCCESS                     (0)
#define WINC_CONST_MQTT_RETURN_CODE_ERROR                       (128)
#define WINC_CONST_MQTT_RETURN_CODE_MALFORM_PKT                 (129)
#define WINC_CONST_MQTT_RETURN_CODE_PROT_ERR                    (130)
#define WINC_CONST_MQTT_RETURN_CODE_IMP_SPEC_ERR                (131)
#define WINC_CONST_MQTT_RETURN_CODE_PROT_NA                     (132)
#define WINC_CONST_MQTT_RETURN_CODE_INVALID_CLIENT_ID           (133)
#define WINC_CONST_MQTT_RETURN_CODE_BAD_USER_PASS               (134)
#define WINC_CONST_MQTT_RETURN_CODE_NOT_AUTH                    (135)
#define WINC_CONST_MQTT_RETURN_CODE_SRV_NA                      (136)
#define WINC_CONST_MQTT_RETURN_CODE_SRV_BUSY                    (137)
#define WINC_CONST_MQTT_RETURN_CODE_BANNED                      (138)
#define WINC_CONST_MQTT_RETURN_CODE_BAD_AUTH                    (140)
#define WINC_CONST_MQTT_RETURN_CODE_TOP_INVALID                 (144)
#define WINC_CONST_MQTT_RETURN_CODE_PKT_TOO_LARGE               (149)
#define WINC_CONST_MQTT_RETURN_CODE_QUOTA_EXCEED                (151)
#define WINC_CONST_MQTT_RETURN_CODE_PAYLOAD_INVALID             (153)
#define WINC_CONST_MQTT_RETURN_CODE_RETAIN_NA                   (154)
#define WINC_CONST_MQTT_RETURN_CODE_QOS_NA                      (155)
#define WINC_CONST_MQTT_RETURN_CODE_USE_DIFF_SRV                (156)
#define WINC_CONST_MQTT_RETURN_CODE_SRV_MOVED                   (156)
#define WINC_CONST_MQTT_RETURN_CODE_CONN_RATE_EXCEED            (159)
#define WINC_CONST_MQTT_REASON_CODE_QOS0_GRANTED                (0)
#define WINC_CONST_MQTT_REASON_CODE_QOS1_GRANTED                (1)
#define WINC_CONST_MQTT_REASON_CODE_QOS2_GRANTED                (2)
#define WINC_CONST_MQTT_REASON_CODE_NOT_AUTH                    (135)
#define WINC_CONST_MQTT_REASON_CODE_TOP_FILT_INVALID            (143)
#define WINC_CONST_MQTT_REASON_CODE_PKT_ID_IN_USE               (145)
#define WINC_CONST_MQTT_REASON_CODE_SHARED_SUB_NOT_SUP          (158)
#define WINC_CONST_MQTT_REASON_CODE_SUB_IDENT_NA                (161)
#define WINC_CONST_MQTT_REASON_CODE_WILDCARD_SUB_NA             (162)
#define WINC_CONST_MQTT_RESULT_SUCCESS                          (0)
#define WINC_CONST_MQTT_RESULT_NO_SUB                           (15)
#define WINC_CONST_MQTT_RESULT_ERROR                            (128)
#define WINC_CONST_MQTT_RESULT_IMP_SPEC_ERR                     (131)
#define WINC_CONST_MQTT_RESULT_NOT_AUTH                         (135)
#define WINC_CONST_MQTT_RESULT_TOP_FILT_INVALID                 (143)
#define WINC_CONST_MQTT_RESULT_PKT_ID_IN_USE                    (145)
#define WINC_CONST_MQTT_RETAIN_RETAINED                         (1)
#define WINC_CONST_MQTT_PROP_SEL_NOT_SELECTED                   (0)
#define WINC_CONST_MQTT_PROP_SEL_SELECTED                       (1)
#define WINC_CONST_NETIF_PROTOCOL_VERSION_IPV4                  (4)
#define WINC_CONST_NETIF_PROTOCOL_VERSION_IPV6                  (6)
#define WINC_CONST_SOCKET_PROTOCOL_UDP                          (1)
#define WINC_CONST_SOCKET_PROTOCOL_TCP                          (2)
#define WINC_CONST_SOCKET_OUTPUT_MODE_ASCII                     (1)
#define WINC_CONST_SOCKET_OUTPUT_MODE_BINARY                    (2)
#define WINC_CONST_SOCKET_OUTPUT_MODE_ASCII_EXT                 (3)
#define WINC_CONST_TIME_FORMAT_UTC_UNIX                         (1)
#define WINC_CONST_TIME_FORMAT_UTC_NTP                          (2)
#define WINC_CONST_TIME_FORMAT_RFC3339                          (3)
#define WINC_CONST_WAP_STATE_DISABLE                            (0)
#define WINC_CONST_WAP_STATE_ENABLE                             (1)
#define WINC_CONST_WAP_STATE_DISABLED                           (0)
#define WINC_CONST_WAP_STATE_ENABLED                            (1)
#define WINC_CONST_WSCN_ACT_PASV_PASSIVE                        (0)
#define WINC_CONST_WSCN_ACT_PASV_ACTIVE                         (1)
#define WINC_CONST_WSCN_SEC_TYPE_NA                             (-1)
#define WINC_CONST_WSCN_SEC_TYPE_OPEN                           (0)
#define WINC_CONST_WSCN_SEC_TYPE_WPA2_PER_MM                    (2)
#define WINC_CONST_WSCN_SEC_TYPE_WPA2_PER                       (3)
#define WINC_CONST_WSCN_SEC_TYPE_WPA3_PER_TM                    (4)
#define WINC_CONST_WSCN_SEC_TYPE_WPA3_PER                       (5)
#define WINC_CONST_WSCN_SEC_TYPE_WPA2_ENT_MM                    (6)
#define WINC_CONST_WSCN_SEC_TYPE_WPA2_ENT                       (7)
#define WINC_CONST_WSCN_SEC_TYPE_WPA3_ENT_TM                    (8)
#define WINC_CONST_WSCN_SEC_TYPE_WPA3_ENT                       (9)
#define WINC_CONST_WSTA_STATE_DISABLE                           (0)
#define WINC_CONST_WSTA_STATE_ENABLE                            (1)
#define WINC_CONST_WSTA_STATE_NOT_CONNECTED                     (0)
#define WINC_CONST_WSTA_STATE_CONNECTED                         (1)
#define WINC_CONST_ASSOC_AP_STA_AP                              (0)
#define WINC_CONST_ASSOC_AP_STA_STA                             (1)
#define WINC_CONST_SI_FILTER_WIFI_MEM_ALLOC                     (0x01)
#define WINC_CONST_SI_FILTER_WIFI_PKTS                          (0x02)
#define WINC_CONST_SI_FILTER_HEAP_ALLOC                         (0x04)
#define WINC_CONST_SI_FILTER_STACK_USAGE                        (0x08)
#define WINC_CONST_SI_TYPE_MEM                                  (0)
#define WINC_CONST_SI_TYPE_CFG                                  (1)
#define WINC_CONST_SI_TYPE_HPTX                                 (2)
#define WINC_CONST_SI_TYPE_HPRX                                 (3)
#define WINC_CONST_SI_TYPE_NRMTX                                (4)
#define WINC_CONST_SI_TYPE_NRMRX                                (5)
#define WINC_CONST_WPROV_STATE_DISABLE                          (0)
#define WINC_CONST_WPROV_STATE_ENABLE                           (1)
#define WINC_CONST_EXTCRYPTO_STATUS_SUCCESS                     (0)
#define WINC_CONST_EXTCRYPTO_STATUS_FAILURE                     (1)
#define WINC_CONST_EXTCRYPTO_OP_TYPE_SIGN                       (1)
#define WINC_CONST_EXTCRYPTO_OP_SOURCE_TYPE_TLSC                (1)
#define WINC_CONST_EXTCRYPTO_SIGN_TYPE_ECDSA                    (1)
#define WINC_CONST_EXTCRYPTO_CURVE_SECP256R1                    (1)
#define WINC_CONST_EXTCRYPTO_CURVE_SECP384R1                    (2)
#define WINC_CONST_EXTCRYPTO_CURVE_SECP521R1                    (3)

#define WINC_CFG_PARAM_ID_CFG_DEVICE_NAME                       (1)
#define WINC_CFG_PARAM_ID_CFG_VERSION                           (10)
#define WINC_CFG_PARAM_ID_CFG_PATCH                             (11)
#define WINC_CFG_PARAM_ID_CFG_SECURITY                          (12)
#define WINC_CFG_PARAM_ID_CFG_BUILD_HASH                        (13)
#define WINC_CFG_PARAM_ID_CFG_BUILD_TIME                        (14)
#define WINC_CFG_PARAM_ID_CFG_DEBUG_PORT                        (100)
#define WINC_CFG_PARAM_ID_CFG_DEBUG_BAUD                        (101)
#define WINC_CFG_PARAM_ID_DHCPS_ENABLED                         (1)
#define WINC_CFG_PARAM_ID_DHCPS_POOL_START                      (2)
#define WINC_CFG_PARAM_ID_DHCPS_POOL_END                        (3)
#define WINC_CFG_PARAM_ID_DHCPS_POOL_LEASES                     (4)
#define WINC_CFG_PARAM_ID_DHCPS_NETIF_IDX                       (5)
#define WINC_CFG_PARAM_ID_DHCPS_GATEWAY                         (10)
#define WINC_CFG_PARAM_ID_DHCPS_DNS_SVR                         (11)
#define WINC_CFG_PARAM_ID_DNS_DNS_SVR                           (1)
#define WINC_CFG_PARAM_ID_DNS_DNS_AUTO                          (2)
#define WINC_CFG_PARAM_ID_DNS_DNS_TIMEOUT                       (3)
#define WINC_CFG_PARAM_ID_MQTT_BROKER_ADDR                      (1)
#define WINC_CFG_PARAM_ID_MQTT_BROKER_PORT                      (2)
#define WINC_CFG_PARAM_ID_MQTT_CLIENT_ID                        (3)
#define WINC_CFG_PARAM_ID_MQTT_USERNAME                         (4)
#define WINC_CFG_PARAM_ID_MQTT_PASSWORD                         (5)
#define WINC_CFG_PARAM_ID_MQTT_KEEP_ALIVE                       (6)
#define WINC_CFG_PARAM_ID_MQTT_TLS_CONF                         (7)
#define WINC_CFG_PARAM_ID_MQTT_PROTO_VER                        (8)
#define WINC_CFG_PARAM_ID_MQTT_READ_THRESHOLD                   (9)
#define WINC_CFG_PARAM_ID_MQTTPROP_PAYLOAD_FORMAT_IND           (1)
#define WINC_CFG_PARAM_ID_MQTTPROP_MSG_EXPIRY_INTERVAL          (2)
#define WINC_CFG_PARAM_ID_MQTTPROP_CONTENT_TYPE                 (3)
#define WINC_CFG_PARAM_ID_MQTTPROP_RESP_TOPIC                   (8)
#define WINC_CFG_PARAM_ID_MQTTPROP_CORRELATION_DATA             (9)
#define WINC_CFG_PARAM_ID_MQTTPROP_SUBSCRIPTION_ID              (11)
#define WINC_CFG_PARAM_ID_MQTTPROP_SESSION_EXPIRY_INTERVAL      (17)
#define WINC_CFG_PARAM_ID_MQTTPROP_ASSIGNED_CLIENT_ID           (18)
#define WINC_CFG_PARAM_ID_MQTTPROP_SERVER_KEEP_ALIVE            (19)
#define WINC_CFG_PARAM_ID_MQTTPROP_AUTH_METHOD                  (21)
#define WINC_CFG_PARAM_ID_MQTTPROP_AUTH_DATA                    (22)
#define WINC_CFG_PARAM_ID_MQTTPROP_REQ_PROB_INFO                (23)
#define WINC_CFG_PARAM_ID_MQTTPROP_WILL_DELAY_INTERVAL          (24)
#define WINC_CFG_PARAM_ID_MQTTPROP_REQ_RESP_INFO                (25)
#define WINC_CFG_PARAM_ID_MQTTPROP_RESP_INFO                    (26)
#define WINC_CFG_PARAM_ID_MQTTPROP_SERVER_REF                   (28)
#define WINC_CFG_PARAM_ID_MQTTPROP_REASON_STR                   (31)
#define WINC_CFG_PARAM_ID_MQTTPROP_RECEIVE_MAX                  (33)
#define WINC_CFG_PARAM_ID_MQTTPROP_TOPIC_ALIAS_MAX              (34)
#define WINC_CFG_PARAM_ID_MQTTPROP_TOPIC_ALIAS                  (35)
#define WINC_CFG_PARAM_ID_MQTTPROP_MAX_QOS                      (36)
#define WINC_CFG_PARAM_ID_MQTTPROP_RETAIN_AVAIL                 (37)
#define WINC_CFG_PARAM_ID_MQTTPROP_USER_PROP                    (38)
#define WINC_CFG_PARAM_ID_MQTTPROP_MAX_PACKET_SZ                (39)
#define WINC_CFG_PARAM_ID_MQTTPROP_WILDCARD_SUB_AVAIL           (40)
#define WINC_CFG_PARAM_ID_MQTTPROP_SUBSCRIPTION_ID_AVAIL        (41)
#define WINC_CFG_PARAM_ID_MQTTPROP_SHARED_SUBSCRIPTION_AVAIL    (42)
#define WINC_CFG_PARAM_ID_NETIF_NAME                            (1)
#define WINC_CFG_PARAM_ID_NETIF_ETHER                           (2)
#define WINC_CFG_PARAM_ID_NETIF_HOSTNAME                        (3)
#define WINC_CFG_PARAM_ID_NETIF_DHCPC_EN                        (10)
#define WINC_CFG_PARAM_ID_NETIF_DHCPC_LEASE_START               (11)
#define WINC_CFG_PARAM_ID_NETIF_DHCPC_LEASE_ENDS                (12)
#define WINC_CFG_PARAM_ID_NETIF_DHCPC_SRV_ADDR                  (13)
#define WINC_CFG_PARAM_ID_NETIF_IP_MASK                         (40)
#define WINC_CFG_PARAM_ID_NETIF_GATEWAY                         (41)
#define WINC_CFG_PARAM_ID_NETIF_IPV6_GLO_ADDR                   (60)
#define WINC_CFG_PARAM_ID_NETIF_IPV6_LL_ADDR                    (61)
#define WINC_CFG_PARAM_ID_NETIF_IPV6_GATEWAY                    (62)
#define WINC_CFG_PARAM_ID_SNTP_NTP_ENABLED                      (1)
#define WINC_CFG_PARAM_ID_SNTP_NTP_STATIC                       (2)
#define WINC_CFG_PARAM_ID_SNTP_NTP_SVR                          (3)
#define WINC_CFG_PARAM_ID_SOCK_SO_LINGER                        (1)
#define WINC_CFG_PARAM_ID_SOCK_SO_NODELAY                       (2)
#define WINC_CFG_PARAM_ID_SOCK_SO_KEEPALIVE                     (3)
#define WINC_CFG_PARAM_ID_SOCK_SO_RCVBUF                        (4)
#define WINC_CFG_PARAM_ID_SOCK_SO_SNDBUF                        (5)
#define WINC_CFG_PARAM_ID_SOCK_IP_TOS                           (32)
#define WINC_CFG_PARAM_ID_TLS_CTX_CA_CERT_NAME                  (1)
#define WINC_CFG_PARAM_ID_TLS_CTX_CERT_NAME                     (2)
#define WINC_CFG_PARAM_ID_TLS_CTX_PRI_KEY_NAME                  (3)
#define WINC_CFG_PARAM_ID_TLS_CTX_PRI_KEY_PASSWORD              (4)
#define WINC_CFG_PARAM_ID_TLS_CTX_SERVER_NAME                   (5)
#define WINC_CFG_PARAM_ID_TLS_CTX_DOMAIN_NAME                   (6)
#define WINC_CFG_PARAM_ID_TLS_CTX_CIPHER_SUITES_IDX             (7)
#define WINC_CFG_PARAM_ID_TLS_CTX_EXTCRYPTO_OPS                 (20)
#define WINC_CFG_PARAM_ID_TLS_CTX_SIGN_TYPES                    (21)
#define WINC_CFG_PARAM_ID_TLS_CTX_PEER_AUTH                     (40)
#define WINC_CFG_PARAM_ID_TLS_CTX_PEER_DOMAIN_VERIFY            (41)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES                 (1)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_AVAIL           (2)
#define WINC_CFG_PARAM_ID_WAP_SSID                              (1)
#define WINC_CFG_PARAM_ID_WAP_SEC_TYPE                          (2)
#define WINC_CFG_PARAM_ID_WAP_CREDENTIALS                       (3)
#define WINC_CFG_PARAM_ID_WAP_CHANNEL                           (4)
#define WINC_CFG_PARAM_ID_WAP_HIDDEN                            (5)
#define WINC_CFG_PARAM_ID_WAP_L2ONLY                            (7)
#define WINC_CFG_PARAM_ID_WAP_NETIF_IDX                         (8)
#define WINC_CFG_PARAM_ID_WAP_REKEY_INTERVAL                    (9)
#define WINC_CFG_PARAM_ID_WAP_MFP_TYPE                          (50)
#define WINC_CFG_PARAM_ID_WSCN_CHANNEL                          (1)
#define WINC_CFG_PARAM_ID_WSCN_ACT_SLOT_TIME                    (2)
#define WINC_CFG_PARAM_ID_WSCN_PASV_SLOT_TIME                   (3)
#define WINC_CFG_PARAM_ID_WSCN_NUM_SLOTS                        (4)
#define WINC_CFG_PARAM_ID_WSCN_PROBES_PER_SLOT                  (5)
#define WINC_CFG_PARAM_ID_WSCN_RSSI_THRESH                      (6)
#define WINC_CFG_PARAM_ID_WSCN_SEC_FILTER                       (7)
#define WINC_CFG_PARAM_ID_WSCN_ASYNC_NOTIFY                     (8)
#define WINC_CFG_PARAM_ID_WSCN_FILT_LIST                        (10)
#define WINC_CFG_PARAM_ID_WSCN_SCAN_RESULTS                     (20)
#define WINC_CFG_PARAM_ID_WSTA_SSID                             (1)
#define WINC_CFG_PARAM_ID_WSTA_SEC_TYPE                         (2)
#define WINC_CFG_PARAM_ID_WSTA_CREDENTIALS                      (3)
#define WINC_CFG_PARAM_ID_WSTA_CHANNEL                          (4)
#define WINC_CFG_PARAM_ID_WSTA_BSSID                            (5)
#define WINC_CFG_PARAM_ID_WSTA_CONN_TIMEOUT                     (7)
#define WINC_CFG_PARAM_ID_WSTA_NETIF_IDX                        (8)
#define WINC_CFG_PARAM_ID_WSTA_TLS_CONF                         (20)
#define WINC_CFG_PARAM_ID_WSTA_TLS_EAP_METHOD                   (21)
#define WINC_CFG_PARAM_ID_WSTA_TLS_IDENT                        (22)
#define WINC_CFG_PARAM_ID_WSTA_TLS_MSCHV2_UN                    (25)
#define WINC_CFG_PARAM_ID_WSTA_TLS_MSCHV2_PW                    (26)
#define WINC_CFG_PARAM_ID_WSTA_MFP_TYPE                         (50)
#define WINC_CFG_PARAM_ID_WSTA_WPA3_TD                          (51)
#define WINC_CFG_PARAM_ID_WPROV_PORT                            (1)
#define WINC_CFG_PARAM_ID_WPROV_ASCII                           (2)
#define WINC_CFG_PARAM_ID_DI_DEVICE_ID                          (1)
#define WINC_CFG_PARAM_ID_DI_NUM_IMAGES                         (14)
#define WINC_CFG_PARAM_ID_DI_IMAGE_INFO                         (15)
#define WINC_CFG_PARAM_ID_WIFI_REGDOMAIN_SELECTED               (10)
#define WINC_CFG_PARAM_ID_WIFI_REGDOMAIN_AVAILABLE              (11)
#define WINC_CFG_PARAM_ID_WIFI_POWERSAVE                        (20)
#define WINC_CFG_PARAM_ID_WIFI_COEX_ENABLED                     (30)
#define WINC_CFG_PARAM_ID_WIFI_COEX_INTERFACE_TYPE              (31)
#define WINC_CFG_PARAM_ID_WIFI_COEX_WLAN_RX_VS_BT               (32)
#define WINC_CFG_PARAM_ID_WIFI_COEX_WLAN_TX_VS_BT               (33)
#define WINC_CFG_PARAM_ID_WIFI_COEX_ANTENNA_MODE                (34)

#define WINC_CFG_PARAM_ID_CFG_DEVICE_NAME_SZ                    (32)
#define WINC_CFG_PARAM_ID_CFG_BUILD_HASH_SZ                     (5)
#define WINC_CFG_PARAM_ID_MQTT_BROKER_ADDR_SZ                   (64)
#define WINC_CFG_PARAM_ID_MQTT_CLIENT_ID_SZ                     (48)
#define WINC_CFG_PARAM_ID_MQTT_USERNAME_SZ                      (128)
#define WINC_CFG_PARAM_ID_MQTT_PASSWORD_SZ                      (256)
#define WINC_CFG_PARAM_ID_MQTTPROP_CONTENT_TYPE_SZ              (16)
#define WINC_CFG_PARAM_ID_MQTTPROP_RESP_TOPIC_SZ                (16)
#define WINC_CFG_PARAM_ID_MQTTPROP_CORRELATION_DATA_SZ          (16)
#define WINC_CFG_PARAM_ID_MQTTPROP_ASSIGNED_CLIENT_ID_SZ        (32)
#define WINC_CFG_PARAM_ID_MQTTPROP_RESP_INFO_SZ                 (16)
#define WINC_CFG_PARAM_ID_MQTTPROP_SERVER_REF_SZ                (16)
#define WINC_CFG_PARAM_ID_MQTTPROP_REASON_STR_SZ                (32)
#define WINC_CFG_PARAM_ID_NETIF_NAME_SZ                         (16)
#define WINC_CFG_PARAM_ID_NETIF_HOSTNAME_SZ                     (16)
#define WINC_CFG_PARAM_ID_SNTP_NTP_SVR_SZ                       (128)
#define WINC_CFG_PARAM_ID_TLS_CTX_CA_CERT_NAME_SZ               (32)
#define WINC_CFG_PARAM_ID_TLS_CTX_CERT_NAME_SZ                  (32)
#define WINC_CFG_PARAM_ID_TLS_CTX_PRI_KEY_NAME_SZ               (32)
#define WINC_CFG_PARAM_ID_TLS_CTX_PRI_KEY_PASSWORD_SZ           (32)
#define WINC_CFG_PARAM_ID_TLS_CTX_SERVER_NAME_SZ                (64)
#define WINC_CFG_PARAM_ID_TLS_CTX_DOMAIN_NAME_SZ                (32)
#define WINC_CFG_PARAM_ID_WAP_SSID_SZ                           (32)
#define WINC_CFG_PARAM_ID_WAP_CREDENTIALS_SZ                    (128)
#define WINC_CFG_PARAM_ID_WSTA_SSID_SZ                          (32)
#define WINC_CFG_PARAM_ID_WSTA_CREDENTIALS_SZ                   (128)
#define WINC_CFG_PARAM_ID_WIFI_REGDOMAIN_SELECTED_SZ            (6)
#define WINC_CFG_PARAM_ID_WIFI_REGDOMAIN_AVAILABLE_SZ           (6)

#define WINC_CFG_PARAM_ID_DNS_DNS_SVR_NUM                       (2)
#define WINC_CFG_PARAM_ID_MQTTPROP_USER_PROP_NUM                (10)
#define WINC_CFG_PARAM_ID_MQTTPROP_USER_PROP_NUM                (10)
#define WINC_CFG_PARAM_ID_NETIF_IPV6_GLO_ADDR_NUM               (2)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_NUM             (32)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_AVAIL_NUM       (32)
#define WINC_CFG_PARAM_ID_WSCN_FILT_LIST_NUM                    (4)
#define WINC_CFG_PARAM_ID_WSCN_SCAN_RESULTS_NUM                 (8)
#define WINC_CFG_PARAM_ID_DI_IMAGE_INFO_NUM                     (2)
#define WINC_CFG_PARAM_ID_WIFI_REGDOMAIN_AVAILABLE_NUM          (6)

#define WINC_CFG_PARAM_ID_DHCPS_POOL_LEASES_MIN                 (0)
#define WINC_CFG_PARAM_ID_DHCPS_POOL_LEASES_MAX                 (65535)
#define WINC_CFG_PARAM_ID_DHCPS_NETIF_IDX_MIN                   (0)
#define WINC_CFG_PARAM_ID_DHCPS_NETIF_IDX_MAX                   (1)
#define WINC_CFG_PARAM_ID_DNS_DNS_TIMEOUT_MIN                   (0)
#define WINC_CFG_PARAM_ID_DNS_DNS_TIMEOUT_MAX                   (65535)
#define WINC_CFG_PARAM_ID_MQTT_BROKER_PORT_MIN                  (0)
#define WINC_CFG_PARAM_ID_MQTT_BROKER_PORT_MAX                  (65535)
#define WINC_CFG_PARAM_ID_MQTT_KEEP_ALIVE_MIN                   (0)
#define WINC_CFG_PARAM_ID_MQTT_KEEP_ALIVE_MAX                   (32767)
#define WINC_CFG_PARAM_ID_MQTT_TLS_CONF_MIN                     (0)
#define WINC_CFG_PARAM_ID_MQTT_TLS_CONF_MAX                     (1)
#define WINC_CFG_PARAM_ID_MQTT_READ_THRESHOLD_MIN               (0)
#define WINC_CFG_PARAM_ID_MQTT_READ_THRESHOLD_MAX               (65535)
#define WINC_CFG_PARAM_ID_SOCK_SO_KEEPALIVE_MIN                 (0)
#define WINC_CFG_PARAM_ID_SOCK_SO_KEEPALIVE_MAX                 (65535)
#define WINC_CFG_PARAM_ID_SOCK_SO_RCVBUF_MIN                    (1460)
#define WINC_CFG_PARAM_ID_SOCK_SO_RCVBUF_MAX                    (32768)
#define WINC_CFG_PARAM_ID_SOCK_SO_SNDBUF_MIN                    (1460)
#define WINC_CFG_PARAM_ID_SOCK_SO_SNDBUF_MAX                    (32768)
#define WINC_CFG_PARAM_ID_TLS_CTX_CIPHER_SUITES_IDX_MIN         (1)
#define WINC_CFG_PARAM_ID_TLS_CTX_CIPHER_SUITES_IDX_MAX         (2)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_MIN             (1)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_MAX             (65535)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_AVAIL_MIN       (1)
#define WINC_CFG_PARAM_ID_TLS_CSL_CIPHER_SUITES_AVAIL_MAX       (65535)
#define WINC_CFG_PARAM_ID_WAP_CHANNEL_MIN                       (1)
#define WINC_CFG_PARAM_ID_WAP_CHANNEL_MAX                       (13)
#define WINC_CFG_PARAM_ID_WAP_NETIF_IDX_MIN                     (0)
#define WINC_CFG_PARAM_ID_WAP_NETIF_IDX_MAX                     (1)
#define WINC_CFG_PARAM_ID_WAP_REKEY_INTERVAL_MIN                (60)
#define WINC_CFG_PARAM_ID_WAP_REKEY_INTERVAL_MAX                (86400)
#define WINC_CFG_PARAM_ID_WSCN_CHANNEL_MIN                      (1)
#define WINC_CFG_PARAM_ID_WSCN_CHANNEL_MAX                      (13)
#define WINC_CFG_PARAM_ID_WSCN_ACT_SLOT_TIME_MIN                (0)
#define WINC_CFG_PARAM_ID_WSCN_ACT_SLOT_TIME_MAX                (65535)
#define WINC_CFG_PARAM_ID_WSCN_PASV_SLOT_TIME_MIN               (0)
#define WINC_CFG_PARAM_ID_WSCN_PASV_SLOT_TIME_MAX               (65535)
#define WINC_CFG_PARAM_ID_WSCN_NUM_SLOTS_MIN                    (0)
#define WINC_CFG_PARAM_ID_WSCN_NUM_SLOTS_MAX                    (255)
#define WINC_CFG_PARAM_ID_WSCN_PROBES_PER_SLOT_MIN              (0)
#define WINC_CFG_PARAM_ID_WSCN_PROBES_PER_SLOT_MAX              (255)
#define WINC_CFG_PARAM_ID_WSCN_RSSI_THRESH_MIN                  (-128)
#define WINC_CFG_PARAM_ID_WSCN_RSSI_THRESH_MAX                  (127)
#define WINC_CFG_PARAM_ID_WSTA_CHANNEL_MIN                      (0)
#define WINC_CFG_PARAM_ID_WSTA_CHANNEL_MAX                      (13)
#define WINC_CFG_PARAM_ID_WSTA_CONN_TIMEOUT_MIN                 (0)
#define WINC_CFG_PARAM_ID_WSTA_CONN_TIMEOUT_MAX                 (2147483647)
#define WINC_CFG_PARAM_ID_WSTA_NETIF_IDX_MIN                    (0)
#define WINC_CFG_PARAM_ID_WSTA_NETIF_IDX_MAX                    (1)
#define WINC_CFG_PARAM_ID_WPROV_PORT_MIN                        (1)
#define WINC_CFG_PARAM_ID_WPROV_PORT_MAX                        (65535)

#define WINC_CMD_PARAM_ID_DNS_DOMAIN_NAME_SZ                    (128)
#define WINC_CMD_PARAM_ID_FS_FILENAME_SZ                        (32)
#define WINC_CMD_PARAM_ID_SOCKET_DATA_WR_SZ                     (1460)
#define WINC_CMD_PARAM_ID_SOCKET_DATA_WRTO_SZ                   (1472)

typedef enum
{
    WINC_TYPE_INVALID                = 0,

    // STATUS: 2 bytes: <MODULE_ID> | <MSG_ID>
    WINC_TYPE_STATUS                 = 1,

    // INTEGER: 1 to 4 bytes: MSB first (big-endian)
    WINC_TYPE_INTEGER                = 2,

    // INTEGER_UNSIGNED: 1 to 4 bytes: MSB first (big-endian)
    WINC_TYPE_INTEGER_UNSIGNED       = 3,

    // INTEGER_FRAC: 4 bytes: 2 byte integer part followed by 2 byte fractional part (big-endian)
    WINC_TYPE_INTEGER_FRAC           = 4,

    // STRING: ASCII bytes, no termination
    WINC_TYPE_STRING                 = 5,

    // BYTE_ARRAY: Unformatted array of bytes
    WINC_TYPE_BYTE_ARRAY             = 6,

    // LABEL: Alphanumeric bytes
    WINC_TYPE_LABEL                  = 7,

    /* IPV4ADDR:
       4 bytes: MSB first IPv4 address A1|A2|A3|A4 = A1.A2.A3.A4
       8 bytes: MSB first IPv4 address and netmask A1|A2|A3|A4|M1|M2|M3|M4 = A1.A2.A3.A4 + M1.M2.M3.M4 */
    WINC_TYPE_IPV4ADDR               = 8,

    /* IPV6ADDR:
       16 bytes: MSB first IPv6 address A1|...|A16 = A1A2::A15A16
       17 bytes: MSB first IPv6 address and scope A1|...|A16 | M1 = A1A2::A15A16/M1 */
    WINC_TYPE_IPV6ADDR               = 9,

    // BOOL: Single byte: 0 or 1
    WINC_TYPE_BOOL                   = 10,

    // MACADDR: 6 bytes: MSB first MAC address A1|...|A6 = A1:A2:A3:A4:A5:A6
    WINC_TYPE_MACADDR                = 11,

    // UTC_TIME: 4 bytes: MSB first UTC seconds
    WINC_TYPE_UTC_TIME               = 12,
} WINC_TYPE;

typedef enum
{

    // REQ: <COMMAND_REQUEST> followed by [N*<TLV_ELEMENT>] parameters
    WINC_COMMAND_MSG_TYPE_REQ        = 0,

    // STATUS: <COMMAND_RESPONSE> with <COMMAND_RSP_STATUS> option
    WINC_COMMAND_MSG_TYPE_STATUS     = 1,

    // RSP: <COMMAND_RESPONSE> with <COMMAND_RSP_DATA> option containing [N, N*<TLV_ELEMENT>] elements
    WINC_COMMAND_MSG_TYPE_RSP        = 2,

    // AEC: <COMMAND_RESPONSE> with <COMMAND_RSP_DATA> option containing [N, N*<TLV_ELEMENT>] elements
    WINC_COMMAND_MSG_TYPE_AEC        = 3,
} WINC_COMMAND_MSG_TYPE;

typedef struct
{
    uint8_t  type;                               // WINC_TYPE
    uint8_t  flags;
    uint8_t  length_h;                           // uint16_t (high byte)
    uint8_t  length_l;                           // uint16_t (low byte)
    uint8_t  data[];
} WINC_TLV_ELEMENT;

typedef struct
{
    uint8_t  numTlvs;
    uint8_t  tlvs[];                             // WINC_TLV_ELEMENT
} WINC_RSP_ELEMENTS;

typedef struct
{
    uint8_t  msgType;                            // WINC_COMMAND_MSG_TYPE
    uint8_t  id_h;                               // uint16_t (high byte)
    uint8_t  id_l;                               // uint16_t (low byte)
    uint8_t  seqNum_h;                           // uint16_t (high byte)
    uint8_t  seqNum_l;                           // uint16_t (low byte)
    uint8_t  numParams;
    uint8_t  length_h;                           // uint16_t (high byte)
    uint8_t  length_l;                           // uint16_t (low byte)
    uint8_t  params[];                           // WINC_TLV_ELEMENT
} WINC_COMMAND_REQUEST;

typedef struct
{
    uint8_t  msgType;                            // WINC_COMMAND_MSG_TYPE
    uint8_t  id_h;                               // uint16_t (high byte)
    uint8_t  id_l;                               // uint16_t (low byte)
    uint8_t  seqNum_h;                           // uint16_t (high byte)
    uint8_t  seqNum_l;                           // uint16_t (low byte)
    union
    {
        // WINC_COMMAND_RSP_DATA
        struct
        {
            uint8_t  rspId_h;                    // uint16_t (high byte)
            uint8_t  rspId_l;                    // uint16_t (low byte)
            uint8_t  length_h;                   // uint16_t (high byte)
            uint8_t  length_l;                   // uint16_t (low byte)
            uint8_t  elements[];                 // WINC_RSP_ELEMENTS
        } rsp;

        // WINC_COMMAND_RSP_STATUS
        struct
        {
            uint8_t  status_h;                   // uint16_t (high byte)
            uint8_t  status_l;                   // uint16_t (low byte)
        } status;

    } payload;
} WINC_COMMAND_RESPONSE;

#endif /* _MICROCHIP_PIC32MZW2_NC_INTF_H */
