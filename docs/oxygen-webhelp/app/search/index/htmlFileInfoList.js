define(function () {
return ["GUID-003633FA-D0EE-4D3E-A716-5E98DAA38F02.html@@@1.2.6.3 WDRV_PIC32MZW_ASSOC_HANDLE; Typedef@@@typedef uintptr_t WDRV_PIC32MZW_ASSOC_HANDLE; A handle representing an association instance. An association handle references a single association instance between AP and STA. None...","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-02ED2A09-D42F-4CD2-B87A-FE433F01370D.html@@@1.1.8.8 WDRV_WINC_IPDNSServerAddressSet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPDNSServerAddressSet ( DRV_HANDLE handle, uint32_t dnsServerAddress ) Configures the DNS server address. Disables DHCP on the WINC and assigns a static DNS address. The...","GUID-031836CF-94FC-442B-B7E8-45F3E66649D1.html@@@1.2.3.5 WDRV_PIC32MZW_BSSFindGetInfo Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindGetInfo ( DRV_HANDLE handle, WDRV_PIC32MZW_BSS_INFO * const pBSSInfo ) Requests the information structure of the current BSS scan result. After each call to...","GUID-0459459F-E39F-4FB8-B936-C97285F171CA.html@@@1.1.8.13 WDRV_WINC_SocketRegisterResolverCallback Function@@@WDRV_WINC_STATUS WDRV_WINC_SocketRegisterResolverCallback ( DRV_HANDLE handle, tpfAppResolveCb pfAppResolveCb ) Register an event callback for DNS resolver events. DNS resolver events are dispatched...","GUID-05AADD1D-076A-4AB2-8465-29237FE131A4.html@@@1.1.14.7 WDRV_WINC_SSLECCHandShakeRsp Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLECCHandShakeRsp ( DRV_HANDLE handle, WINC_WDRV_ECC_REQ_TYPE reqType, WINC_WDRV_ECC_STATUS status, const WDRV_WINC_ECC_HANDSHAKE_INFO * const pHandshakeData, const...","GUID-05DB8121-0E91-4E8A-AE77-8A0405604950.html@@@1.2.2 Client Open/Close APIs@@@The PIC32MZW1 Wi-Fi module consists of two instances, a control instance and a data instance. The control instance is driven as a conventional Harmony system interface by the system kernel or...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-07F5A862-34A2-4A48-B24D-3A6966AC24A4.html@@@1.1.5.1 WDRV_WINC_BSSFIND_NOTIFY_CALLBACK Typedef@@@typedef bool (*WDRV_WINC_BSSFIND_NOTIFY_CALLBACK) Callback to signal discovery of a BSS. When the information about a discovered BSS is requested the driver will use this callback to provide the BSS...","GUID-08FC43FF-5ACA-46F3-AEA6-8F5EFAD077EB.html@@@1.2.12.3 WDRV_PIC32MZW_CONN_STATE Enum@@@typedef enum { /* Association state is disconnected. */ WDRV_PIC32MZW_CONN_STATE_DISCONNECTED, /* Association state is connecting. */ WDRV_PIC32MZW_CONN_STATE_CONNECTING, /* Association state is...","GUID-09435DF1-6BFB-4272-8CF8-2DD702F32D09.html@@@1.2.5.3 WDRV_PIC32MZW_AUTH_TYPE Enum@@@typedef enum { /* This type may be used in helper function * WDRV_PIC32MZW_AuthCtxSetPersonal, in which case it is translated into * the best practice auth type. Other uses of this type are invalid...","GUID-094BA77A-E430-4C1F-B051-58848BE93F9D.html@@@1.2.2.3 WDRV_PIC32MZW_Close Function@@@void WDRV_PIC32MZW_Close (DRV_HANDLE handle) Closes an instance of the PIC32MZW driver. This is the function that closes an instance of the MAC. All per client data is released and the handle can no...","GUID-0A67F966-29BA-410D-8D51-EF1CAF875F33.html@@@1.1.3.8 WDRV_WINC_AssocSSIDGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocSSIDGet ( DRV_HANDLE handle, WDRV_WINC_SSID * const pSSID, WDRV_WINC_ASSOC_CALLBACK const pfAssociationInfoCB ) Retrieve the current association SSID. Attempts to...","GUID-0AEDA27D-A7D4-4DAA-8A8F-4CB3146CFB62.html@@@1.2.2.4 WDRV_PIC32MZW_StatusExt Function@@@WDRV_PIC32MZW_SYS_STATUS WDRV_PIC32MZW_StatusExt (SYS_MODULE_OBJ object) Provides the extended system status of the PIC32MZW driver module. This function provides the extended system status of the...","GUID-0B377484-72D9-4299-AE14-DFBE284E0BC3.html@@@1.1.6.1 WDRV_WINC_AuthCtxIsValid Function@@@bool WDRV_WINC_AuthCtxIsValid ( const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx) Tests if an authentication context is valid. Tests the elements of the authentication context to judge if their values...","GUID-0EB59C36-8667-47E0-BB7E-585BA68CFC88.html@@@1.1.5.2 WDRV_WINC_BSSFindFirst Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindFirst ( DRV_HANDLE handle, WDRV_WINC_CHANNEL_ID channel, bool active, const WDRV_WINC_SSID_LIST * const pSSIDList, const WDRV_WINC_BSSFIND_NOTIFY_CALLBACK...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-104E40C1-F4A9-499B-A870-1A65C35EF5C1.html@@@1.2.10.2 WDRV_PIC32MZW_REGDOMAIN_SELECT Enum@@@typedef enum { WDRV_PIC32MZW_REGDOMAIN_SELECT_NONE, WDRV_PIC32MZW_REGDOMAIN_SELECT_CURRENT, WDRV_PIC32MZW_REGDOMAIN_SELECT_ALL } WDRV_PIC32MZW_REGDOMAIN_SELECT; Defines possible selections of...","GUID-10E4E4C5-848E-45F6-ABDB-2819383B122D.html@@@1.1.13.3 WDRV_WINC_BSSDisconnect Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSDisconnect (DRV_HANDLE handle) Disconnects from a BSS. Disconnects from an existing BSS. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been...","GUID-118D6516-8539-44C8-9655-2A37845C9849.html@@@1.2.5.5 WDRV_PIC32MZW_AuthCtxIsValid Function@@@bool WDRV_PIC32MZW_AuthCtxIsValid ( const WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx) Tests if an authentication context is valid. Tests the elements of the authentication context to judge if their...","GUID-11E4FD9C-17E6-4F65-AE7A-6550EB45E118.html@@@1.2 MPLAB\u00AE Harmony PIC32MZW1 WLAN Library@@@The PIC32MZW1 Wi-Fi module consists of two instances, a control instance and a data instance. The control instance is driven as a conventional Harmony system interface by the system kernel or...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-133ADB94-CBF7-48A3-A644-A3C5D73F6D06.html@@@1.2.4.5 WDRV_PIC32MZW_BSSCtxIsValid Function@@@bool WDRV_PIC32MZW_BSSCtxIsValid ( const WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, bool ssidValid ) Tests if a BSS context is valid. Tests the elements of the BSS context to judge if their values are...","GUID-146944D1-7D0A-4266-854C-D839862B736B.html@@@1.1.12.7 WDRV_WINC_CustIEStoreCtxRemoveIE Function@@@WDRV_WINC_STATUS WDRV_WINC_CustIEStoreCtxRemoveIE ( WDRV_WINC_CUST_IE_STORE_CONTEXT * const pCustIECtx, uint8_t id ) Removes data from the custom IE store. This function removes a custom IE from the...","GUID-14E56CEC-4DA0-4224-B7C3-DD36BD3E79E2.html@@@1.2.3.8 WDRV_PIC32MZW_BSSFindNext Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindNext ( DRV_HANDLE handle, WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the next scan results be provided. The information structure of the...","GUID-162AD5A9-148E-430D-AA31-347A7A68CD96.html@@@1.1.12.5 WDRV_WINC_CUST_IE_STORE_CONTEXT Struct@@@typedef struct { /* Maximum length of the IE store data. */ uint8_t maxLength; /* Current length of data in the store. */ uint8_t curLength; /* IE data in store. */ uint8_t ieData[]; }...","GUID-17871A56-C6F1-48C2-8AC7-D046367FC6FB.html@@@1.1.14.8 WDRV_WINC_SSLECCReqCallbackSet Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLECCReqCallbackSet ( DRV_HANDLE handle, WDRV_WINC_REQ_ECC_CALLBACK pfECCREQCallback ) Set the ECC request callback. Registers the ECC request callback with the driver...","GUID-1A16AFB9-0845-42CE-A604-361A3C412DED.html@@@1.1.10 Power Save Control@@@This topic provides information on how to control the power save modes of the WINC devices. The application can set and get the current power save mode of the WINC device using the functions...","GUID-1A48B726-35D9-4E22-B034-1B6B6817DD6D.html@@@1.1.12.6 WDRV_WINC_CustIEStoreCtxAddIE Function@@@WDRV_WINC_STATUS WDRV_WINC_CustIEStoreCtxAddIE ( WDRV_WINC_CUST_IE_STORE_CONTEXT * const pCustIECtx, uint8_t id, const uint8_t * const pData, uint8_t dataLength ) Add data to the custom IE store. The...","GUID-1B8A0623-FBC3-46A4-B1A5-4CB7C607899A.html@@@1.2.5.8 WDRV_PIC32MZW_AuthCtxSetOpen Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetOpen ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx ) Configure an authentication context for Open authentication. The auth type and information are...","GUID-1CD690A6-5D93-4C13-9EB1-EC8B7F33CF4D.html@@@1.2.5.4 WDRV_PIC32MZW_AuthCtxConfigureMfp Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxConfigureMfp ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, WDRV_PIC32MZW_AUTH_MFP_CONFIG config ) Set the Management Frame Protection configuration of an...","GUID-21224849-4465-4BA5-80C4-ED03DF1E9AC7.html@@@1.1.15.7 WDRV_WINC_UTCToLocalTime Function@@@bool WDRV_WINC_UTCToLocalTime (uint32_t timeUTC, tstrSystemTime * const pSysTime) Convert UTC time to local system time. Converts UTC time into the local system time structure format. None. Param...","GUID-214624A4-2C2B-4A50-BE42-92CEBF57DAC5.html@@@1.1.12.1 WDRV_WINC_APSetCustIE Function@@@WDRV_WINC_STATUS WDRV_WINC_APSetCustIE ( DRV_HANDLE handle, const WDRV_WINC_CUST_IE_STORE_CONTEXT * const pCustIECtx ) Configures the custom IE. Soft-AP beacons may contain a application provided...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-218B5D0A-233A-4F9A-B771-1C7B7CA01C37.html@@@1.2.12.8 WDRV_PIC32MZW_InfoRfMacConfigGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoRfMacConfigGet ( DRV_HANDLE handle, WDRV_PIC32MZW_RF_MAC_CONFIG * const pRfMacConfig ) Retrieves the RF and MAC configuration of the PIC32MZW. Retrieves the...","GUID-21FC15BA-6E5E-4210-B81A-A0DED32516AD.html@@@1.1.9.2 WDRV_WINC_NVMEraseSector Function@@@WDRV_WINC_STATUS WDRV_WINC_NVMEraseSector ( DRV_HANDLE handle, WDRV_WINC_NVM_REGION region, uint8_t startSector, uint8_t numSectors ); Erase a sector within an NVM region. Erases a number of sectors...","GUID-222005DE-D1BE-4FB6-8648-B96294057BA8.html@@@1.1.15.4 WDRV_WINC_SystemTimeSNTPClientDisable Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSNTPClientDisable (DRV_HANDLE handle); Disable the SNTP client. Disables the SNTP client used to set the system time. WDRV_WINC_Initialize should have been called...","GUID-2335ACBC-3CA0-4AE1-A842-59F55DC0B149.html@@@1.1.6.7 WDRV_WINC_AuthCtxSetWPAEnterpriseTLS Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWPAEnterpriseTLS ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const char * const pUserDomain, const uint8_t * const pPrivateKey, const uint16_t privateKeyLength...","GUID-237690AC-9D9D-4CE1-A4BE-BE2A0A41ABE1.html@@@1.1.6.12 WDRV_WINC_HTTPProvCtxSetDomainName Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetDomainName ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx, const char * const pname ) Define the DNS domain name for the provisioning server. This defines...","GUID-2486F605-C69E-4182-B038-F6EE43956CD2.html@@@1.1.15.6 WDRV_WINC_SYSTIME_CURRENT_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SYSTIME_CURRENT_CALLBACK) Callback returning the system time. Callback returning the system time. The time is returned as UTC seconds since 01/01/1970. None...","GUID-271CC4C5-196A-4BF0-BAF9-9A95284A87D7.html@@@1.2.1.1 WDRV_PIC32MZW_SYS_INIT Struct@@@typedef struct { /* Pointer to Crypt RNG context. */ CRYPT_RNG_CTX *pCryptRngCtx; /* Pointer to regulatory domain string. */ char * const pRegDomName; /* Power-Save Mode. */...","GUID-280694C4-227F-4691-BEF1-FB6365B3CD28.html@@@1.2.7 Client Interface - STA mode APIs@@@The PIC32MZW1 device can connect to a BSS as a Wi-Fi station device. To connect to a BSS the function WDRV_PIC32MZW_BSSConnect can be called, this takes two contexts which provide information about...","GUID-2837E642-4901-446E-B0F5-8EE66291BCFC.html@@@1.2.10 Regulatory Domain Selection APIs@@@NOTE: There are restrictions on use of this API especially related to any exposure of this functionality to an end user. Please refer to the Radio Performance section of the Datasheet\u201D...","GUID-2A173EAE-1DB4-418C-A805-C68BE939178D.html@@@1.2.4.10 WDRV_PIC32MZW_BSSCtxSetSSIDVisibility Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetSSIDVisibility ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, bool visible ) Configures the visibility of the BSS context. Specific to Soft-AP mode this flag...","GUID-2C5CEB80-077C-4EB2-A2D5-9EF849C1F2F2.html@@@1.2.2.2 WDRV_PIC32MZW_Open Function@@@DRV_HANDLE WDRV_PIC32MZW_Open ( const SYS_MODULE_INDEX index, const DRV_IO_INTENT intent) Opens an instance of the PIC32MZW driver. Opens an instance of the PIC32MZW driver and returns a handle which...","GUID-2C98CE0C-BC5E-4875-842C-2D591C000F85.html@@@1.1.6.5 WDRV_WINC_AuthCtxSetWPA Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWPA ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, uint8_t * const pPSK, uint8_t size ) Configure an authentication context for WPA-PSK authentication. The type and...","GUID-2D39B442-09EA-47D9-A710-67904FC4DA4F.html@@@1.2.8.4 WDRV_PIC32MZW_APRekeyIntervalSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APRekeyIntervalSet ( DRV_HANDLE handle, const uint32_t interval ) Configures the group re-key interval used when operating in Soft-AP mode The re-key interval...","GUID-2EE5E09F-F7A3-4B3A-9CEE-DB7F52840E02.html@@@1.2.11 Vendor IE API Implementation@@@...","GUID-2FAD3653-78B4-42A4-89A3-D1F492AE27A0.html@@@1.1.7 Client Interaction@@@This topic provides information on general client operation. General Client Operation For the application to begin using an instance of the WINC module, it must call the WDRV_WINC_Open function. This...","GUID-30254EA1-9A20-4F0A-BB0C-50F3C5CE24D5.html@@@1.2.11.1 WDRV_PIC32MZW_IE_FRAME_TYPE_MASK Enum@@@typedef enum { /* If set in Tx API, the custom IE data provided by the application will be * added to the beacon frames while transmitting beacons. If set in Rx API, * the vendor specific IE data from...","GUID-313368DE-CCC8-459C-99DE-47762D5731CC.html@@@1.1.7.1 WDRV_WINC_Close Function@@@void WDRV_WINC_Close (DRV_HANDLE handle) Closes an instance of the WINC driver. This is the function that closes an instance of the MAC. All per client data is released and the handle can no longer be...","GUID-31497D4C-2D61-42B6-8218-BBB69E77EE97.html@@@1.1.11.4 WDRV_WINC_Status Function@@@SYS_STATUS WDRV_WINC_Status (SYS_MODULE_OBJ object) Provides the current status of the WINC driver module. This function provides the current status of the WINC driver module. WDRV_WINC_Initialize...","GUID-339C64DA-F57A-42E4-8018-96013D179999.html@@@1.1.15 System Time Control@@@This topic provides information on how the WINC system time can be controlled and queried. The WINC device maintains a system time internally. Time can be set in two ways, by an NTP query from the...","GUID-34039A6A-F27D-4BF6-BD76-9F47983D235A.html@@@1.1.12.2 WDRV_WINC_APStart Function@@@WDRV_WINC_STATUS WDRV_WINC_APStart ( DRV_HANDLE handle, const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const WDRV_WINC_HTTP_PROV_CONTEXT * const...","GUID-35AEB7EE-B0EA-45A7-884F-6C1A05971FBF.html@@@1.1.5.11 WDRV_WINC_BSSFindSetScanParameters Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetScanParameters ( DRV_HANDLE handle, uint8_t numSlots, uint8_t activeSlotTime, uint8_t passiveSlotTime, uint8_t numProbes ) Configures the scan operation. The scan...","GUID-3744A796-97FD-42E1-91E5-6AC2632D5607.html@@@1.1.6.3 WDRV_WINC_AuthCtxSetOpen Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetOpen ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) Configure an authentication context for Open authentication. The type and state information are configured...","GUID-38B98272-9F79-4E2B-8B1B-1BE940F6B02A.html@@@1.1.4 BLE Operation@@@This topic provides information on how ATWINC3400 BLE operations are controlled. The ATWINC3400 device includes BLE functionality, while this driver does not provide direct access to the BLE...","GUID-39D1EB75-81FB-421B-874F-D79CD542D967.html@@@1.1.9.3 WDRV_WINC_NVMRead Function@@@WDRV_WINC_STATUS WDRV_WINC_NVMRead ( DRV_HANDLE handle, WDRV_WINC_NVM_REGION region, void *pBuffer, uint32_t offset, uint32_t size ); Reads data from an NVM region. Reads the number of bytes specified...","GUID-3A5DC2A3-B246-4811-BC2F-4829FB487294.html@@@1.2.4.9 WDRV_PIC32MZW_BSSCtxSetSSID Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetSSID ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, uint8_t * const pSSID, uint8_t ssidLength ) Configures the SSID of the BSS context. The SSID string and...","GUID-3AD98956-9F94-46AE-9499-1EDAD7E191D9.html@@@1.2.4.7 WDRV_PIC32MZW_BSSCtxSetChannel Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetChannel ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, WDRV_PIC32MZW_CHANNEL_ID channel ) Configures the channel of the BSS context. The supplied channel...","GUID-3B687BA8-CC6B-4846-A782-129F1EBC470C.html@@@1.1.5 BSS Search@@@The application can use this interface to request a scan for local BSSs. Once requested the WINC device will conduct the search using the configured search parameters and report the results back to...","GUID-3D1E32DB-4425-4009-9267-8617566212CD.html@@@1.2.12.4 WDRV_PIC32MZW_GetStatistics Function@@@void WDRV_PIC32MZW_GetStatistics ( DRV_HANDLE handle, WDRV_PIC32MZW_MAC_MEM_STATISTICS *pStats ); Retrieves the static data of the PIC32MZW. Retrieves the static data of the PIC32MZW...","GUID-3E485907-2C41-4C9A-A5A9-BF00F332D046.html@@@1.1.16 WPS@@@This topic provides information on how to use WPS to connect to Wi-Fi BSSs. The WINC device supports WPS using PIN and PBC methods. Two functions are provided to begin WPS enrollee discovery using...","GUID-3FD559C0-0864-4DCE-A113-101288D32FE2.html@@@1.2.5.7 WDRV_PIC32MZW_AuthCtxSetEnterpriseTLS Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetEnterpriseTLS ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, const char * const pUserDomain, WDRV_PIC32MZW_TLS_CONTEXT_HANDLE tlsCtxHandle...","GUID-428BA90A-8569-4AF5-99EF-A915134BF434.html@@@1.2.3 Client - BSS Find APIs@@@The application can use this interface to request a scan for local BSSs. Once requested, the device will conduct the search using the configured search parameters and report the results back to the...","GUID-44FF5A20-CD27-40EC-9DBE-EE5848F6C6B2.html@@@1.1.8.7 WDRV_WINC_IPDHCPServerConfigure Function@@@WDRV_WINC_STATUS WDRV_WINC_IPDHCPServerConfigure ( DRV_HANDLE handle, uint32_t ipAddress, uint32_t netMask, WDRV_WINC_DHCP_ADDRESS_EVENT_HANDLER const pfDHCPAddressEventCallback ) Configures the...","GUID-4594F3F1-EA78-43B4-854F-36413FDD31C5.html@@@1.2.8 Client Interface - Soft AP mode APIs@@@The PIC32MZW1 device can create a Soft-AP allowing a Wi-Fi station device to connect to the PIC32MZW1. To create a Soft-AP the function WDRV_PIC32MZW_APStart is called. This function takes several...","GUID-46257952-2442-458D-9867-DA5BC4393601.html@@@1.1.16.1 WDRV_WINC_WPS_DISC_CALLBACK Typedef@@@typedef void (*WDRV_WINC_WPS_DISC_CALLBACK) Callback to report WPS discovery results. Callback to report WPS discovery results. None...","GUID-46F712DC-4824-449D-9199-9AF12D72B0BF.html@@@1.2.8.2 WDRV_PIC32MZW_APStart Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APStart ( DRV_HANDLE handle, const WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, const WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, const...","GUID-4B7527DC-12C4-4A41-8004-41415FF65DAB.html@@@1.2.1 System Interface APIs@@@The PIC32MZW1 Wi-Fi module consists of two instances, a control instance and a data instance. The control instance is driven as a conventional Harmony system interface by the system kernel or...","GUID-4CB9E571-2A08-47B5-B3F3-76C0CEB81767.html@@@1.1.8.6 WDRV_WINC_IPDefaultGatewaySet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPDefaultGatewaySet ( DRV_HANDLE handle, uint32_t gatewayAddress ) Configures the default gateway used by the WINC. Disables DHCP on the WINC and assigns a static default...","GUID-4D0F629D-36BF-4205-91F0-AC0118A3D665.html@@@1.1.11.3 WDRV_WINC_Reinitialize Function@@@void WDRV_WINC_Reinitialize ( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ) WINC driver reinitialization function. This is the function that re-initializes the WINC. It is called by the...","GUID-4D6BE8EC-13EC-4A94-ABDE-0605142C88B5.html@@@1.2.6.6 WDRV_PIC32MZW_AssocPeerAddressGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocPeerAddressGet ( WDRV_PIC32MZW_ASSOC_HANDLE assocHandle, WDRV_PIC32MZW_MAC_ADDR * const pPeerAddress ) Retrieve the current association peer device network...","GUID-4E25D2C0-21B1-43D6-B3F1-33DE1D7CDC6E.html@@@1.1.5.6 WDRV_WINC_BSSFindNext Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindNext ( DRV_HANDLE handle, WDRV_WINC_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the next scan results be provided. The information structure of the next BSS is...","GUID-4E5D2B7C-5BDC-4C23-8747-D530B99ECF63.html@@@1.2.10.5 WDRV_PIC32MZW_RegDomainSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_RegDomainSet ( DRV_HANDLE handle, const char *pRegDomain, const WDRV_PIC32MZW_REGDOMAIN_CALLBACK pfRegDomCallback ) Attempts to set the current regulatory domain...","GUID-4EC8AD6B-F2ED-4E18-965F-82C5B8A3028F.html@@@1.1 MPLAB\u00AE Harmony WINC WLAN Library@@@The MPLAB Harmony WINC Driver provides a high-level interface to the ATWINC1500 and ATWINC3400 Wi-Fi network controller modules. The WINC Driver Library, in conjunction with the ATWINC1500 or...","GUID-4FAD93E9-85FB-4180-908D-DDB94AB6F6BB.html@@@1.1.10.3 WDRV_WINC_PowerSaveSetBeaconInterval Function@@@WDRV_WINC_STATUS WDRV_WINC_PowerSaveSetBeaconInterval ( DRV_HANDLE handle, uint16_t numBeaconIntervals ) Configures the beacon listening interval. The beacon listening interval specifies how many...","GUID-5160F49B-444F-4D1A-A398-5207DEF78843.html@@@1.2.3.2 WDRV_PIC32MZW_SCAN_MATCH_MODE Enum@@@typedef enum { /* Stop scan on first match. */ WDRV_PIC32MZW_SCAN_MATCH_MODE_STOP_ON_FIRST, /* Scan for all matches. */ WDRV_PIC32MZW_SCAN_MATCH_MODE_FIND_ALL } WDRV_PIC32MZW_SCAN_MATCH_MODE; List of...","GUID-5195123C-F0F4-4B6F-8424-A8B39E368881.html@@@1.1.8.12 WDRV_WINC_SocketRegisterEventCallback Function@@@WDRV_WINC_STATUS WDRV_WINC_SocketRegisterEventCallback ( DRV_HANDLE handle, tpfAppSocketCb pfAppSocketCb ) Register an event callback for socket events. Socket events are dispatched to the application...","GUID-533D5ED2-D4A6-4D2D-96C2-F22F52395F72.html@@@1.2.12 Client - Information APIs@@@This interface provides general information about the device...","GUID-537E27A2-F053-4056-861D-7A2157C17DE6.html@@@1.2.12.6 WDRV_PIC32MZW_InfoEnabledChannelsGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoEnabledChannelsGet ( DRV_HANDLE handle, WDRV_PIC32MZW_CHANNEL24_MASK * const pChannelMask ) Retrieves the enabled channels of the PIC32MZW. Retrieves the enabled...","GUID-562FFC3B-E23F-423C-B72D-C2DE095DDB01.html@@@1.2.3.12 WDRV_PIC32MZW_BSSFindSetScanParameters Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindSetScanParameters ( DRV_HANDLE handle, uint8_t numSlots, uint16_t activeSlotTime, uint16_t passiveSlotTime, uint8_t numProbes ) Configures the scan operation...","GUID-577EB4F3-C11B-4D1A-BB91-0CFDB6EF6FB7.html@@@1.2.12.7 WDRV_PIC32MZW_InfoOpChanGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoOpChanGet ( DRV_HANDLE handle, uint8_t * const pMACAddress ) Retrieves the operating channel of the PIC32MZW. Retrieves the current operating channel...","GUID-579FADC9-118B-4DB9-8A61-89F87AAAB36F.html@@@1.1.12 Soft-AP@@@This topic provides information on how to operate a Soft AP. The WINC device can create a Soft-AP allowing a Wi-Fi station device to connect to the WINC. There are two forms of Soft-AP which can be...","GUID-59578B0F-C244-4349-9F81-8229B80F04E4.html@@@1.1.3.7 WDRV_WINC_AssocRSSIGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocRSSIGet ( DRV_HANDLE handle, int8_t * const pRSSI, WDRV_WINC_ASSOC_RSSI_CALLBACK const pfAssociationRSSICB ) Retrieve the current association RSSI. Attempts to retrieve...","GUID-5C692195-B523-4322-A373-4780486CD3AB.html@@@1.2.7.1 WDRV_PIC32MZW_BSSConnect Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSConnect ( DRV_HANDLE handle, const WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, const WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, const...","GUID-5E0FFB91-528B-46EF-A4CF-A205923C64E4.html@@@1.2.3.11 WDRV_PIC32MZW_BSSFindSetScanMatchMode Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindSetScanMatchMode ( DRV_HANDLE handle, WDRV_PIC32MZW_SCAN_MATCH_MODE matchMode ) Configures the scan matching mode. This function configures the matching mode...","GUID-5E4DE35D-0E4D-4D34-A4EF-4464B592F400.html@@@1.1.8.11 WDRV_WINC_IPUseDHCPSet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPUseDHCPSet ( DRV_HANDLE handle, const WDRV_WINC_DHCP_ADDRESS_EVENT_HANDLER pfDHCPAddressEventCallback ) Enables DHCP. Enables the use of DHCP by the WINC. This removes any...","GUID-5F105463-B28D-4D4E-BD09-365304360143.html@@@1.1.6.11 WDRV_WINC_HTTPProvCtxSetDefaults Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetDefaults ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx ) Initialize provisioning store. Ensure the provisioning store is initialized to appropriate...","GUID-5FEA436C-D1ED-49A2-A76F-230B2D381A4C.html@@@1.1.16.2 WDRV_WINC_WPSEnrolleeDiscoveryStartPBC Function@@@WDRV_WINC_STATUS WDRV_WINC_WPSEnrolleeDiscoveryStartPBC ( DRV_HANDLE handle, const WDRV_WINC_WPS_DISC_CALLBACK pfWPSDiscoveryCallback ) Start WPS discovery (Push Button). Starts the WPS discovery as...","GUID-60C12586-1616-42CB-85FB-DFC96C5D08A7.html@@@1.2.1.2 WDRV_PIC32MZW_SYS_STATUS Enum@@@typedef enum { /* RF initialisation is in progress*/ WDRV_PIC32MZW_SYS_STATUS_RF_INIT_BUSY = SYS_STATUS_READY_EXTENDED, /* RF configuration is missing */ WDRV_PIC32MZW_SYS_STATUS_RF_CONF_MISSING, /*...","GUID-616CDBC1-3935-4DBC-80FC-A5B9CE78ED13.html@@@1.1.3 Association Management@@@This topic provides information on Wi-Fi association management. The application can query information about the current Wi-Fi association by calling one of these interface functions. The requested...","GUID-62609FEA-0339-4187-9435-88CE00E65018.html@@@1.1.5.3 WDRV_WINC_BSSFindGetInfo Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindGetInfo ( DRV_HANDLE handle, WDRV_WINC_BSS_INFO * const pBSSInfo ) Requests the information structure of the current BSS scan result. After each call to either...","GUID-63404677-1C09-41F6-8D95-12C76CAA1BDE.html@@@1 MPLAB\u00AE Harmony 3 Wireless_wifi@@@This is the help page for the MPLAB\u00AE Harmony 3 Wireless_wifi solutions. Quickly incorporate connectivity to your designs with wireless ICs, modules, software and development kits that make connecting...","GUID-63DB669E-47A5-4F30-A608-EEC3B1E9F690.html@@@1.1.14.3 WDRV_WINC_SSLActiveCipherSuitesSet Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLActiveCipherSuitesSet ( DRV_HANDLE handle, WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx, WDRV_WINC_SSL_CIPHERSUITELIST_CALLBACK pfSSLListCallback ) Set the active...","GUID-66583817-8C3B-4CBE-9F01-E862ACDFAD70.html@@@1.1.8.5 WDRV_WINC_IPAddressSet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPAddressSet ( DRV_HANDLE handle, uint32_t ipAddress, uint32_t netMask ) Configures an IPv4 address. Disables DHCP on the WINC and assigns a static IPv4 address. The address...","GUID-668664E2-A646-4F05-9143-BAE55D2F1A47.html@@@1.1.14.10 WDRV_WINC_SSLRetrieveHash Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLRetrieveHash ( DRV_HANDLE handle, uint8_t *pHash, uint16_t hashSz ) Retrieve the certificate hash Retrieve the certificate hash from the WINC WDRV_WINC_Initialize should...","GUID-67EB0ECB-DB18-4725-9055-1567ADE75FD7.html@@@1.2.4.8 WDRV_PIC32MZW_BSSCtxSetDefaults Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetDefaults ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx ) Configures a BSS context into a default legal state. Ensures that each element of the structure is...","GUID-68449BC3-7664-4425-8DAB-120B78CC3C35.html@@@1.2.9.7 WDRV_PIC32MZW_PowerSaveSleepInactLimitSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveSleepInactLimitSet ( DRV_HANDLE handle, uint16_t u16SleepInactLimit ); Set the sleep inactivity(assoc-timeout) threshold/limit for power save operation (in...","GUID-692317EF-E19C-4FF1-A9C7-EF5346CB492C.html@@@1.2.9 802.11 Powersave API@@@...","GUID-69A54D14-EBFF-43BA-9C32-414181077D2D.html@@@1.2.5.9 WDRV_PIC32MZW_AuthCtxSetPersonal Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetPersonal ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, uint8_t *pPassword, uint8_t size, WDRV_PIC32MZW_AUTH_TYPE authType ) Configure an authentication...","GUID-69E04F49-B2F4-4793-9174-5B0D2D0A7C0F.html@@@1.1.3.1 WDRV_WINC_ASSOC_CALLBACK Typedef@@@typedef void (*WDRV_WINC_ASSOC_CALLBACK) Pointer to a callback to provide information about the current association. This data type defines a function callback to provide details of the SSID, network...","GUID-6AD186BA-5042-45A8-B0BC-1C26DA1904BA.html@@@1.2.1.6 WDRV_PIC32MZW_Status Function@@@SYS_STATUS WDRV_PIC32MZW_Status (SYS_MODULE_OBJ object) Provides the current status of the PIC32MZW driver module. This function provides the current status of the PIC32MZW driver module...","GUID-6B82A241-FF17-4820-B615-5688BFD6AC50.html@@@1.2.8.3 WDRV_PIC32MZW_APStop Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APStop (DRV_HANDLE handle) Stops an instance of Soft-AP. Stops an instance of Soft-AP. WDRV_PIC32MZW_Initialize should have been called. WDRV_PIC32MZW_Open should...","GUID-6BC88511-923D-4CFA-B5E5-6049DAC630CF.html@@@1.1.12.8 WDRV_WINC_CustIEStoreCtxSetStorage Function@@@WDRV_WINC_CUST_IE_STORE_CONTEXT* WDRV_WINC_CustIEStoreCtxSetStorage ( uint8_t * const pStorage, uint16_t lenStorage ) Initialize the custom IE store. The caller provides storage for the custom IE...","GUID-6C1D56BE-C531-4584-903E-B20EA545069E.html@@@1.2.3.1 WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK Typedef@@@typedef bool (*WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK) Callback to signal discovery of a BSS. When the information about a discovered BSS is requested the driver will use this callback to provide the...","GUID-70CC6D2C-E661-472B-A9FC-C8B2BAD88832.html@@@1.1.6.8 WDRV_WINC_HTTP_PROV_CONTEXT Struct@@@typedef struct { /* Flag indicating if any URL is mapped to the provisioning server. */ bool wildcardURL; /* Domain name of provisioning server. */ char domainName[ 64 + 1 ]; /* Pointer to callback to...","GUID-72234C45-8DB7-4B1A-A5D9-B45EE408CFEF.html@@@1.1.11 Setup & Initialization@@@This topic provides information on setup/initialization. The system performs the initialization of the device driver with settings that affect only the instance of the device that is being...","GUID-73035754-3012-47E9-A25A-8F9C8E9FE68E.html@@@1.2.11.3 WDRV_PIC32MZW_VENDORIE_INFO Struct@@@typedef struct { uint8_t sa[ 6 ]; int8_t rssi; WDRV_PIC32MZW_IE_FRAME_TYPE_MASK frameType; } WDRV_PIC32MZW_VENDORIE_INFO; Defines received vendor specific IE related information. Provides more...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-76364FA8-610F-4BB3-9C29-1E7474982DA1.html@@@1.1.8.1 WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER Typedef@@@typedef void (*WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER) Pointer to an ICMP echo response event handler function. This data type defines a function event handler which is called in response to an ICMP...","GUID-7754F32E-D105-41A5-A616-96D9F21EF2E6.html@@@1.2.5 Client Interface - Authentication Context APIs@@@The authentication context contains information relevant to the authentication mechanisms used in Wi-Fi. Currently supported are Open, WPA/WPA2/WPA3-Personal and WPA/WPA2/WPA3-Enterprise(EAP-TLS)...","GUID-78A366F1-25A1-48F4-8E56-7A4FE40964F7.html@@@1.2.9.5 WDRV_PIC32MZW_PowerSaveBroadcastTrackingSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveBroadcastTrackingSet ( DRV_HANDLE handle, bool dtimTracking ); Configures the WiFi broadcast traffic wake up behaviour. Configures if the WiFi should wake...","GUID-78C1D07E-0BA2-472F-8F67-C19B29C2FA50.html@@@1.1.8.9 WDRV_WINC_IPLinkActive Function@@@bool WDRV_WINC_IPLinkActive (DRV_HANDLE handle) Indicates state of IP link. Returns a flag indicating if the IP link is active or not. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open...","GUID-78DB111E-E79A-4370-AE52-C9CE06147971.html@@@1.1.8 Network Sockets and IP@@@This topic provides information on how to use the built in TCP/IP stack of the WINC devices. When operating in Socket mode the WINC devices run a small TCP/IP stack to offload the work from the host...","GUID-7A3FD52F-3099-49A8-A6AC-7461BC124ED8.html@@@1.1.6.9 WDRV_WINC_HTTPPROV_INFO_CALLBACK Typedef@@@typedef void (*WDRV_WINC_HTTPPROV_INFO_CALLBACK) HTTP provisioning callback for connect information. This callback is used to signal the desired SSID and authentication contexts selected via...","GUID-7CFA4233-3BEA-4D18-AB0D-36A346709A67.html@@@1.2.7.2 WDRV_PIC32MZW_BSSDisconnect Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSDisconnect (DRV_HANDLE handle) Disconnects from a BSS. Disconnects from an existing BSS. WDRV_PIC32MZW_Initialize should have been called. WDRV_PIC32MZW_Open...","GUID-7CFCDC19-0A74-4164-A437-BEFE7061053A.html@@@1.1.8.4 WDRV_WINC_IPAddressGet Function@@@uint32_t WDRV_WINC_IPAddressGet (DRV_HANDLE handle) Returns the current IPv4 address. Returns the current IPv4 address if configured. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open...","GUID-7E8B70A2-A1F9-4F83-89F8-5450933B7D77.html@@@1.1.6.10 WDRV_WINC_HTTPProvCtxSetConnectCallback Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetConnectCallback ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx, const WDRV_WINC_HTTPPROV_INFO_CALLBACK pfProvConnectInfoCB ) Defines the connection...","GUID-7E92DBD1-3ACE-40D5-A3D0-91FAEBA57E7E.html@@@1.2.8.1 WDRV_PIC32MZW_SEC_MASK Enum@@@typedef enum { /* AP supports WEP-40 or WEP-104, as standalone or as GTK with 11i TSN. */ WDRV_PIC32MZW_SEC_BIT_WEP = 0x01 , /* AP supports TKIP as GTK (if not WEP) and PTK. */...","GUID-7F977039-8978-42C8-B827-41D3F34D3DF5.html@@@1.1.10.2 WDRV_WINC_PowerSaveManualSleep Function@@@WDRV_WINC_STATUS WDRV_WINC_PowerSaveManualSleep ( DRV_HANDLE handle, uint32_t sleepTime ) Manual sleep power save operation. If the current power save mode is WDRV_WINC_PS_MODE_MANUAL the WINC can be...","GUID-7FA7287D-419D-46FD-8260-C519F4244966.html@@@1.1.16.4 WDRV_WINC_WPSEnrolleeDiscoveryStop Function@@@WDRV_WINC_STATUS WDRV_WINC_WPSEnrolleeDiscoveryStop (DRV_HANDLE handle) Stop WPS discovery. Stops the WPS discovery if it was started. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open...","GUID-81C3F83D-6E88-45F1-B6E2-C741D612AA1C.html@@@1.1.12.3 WDRV_WINC_APStop Function@@@WDRV_WINC_STATUS WDRV_WINC_APStop (DRV_HANDLE handle) Stops an instance of Soft-AP. Stops an instance of Soft-AP. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been called...","GUID-81D18119-F240-47CC-8CDA-1B9FDD83B822.html@@@1.2.3.4 WDRV_PIC32MZW_BSSFindFirst Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindFirst ( DRV_HANDLE handle, WDRV_PIC32MZW_CHANNEL_ID channel, bool active, const WDRV_PIC32MZW_SSID_LIST * const pSSIDList, const...","GUID-833E3062-0EF5-4C7B-90AA-244A02494757.html@@@1.1.6.13 WDRV_WINC_HTTPProvCtxSetURLWildcard Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetURLWildcard ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx, bool wildcardURL ) Define the use of a wildcard URL check. Indicates if the Soft-AP should map...","GUID-84A559F7-B9AF-4927-9073-A2BDA2AA6804.html@@@1.2.9.2 WDRV_PIC32MZW_POWERSAVE_MODE Enum@@@typedef enum { /* Run mode : No power-save. Both TX and RX are active */ WDRV_PIC32MZW_POWERSAVE_RUN_MODE = 0 , /* WSM mode : Wireless sleep mode. TX and RX are stopped, clocks will be running. STA...","GUID-8732F5D7-740A-4281-B519-0C7FBB34D3B8.html@@@1.1.14.2 WDRV_WINC_SSL_REQ_ECC_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SSL_REQ_ECC_CALLBACK) Callback to request ECC information. Called when authentication with ECC Cipher suites. Param Description handle Client handle obtained by a call to...","GUID-888B1D77-10DC-4BCA-BEA0-88EAA6A78507.html@@@1.1.14 SSL/TLS Control@@@This topic provides information on how to configure the SSL/TLS sessions. Internally the WINC devices are configured to establish TLS sessions using a typical set of cipher suites. If the application...","GUID-895E65D1-1C90-408D-B617-2D86C45A3D2A.html@@@1.1.13.1 WDRV_WINC_BSSCON_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_WINC_BSSCON_NOTIFY_CALLBACK) Callback to notify the user of a change in connection state. When the connection state changes this callback enable the driver to signal the user about...","GUID-8BE8380E-360A-4D3B-AC0B-5B87D4B6A60B.html@@@1.1.5.5 WDRV_WINC_BSSFindInProgress Function@@@bool WDRV_WINC_BSSFindInProgress (DRV_HANDLE handle) Indicates if a BSS scan is in progress. Returns a flag indicating if a BSS scan operation is currently running. WDRV_WINC_Initialize must have been...","GUID-8BF10274-CD22-4774-8C40-CCFED5766714.html@@@1.2.4.6 WDRV_PIC32MZW_BSSCtxSetBSSID Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetBSSID ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, uint8_t * const pBSSID ) Configures the BSSID of the BSS context. The BSSID string is copied into the BSS...","GUID-8CC2A673-AF23-4055-8F1E-C43A3195F69A.html@@@1.2.2.1 WDRV_PIC32MZW_CTRLDCPT Struct@@@typedef struct _WDRV_PIC32MZW_CTRLDCPT { /* Primary driver handle. */ DRV_HANDLE handle; /* Flag indicating if this instance is operating as s station or soft-AP. */ bool isAP; /* Variable to store...","GUID-8D63200E-D1CF-4D36-AC0D-23570973580F.html@@@1.1.4.3 WDRV_WINC_BLEStop Function@@@WDRV_WINC_STATUS WDRV_WINC_BLEStop (DRV_HANDLE handle) Stops the BLE interface. Disables the BLE interface. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been called to...","GUID-8DF1397A-E9E5-47F3-8737-CFA4F0CD376A.html@@@1.2.10.3 WDRV_PIC32MZW_RF_MAC_CONFIG Struct@@@typedef struct _WDRV_PIC32MZW_RF_MAC_CONFIG { /* Flag indicating if Power ON calibration is valid */ bool powerOnCalIsValid; /* Flag indicating if Factory calibration is valid */ bool...","GUID-929FF129-78D9-4158-83C6-9955EA09D304.html@@@1.1.13.2 WDRV_WINC_BSSConnect Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSConnect ( DRV_HANDLE handle, const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const WDRV_WINC_BSSCON_NOTIFY_CALLBACK...","GUID-92A5C628-45F6-4F40-BF99-846176902BAC.html@@@1.2.1.4 WDRV_PIC32MZW_Deinitialize Function@@@void WDRV_PIC32MZW_Deinitialize (SYS_MODULE_OBJ object) PIC32MZW driver deinitialization function. This is the function that deinitializes the PIC32MZW. It is called by the system...","GUID-9545B29C-1FCB-4AB0-A576-3B5F7BEEF4B9.html@@@1.2.9.6 WDRV_PIC32MZW_PowerSaveListenIntervalSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveListenIntervalSet ( DRV_HANDLE handle, uint16_t u16ListenInt ); Set the Wi-Fi listen interval for power save operation(in beacon period count). Set the...","GUID-95CBABB3-B66F-40EA-BA9F-530831BA707B.html@@@1.1.16.3 WDRV_WINC_WPSEnrolleeDiscoveryStartPIN Function@@@WDRV_WINC_STATUS WDRV_WINC_WPSEnrolleeDiscoveryStartPIN ( DRV_HANDLE handle, uint32_t pin, const WDRV_WINC_WPS_DISC_CALLBACK pfWPSDiscoveryCallback ) Start WPS discovery (PIN). Starts the WPS...","GUID-9618C4E6-B0B4-4B40-8D1A-74E9D953DB32.html@@@1.1.3.4 WDRV_WINC_ASSOC_RSSI_CALLBACK Typedef@@@typedef void (*WDRV_WINC_ASSOC_RSSI_CALLBACK)(DRV_HANDLE handle, int8_t rssi); A callback to provide the current RSSI of the current association. This callback provides details of the signal strength...","GUID-96DBC350-57DA-4EF6-8881-1F29C9F630B5.html@@@1.1.14.4 WDRV_WINC_SSLCTXCipherSuitesGet Function@@@uint8_t WDRV_WINC_SSLCTXCipherSuitesGet ( WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx, uint16_t *pCipherSuiteList, uint8_t maxNumCipherSuites ) Returns the enabled cipher suites from a context...","GUID-97F4B27C-55F0-422F-A3D6-A58842D09E97.html@@@1.1.6.2 WDRV_WINC_AuthCtxSetDefaults Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetDefaults ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) Configures an authentication context into a default state. Ensures that each element of the structure is...","GUID-99863FC4-6091-4701-8325-4FBBD63272E1.html@@@1.1.14.5 WDRV_WINC_SSLCTXCipherSuitesSet Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLCTXCipherSuitesSet ( WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx, uint16_t *pCipherSuiteList, uint8_t numCipherSuites ) Set the cipher suites enabled in a context...","GUID-9A4FCDF0-2CE1-4CA9-BC92-2D79BBDA4E42.html@@@1.2.4.3 WDRV_PIC32MZW_BSS_ROAMING_CFG Enum@@@typedef enum { /* BSS Roaming is turned off. */ WDRV_PIC32MZW_BSS_ROAMING_CFG_OFF, /* BSS Roaming is turned on, no IP renew occurs. */ WDRV_PIC32MZW_BSS_ROAMING_CFG_ON, /* BSS Roaming is turned on...","GUID-9AE7E6C6-BBAA-44B2-9D3A-38A80624E8A5.html@@@1.2.4.2 WDRV_PIC32MZW_BSS_INFO Struct@@@typedef struct { /* BSS context information (BSSID, SSID, channel etc). */ WDRV_PIC32MZW_BSS_CONTEXT ctx; /* Signal strength RSSI of BSS. */ int8_t rssi; /* Security capabilities of BSS. */...","GUID-9B851175-EAC6-4C6D-9E59-3F30C6595DF0.html@@@1.2.6.4 WDRV_PIC32MZW_ASSOC_INFO Struct@@@typedef struct { /* Primary driver handle. */ DRV_HANDLE handle; /* MAC address of peer device. */ WDRV_PIC32MZW_MAC_ADDR peerAddress; /* Authentication type used. */ WDRV_PIC32MZW_AUTH_TYPE authType...","GUID-9D7FF72B-E648-4E12-A908-7D722938C12A.html@@@1.1.1 WINC Firmware Update Guide@@@This document explains the WINC Firmware Upgrade Process. The ATWINC1500 and ATWINC3400 WiFi devices require firmware to be loaded into flash memory to operate. These devices will come shipped with...","GUID-9DC08CEA-87E3-441C-9346-0317D8A1D46C.html@@@1.2.5.6 WDRV_PIC32MZW_AuthCtxSetDefaults Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetDefaults ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx ) Configures an authentication context into a default state. Ensures that each element of the...","GUID-A0876431-0E46-449A-87BB-62D7B850C638.html@@@1.2.6.1 WDRV_PIC32MZW_ASSOC_HANDLE_INVALID Macro@@@#define WDRV_PIC32MZW_ASSOC_HANDLE_INVALID (((WDRV_PIC32MZW_ASSOC_HANDLE) - 1 )) Invalid association handle. Defines a value for an association handle which isn&apos;t yet valid. None...","GUID-A1973CB2-FDD4-4331-8C34-628D76F97AA5.html@@@1.1.6 Authentication, BSS & HTTP provisioning@@@This topic provides information how contexts are used. To simplify other interfaces and encapsulate information the WINC Driver uses context structures in various places to pass around information...","GUID-A41D060B-3559-4D60-8C99-34B6D015731E.html@@@1.2.6 Client - Association APIs@@@This interface provides information about the current association with a peer device...","GUID-A4CE3571-0C52-4623-B10E-359D31196E20.html@@@1.1.15.1 WDRV_WINC_LocalTimeToUTC Function@@@uint32_t WDRV_WINC_LocalTimeToUTC ( const tstrSystemTime * const pSysTime) Convert local system time to UTC time. Converts the local system time structure into a more convenient UTC time. None. Param...","GUID-A4E8E317-B698-4D3F-8D00-90FC31D9D540.html@@@1.1.13.4 WDRV_WINC_BSSReconnect Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSReconnect ( DRV_HANDLE handle, WDRV_WINC_BSSCON_NOTIFY_CALLBACK pfNotifyCallback ) Reconnects to a BSS using stored credentials. Reconnects to the previous BSS using...","GUID-A51864DC-AD1F-43AC-A5CC-3310BB2362EB.html@@@1.2.4.1 WDRV_PIC32MZW_BSS_CONTEXT Struct@@@typedef struct { /* SSID of BSS. */ WDRV_PIC32MZW_SSID ssid; /* BSSID. */ WDRV_PIC32MZW_MAC_ADDR bssid; /* Current channel of BSS. */ WDRV_PIC32MZW_CHANNEL_ID channel; /* Flag indicating if SSID is...","GUID-A7016003-8684-4D26-B759-0441465932F4.html@@@1.2.4 Client - BSS Context APIs@@@The BSS context contains information relevant to a BSS such as SSID and channel. The structure WDRV_PIC32MZW_BSS_CONTEXT is provided to contain the context. To initialize a context, the function...","GUID-A9327FAB-1701-421D-9A6F-62663C4D90AF.html@@@1.1.15.2 WDRV_WINC_SystemTimeGetCurrent Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeGetCurrent ( DRV_HANDLE handle, const WDRV_WINC_SYSTIME_CURRENT_CALLBACK pfGetCurrentCallback ) Requests the current system time from the WINC. Requests the...","GUID-AAAB9525-D75A-490F-89CA-766C731ABBA6.html@@@1.2.10.1 WDRV_PIC32MZW_REGDOMAIN_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_REGDOMAIN_CALLBACK) Pointer to a regulatory domain callback. This defines a function pointer to a regulatory domain callback which will receive information about a single...","GUID-ABDC9A29-634D-48AC-B83D-570E298B7803.html@@@1.1.2 Serial Bridge@@@This example compiles the serial bridge application which is used to communicate to WINC devices from PC. Serial bridge application acts as a bridge between PC and WINC devices. For example, firmware...","GUID-AF380EDC-B004-4B11-8FF6-2563D3DAC1B6.html@@@1.2.3.6 WDRV_PIC32MZW_BSSFindGetNumBSSResults Function@@@uint8_t WDRV_PIC32MZW_BSSFindGetNumBSSResults (DRV_HANDLE handle) Returns the number of BSS scan results found. Returns the number of BSS scan results found. WDRV_PIC32MZW_Initialize must have been...","GUID-B01C8839-A321-4547-B3D6-858923953A23.html@@@1.1.15.3 WDRV_WINC_SystemTimeSetCurrent Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSetCurrent ( DRV_HANDLE handle, uint32_t curTime ) Sets the current system time on the WINC. Configures the system time to the UTC value specified...","GUID-B4FA4527-55B1-4380-920A-6CE92DFBA100.html@@@1.2.6.2 WDRV_PIC32MZW_ASSOC_RSSI_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_ASSOC_RSSI_CALLBACK) A callback to provide the current RSSI of the current association. This callback provides details of the signal strength (RSSI) of the current...","GUID-B56FF47C-AEC8-4E63-9FC7-783709431BBC.html@@@1.1.3.2 WDRV_WINC_ASSOC_HANDLE; Typedef@@@typedef uintptr_t WDRV_WINC_ASSOC_HANDLE; A handle representing an association instance. An association handle references a single association instance between AP and STA. None...","GUID-B6921361-2F3A-4384-8081-FCE9BC1D3895.html@@@1.2.3.13 WDRV_PIC32MZW_BSSRoamingConfigure Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSRoamingConfigure ( DRV_HANDLE handle, WDRV_PIC32MZW_BSS_ROAMING_CFG roamingCfg ) Configures BSS roaming support. Enables or disables BSS roaming support. If...","GUID-B8A118B5-D71D-40A9-A8A3-D07E6667D995.html@@@1.2.11.5 WDRV_PIC32MZW_IERxDataGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_IERxDataGet ( DRV_HANDLE handle, WDRV_PIC32MZW_IE_FRAME_TYPE_MASK frameMask, const uint32_t vendorOUI, const WDRV_PIC32MZW_IE_RX_CALLBACK pfVendorIERxCB ) Registers...","GUID-BB0DEC1B-642C-486F-8155-29DEF7A538D0.html@@@1.1.6.6 WDRV_WINC_AuthCtxSetWPAEnterpriseMSCHAPv2 Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWPAEnterpriseMSCHAPv2 ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const char * const pUserDomain, const uint8_t * const pPassword, const uint16_t passwordLength...","GUID-BB86DF33-DA59-40AC-AFCD-F3BAED76EA26.html@@@1.1.9.1 WDRV_WINC_NVM_REGION Enum@@@typedef enum { /* Access to the entire flash address space. */ WDRV_WINC_NVM_REGION_RAW, /* Access to the firmware region (active image). */ WDRV_WINC_NVM_REGION_FIRMWARE_ACTIVE, /* Access to the...","GUID-BBC5C177-4BC4-4472-A19A-C60261121CF0.html@@@1.1.8.2 WDRV_WINC_ICMP_ECHO_STATUS Enum@@@typedef enum { /* The operation completed successfully. */ WDRV_WINC_ICMP_ECHO_STATUS_SUCCESS = 0 , /* ICMP destination unreachable. */ WDRV_WINC_ICMP_ECHO_STATUS_UNREACH = 1 , /* The operation timed...","GUID-BC2CF70D-B995-4831-8AE7-85E53E02A57D.html@@@1.2.12.1 WDRV_PIC32MZW_CHANNEL_ID Enum@@@typedef enum _WDRV_PIC32MZW_CHANNEL_ID { /* Any valid channel. */ WDRV_PIC32MZW_CID_ANY, /* 2.4 GHz channel 1 - 2412 MHz. */ WDRV_PIC32MZW_CID_ 2 _ 4 G_CH1, /* 2.4 GHz channel 2 - 2417 MHz. */...","GUID-BE9A0977-3616-4935-92BF-8FCEF7F121D8.html@@@1.1.10.1 WDRV_WINC_PowerSaveGetMode Function@@@WDRV_WINC_PS_MODE WDRV_WINC_PowerSaveGetMode (DRV_HANDLE handle) Returns the current power save mode. Returns to the caller the current power save mode in use by the WINC. WDRV_WINC_Initialize should...","GUID-C03897C9-8CB4-4452-BDC3-06FA1DA4EB82.html@@@1.1.8.3 WDRV_WINC_ICMPEchoRequest Function@@@WDRV_WINC_STATUS WDRV_WINC_ICMPEchoRequest ( DRV_HANDLE handle, uint32_t ipAddress, uint8_t ttl, const WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER pfICMPEchoResponseCB ) Sends an ICMP echo request. Sends an...","GUID-C0858BB2-B95A-4B25-B5BD-4B19C6E09ED9.html@@@1.1.5.8 WDRV_WINC_BSSFindSetEnabledChannels Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetEnabledChannels ( DRV_HANDLE handle, WDRV_WINC_CHANNEL_MASK channelMask ) Configures the channels which can be scanned. To comply with regulatory domains certain...","GUID-C0A91481-BE29-4CE6-9520-B9999BCC19E3.html@@@1.1.5.7 WDRV_WINC_BSSFindReset Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindReset ( DRV_HANDLE handle, WDRV_WINC_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the first scan results again The information structure of the first BSS is...","GUID-C29F6564-0F47-4455-A4E3-FE68DFC51C49.html@@@1.1.6.4 WDRV_WINC_AuthCtxSetWEP Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWEP ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, uint8_t idx, uint8_t *pKey, uint8_t size ) Configure an authentication context for WEP authentication. The auth type...","GUID-C79465BA-38BB-4ABC-A45C-5FDCB79FA3A1.html@@@1.1.9.4 WDRV_WINC_NVMWrite Function@@@WDRV_WINC_STATUS WDRV_WINC_NVMWrite ( DRV_HANDLE handle, WDRV_WINC_NVM_REGION region, void *pBuffer, uint32_t offset, uint32_t size ); Writes data to an NVM region. Writes the number of bytes...","GUID-C83F212A-690F-48CE-8F2A-4B83862B2C31.html@@@1.2.9.4 WDRV_PIC32MZW_PowerSaveModeSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveModeSet ( DRV_HANDLE handle, WDRV_PIC32MZW_POWERSAVE_MODE powerSaveMode, WDRV_PIC32MZW_POWERSAVE_CORRELATION picCorrelation...","GUID-C8FD6AB1-6D19-4A8B-86E3-74F54370A97E.html@@@1.2.5.1 WDRV_PIC32MZW_ENT_AUTH_DOMAIN_USER_LEN_MAX Macro@@@#define WDRV_PIC32MZW_ENT_AUTH_DOMAIN_USER_LEN_MAX 255 #define WDRV_PIC32MZW_MAX_SSID_LEN 32 #define WDRV_PIC32MZW_MAC_ADDR_LEN 6 #define WDRV_PIC32MZW_WEP_40_KEY_STRING_SIZE 10 #define...","GUID-C97E4EFB-3FAB-4629-B94E-1F1DE8350984.html@@@1.1.4.2 WDRV_WINC_BLEStart Function@@@WDRV_WINC_STATUS WDRV_WINC_BLEStart (DRV_HANDLE handle) Starts the BLE interface. Enables the BLE interface. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been called to...","GUID-C9F34153-1A97-4111-825E-72E8D47B6F1A.html@@@1.2.5.10 WDRV_PIC32MZW_AuthCtxSharedKey Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSharedKey ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, bool enable ) Enable or disable Shared Key authentication in an authentication context. The...","GUID-CA4F7F1B-CAE2-4AB7-AE45-CB45ADCD997A.html@@@1.1.11.5 WDRV_WINC_Tasks Function@@@void WDRV_WINC_Tasks (SYS_MODULE_OBJ object) Maintains the WINC drivers state machine. This function is used to maintain the driver&apos;s internal state machine. WDRV_WINC_Initialize must have been called...","GUID-CA544C44-D3FF-451B-9DC3-EF8A5A84C161.html@@@1.1.9 NVM Access@@@This topic provides information on how the SPI flash within the WINC device can be read, written and erased. The WINC device contains a SPI flash device within which firmware and data are stored. It...","GUID-CAEE987E-7C37-4ED7-8306-49A2E8EF93EA.html@@@1.2.6.7 WDRV_PIC32MZW_AssocRSSIGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocRSSIGet ( WDRV_PIC32MZW_ASSOC_HANDLE assocHandle, int8_t * const pRSSI, WDRV_PIC32MZW_ASSOC_RSSI_CALLBACK const pfAssociationRSSICB ) Retrieve the current...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-CE31A004-61F9-480A-A2ED-86AE40681AAD.html@@@1.2.3.10 WDRV_PIC32MZW_BSSFindSetEnabledChannels24 Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindSetEnabledChannels24 ( DRV_HANDLE handle, WDRV_PIC32MZW_CHANNEL24_MASK channelMask24 ) Set the enabled channels list for 2.4GHz. To comply with regulatory...","GUID-CF1824B4-C6B8-4EC6-B91B-9DACFA4D7266.html@@@1.1.14.9 WDRV_WINC_SSLRetrieveCert Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLRetrieveCert ( DRV_HANDLE handle, uint16_t *pCurveType, uint8_t *pHash, uint8_t *pSig, WDRV_WINC_EC_POINT_REP *pKey ) Retrieve the certificate to be verified from the...","GUID-CFBC8377-2DCD-4C48-AB07-B620B37D378A.html@@@1.2.11.2 WDRV_PIC32MZW_IE_RX_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_IE_RX_CALLBACK) Pointer to a callback function to receive vendor specific IE data and related information. This defines a function pointer to a vendor specific IE callback...","GUID-D21AD79C-567A-4A01-993A-82FC7E3611CA.html@@@1.1.5.9 WDRV_WINC_BSSFindSetRSSIThreshold Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetRSSIThreshold ( DRV_HANDLE handle, int8_t rssiThreshold ) Configures the scan RSSI threshold. The RSSI threshold required for reconnection to an AP without...","GUID-D2767F7F-A339-48EE-B082-78588D0B6CA3.html@@@1.1.3.6 WDRV_WINC_AssocPeerAddressGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocPeerAddressGet ( DRV_HANDLE handle, WDRV_WINC_NETWORK_ADDRESS * const pPeerAddress, WDRV_WINC_ASSOC_CALLBACK const pfAssociationInfoCB ) Retrieve the current...","GUID-D45FD002-4D1F-482A-A111-4FEED907F099.html@@@1.1.10.5 WDRV_WINC_PS_MODE Enum@@@typedef enum { /* Invalid mode. */ WDRV_WINC_PS_MODE_INVALID = , /* Power save is off. */ WDRV_WINC_PS_MODE_OFF = , /* Automatic control of power save. */ WDRV_WINC_PS_MODE_AUTO_HIGH_POWER = , /*...","GUID-D58D1F96-DFB6-4A48-9D0B-BD09F88955CC.html@@@1.2.5.11 WDRV_PIC32MZW_AuthCtxApTransitionDisable Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxApTransitionDisable ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, bool tdOn, ) Turn on/off the transition disable feature in AP mode. The authentication...","GUID-D77087B6-33AC-472C-AD7D-0EB6F30F123E.html@@@1.1.5.4 WDRV_WINC_BSSFindGetNumBSSResults Function@@@uint8_t WDRV_WINC_BSSFindGetNumBSSResults (DRV_HANDLE handle) Returns the number of BSS scan results found. Returns the number of BSS scan results found. WDRV_WINC_Initialize must have been called...","GUID-D8D5DAC8-3B55-4B87-9428-936D8B524F3D.html@@@1.2.5.12 WDRV_PIC32MZW_AuthCtxStaTransitionDisable Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxStaTransitionDisable ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, ) Disable transition security algorithms in STA mode. The authentication context is...","GUID-D9C35F46-3BAD-427E-9C83-CA548BAE77DF.html@@@1.2.6.8 WDRV_PIC32MZW_AssocTransitionDisableGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocTransitionDisableGet ( WDRV_PIC32MZW_ASSOC_HANDLE assocHandle, bool * const pTransitionDisable ) Determine whether transition algorithms should be disabled for...","GUID-DB172BDF-7D69-4E47-8E3A-9BE4DDBE6144.html@@@1.2.9.1 WDRV_PIC32MZW_PS_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_PS_NOTIFY_CALLBACK) Callback to signal sleep entry of SMC(WSM/WDS) and exit of powersave cycle. After WiFi power-save mode is set by the user, the driver will use this...","GUID-DB718ADE-4DFD-4A28-A968-C4354594BAD1.html@@@1.1.10.4 WDRV_WINC_PowerSaveSetMode Function@@@WDRV_WINC_STATUS WDRV_WINC_PowerSaveSetMode ( DRV_HANDLE handle, WDRV_WINC_PS_MODE mode ) Sets the power save mode. Selects the current power save mode the WINC should be using. WDRV_WINC_Initialize...","GUID-DD1B8C31-2334-40FA-B562-83563A4A8933.html@@@1.2.12.2 WDRV_PIC32MZW_CHANNEL24_MASK Enum@@@typedef enum { /* 2.4GHz (2412 MHz) channel 1. */ WDRV_PIC32MZW_CM_ 2 _ 4 G_CH1 = 0x0001 , /* 2.4GHz (2417 MHz) channel 2. */ WDRV_PIC32MZW_CM_ 2 _ 4 G_CH2 = 0x0002 , /* 2.4GHz (2422 MHz) channel 3...","GUID-DDF7C35B-3ADE-47F3-813D-4628CCDF4218.html@@@1.2.1.5 WDRV_PIC32MZW_Reinitialize Function@@@void WDRV_PIC32MZW_Reinitialize ( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ) PIC32MZW driver reinitialization function. This is the function that re-initializes the PIC32MZW. It is...","GUID-DE8FA814-FDE4-430A-9B99-2A68C30F0233.html@@@1.1.4.1 WDRV_WINC_BLEIsStarted Function@@@bool WDRV_WINC_BLEIsStarted (DRV_HANDLE handle) Determines if BLE has been started. Determines if BLE has been started. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been...","GUID-DEDB8880-71DA-46D9-8223-C2C95F6D3B18.html@@@1.1.7.2 WDRV_WINC_Open Function@@@DRV_HANDLE WDRV_WINC_Open ( const SYS_MODULE_INDEX index, const DRV_IO_INTENT intent) Opens an instance of the WINC driver. Opens an instance of the WINC driver and returns a handle which must be used...","GUID-DF8699E1-859E-498A-A2B2-14BA484F15AA.html@@@1.1.3.5 WDRV_WINC_AssocAuthTypeGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocAuthTypeGet ( DRV_HANDLE handle, WDRV_WINC_AUTH_TYPE * const pAuthType, WDRV_WINC_ASSOC_CALLBACK const pfAssociationInfoCB ) Retrieve the current association...","GUID-E012F7C2-64C2-40DA-89CF-C613B200BF19.html@@@1.2.3.3 WDRV_PIC32MZW_SEC_MASK Enum@@@typedef enum { /* AP supports WEP-40 or WEP-104, as standalone or as GTK with 11i TSN. */ WDRV_PIC32MZW_SEC_BIT_WEP = 0x01 , /* AP supports TKIP as GTK (if not WEP) and PTK. */...","GUID-E0B3B3A6-07A9-4EC6-9C84-977842046668.html@@@1.2.9.3 WDRV_PIC32MZW_POWERSAVE_PIC_CORRELATION Enum@@@typedef enum { /* Asynchronous correlation. Trigger of sleep mode entry/exit is done through software */ WDRV_PIC32MZW_POWERSAVE_PIC_ASYNC_MODE = 0 , /* Synchronous correlation. Trigger of sleep mode...","GUID-E339E93F-7BCF-4C2F-80D5-783001332B05.html@@@1.2.4.4 WDRV_PIC32MZW_BSSCON_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_BSSCON_NOTIFY_CALLBACK) Callback to notify the user of a change in connection state. When the connection state changes this callback enable the driver to signal the user...","GUID-E4146D37-A9A1-40C9-B0AD-6A8E31C00666.html@@@1.1.12.4 WDRV_WINC_CUST_IE Struct@@@typedef struct { /* ID. */ uint8_t id; /* Length of data. */ uint8_t length; /* Data. */ uint8_t data[]; } WDRV_WINC_CUST_IE; Defines the format of a custom IE. Custom IEs consist of an ID, length and...","GUID-E7DAC95F-81BE-4A52-82E8-79727587D282.html@@@1.1.14.11 WDRV_WINC_SSLStopRetrieveCert Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLStopRetrieveCert (DRV_HANDLE handle) Stop processing the certificate Stop processing the certificate WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-E98C2F70-A211-4437-A69D-23612AE87FC6.html@@@1.1.11.2 WDRV_WINC_Initialize Function@@@SYS_MODULE_OBJ WDRV_WINC_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ) System interface initialization of the WINC driver. This is the function that initializes the...","GUID-EA06AD1D-6A2D-4772-9E90-E7A8F2EC23DA.html@@@1.2.3.7 WDRV_PIC32MZW_BSSFindInProgress Function@@@bool WDRV_PIC32MZW_BSSFindInProgress (DRV_HANDLE handle) Indicates if a BSS scan is in progress. Returns a flag indicating if a BSS scan operation is currently running. WDRV_PIC32MZW_Initialize must...","GUID-EC53AE64-05BF-48B0-99DB-A40DABE5E4C7.html@@@1.2.1.3 WDRV_PIC32MZW_Initialize Function@@@SYS_MODULE_OBJ WDRV_PIC32MZW_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ) System interface initialization of the PIC32MZW driver. This is the function that...","GUID-EFE4EBAB-3F25-4EE9-BD27-D3BD6F14C3D8.html@@@1.2.3.9 WDRV_PIC32MZW_BSSFindReset Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindReset ( DRV_HANDLE handle, WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the first scan results again The information structure of the...","GUID-EFEFA06B-16BD-412C-A3B1-F37AA66E9AC4.html@@@1.1.11.1 WDRV_WINC_Deinitialize Function@@@void WDRV_WINC_Deinitialize (SYS_MODULE_OBJ object) WINC driver deinitialization function. This is the function that deinitializes the WINC. It is called by the system. WDRV_WINC_Initialize should...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F1B1F042-5BC2-45FC-850E-792C58024027.html@@@1.1.3.3 WDRV_WINC_ASSOC_HANDLE_INVALID Macro@@@#define WDRV_WINC_ASSOC_HANDLE_INVALID (((WDRV_WINC_ASSOC_HANDLE) - 1 )) Invalid association handle. Defines a value for an association handle which isn&apos;t yet valid. None...","GUID-F2CEE7DB-50AA-4BC1-8D8D-8EA6D79A42E2.html@@@1.1.14.1 WDRV_WINC_SSL_CIPHERSUITELIST_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SSL_CIPHERSUITELIST_CALLBACK) Callback to report cipher suites. Called when the cipher suites are changed. Param Description handle Client handle obtained by a call to...","GUID-F4D61340-9BBF-4528-9D6B-4FB3E554F2AF.html@@@1.2.11.4 WDRV_PIC32MZW_IECustTxDataSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_IECustTxDataSet ( DRV_HANDLE handle, WDRV_PIC32MZW_IE_FRAME_TYPE_MASK frameMask, const WDRV_PIC32MZW_CUST_IE_STORE_CONTEXT * const pCustIECtx ) Configures the custom...","GUID-F63B27BC-58CA-410B-89D2-FC5221B921AD.html@@@1.1.5.10 WDRV_WINC_BSSFindSetScanMatchMode Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetScanMatchMode ( DRV_HANDLE handle, WDRV_WINC_SCAN_MATCH_MODE matchMode ) Configures the scan matching mode. This function configures the matching mode, either stop...","GUID-F649E22F-F2D5-4BE9-9A50-0889D0B40464.html@@@1.1.15.5 WDRV_WINC_SystemTimeSNTPClientEnable Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSNTPClientEnable ( DRV_HANDLE handle, const char *pServerName, bool allowDHCPOverride ); Enable the SNTP client to set system time. Enables the SNTP client used to...","GUID-F7D866DC-091E-4AC3-AA41-268779AF490A.html@@@1.2.12.9 WDRV_PIC32MZW_PMKCacheFlush Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PMKCacheFlush ( DRV_HANDLE handle ) Flush the PMK cache. Removes all entries from the local PMK cache. WDRV_PIC32MZW_Initialize should have been called...","GUID-F7E5FF2D-5176-49B5-AC28-14FA4DD63E5D.html@@@1.1.14.6 WDRV_WINC_SSLCTXDefault Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLCTXDefault ( WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx ) Initialize an SSL cipher suite context. Sets the default values for the cipher suite context. None...","GUID-F860FD90-9B84-4376-813B-0A12901873D0.html@@@1.2.5.2 WDRV_PIC32MZW_AUTH_MFP_CONFIG Enum@@@typedef enum { /* Management Frame Protection enabled but not required. * This is the default configuration for the following auth types: * WDRV_PIC32MZW_AUTH_TYPE_WPAWPA2_PERSONAL *...","GUID-F8DEA63C-71E7-4553-A3D4-94CA8A3B4691.html@@@1.1.8.10 WDRV_WINC_IPUseDHCPGet Function@@@bool WDRV_WINC_IPUseDHCPGet (DRV_HANDLE handle) Determine if DHCP is to be used. Determines if the WINC will use DHCP for IP address configuration. WDRV_WINC_Initialize should have been called...","GUID-FA9685C3-2B37-4821-AD49-3A01ED20F7CC.html@@@1.2.10.4 WDRV_PIC32MZW_RegDomainGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_RegDomainGet ( DRV_HANDLE handle, const WDRV_PIC32MZW_REGDOMAIN_SELECT selection, const WDRV_PIC32MZW_REGDOMAIN_CALLBACK pfRegDomCallback ) Requests information...","GUID-FC75E7D6-8778-4E1C-977F-CB39857FCBCB.html@@@1.2.6.5 WDRV_PIC32MZW_AssocDisconnect Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocDisconnect (WDRV_PIC32MZW_ASSOC_HANDLE assocHandle) Disconnects an association. This API disconnects the STA associated with softAP based on the input...","GUID-FD15FA49-9089-44AF-9012-CCC3EE291522.html@@@1.2.8.5 WDRV_PIC32MZW_APSetCustIE Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APSetCustIE ( DRV_HANDLE handle, const WDRV_PIC32MZW_CUST_IE_STORE_CONTEXT * const pCustIECtx ) Configures the custom IE. Soft-AP beacons may contain an application...","GUID-FECD3CB6-70F0-44C7-AC06-C2FFFB669D65.html@@@1.1.13 STA@@@This topic provides information on how the library supports connecting to BSSs as a Wi-Fi station device. The WINC device can connect to a BSS as a Wi-Fi station device. To connect to a BSS the...","GUID-FF05BAE1-E2E0-4281-A31D-9659BC2F604D.html@@@1.2.12.5 WDRV_PIC32MZW_InfoDeviceMACAddressGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoDeviceMACAddressGet ( DRV_HANDLE handle, uint8_t * const pMACAddress ) Retrieves the MAC address of the PIC32MZW. Retrieves the current working MAC address...","cshelp.html@@@Context Sensitive Help@@@..."];
});