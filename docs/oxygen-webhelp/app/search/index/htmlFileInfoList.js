define(function () {
return ["GUID-003633FA-D0EE-4D3E-A716-5E98DAA38F02.html@@@1.3.6.3 WDRV_PIC32MZW_ASSOC_HANDLE; Typedef@@@typedef uintptr_t WDRV_PIC32MZW_ASSOC_HANDLE; A handle representing an association instance. An association handle references a single association instance between AP and STA. None...","GUID-0037CD9E-13A5-4581-8AC5-39D4291E196A.html@@@1.1.21.7 WDRV_WINC_OTAImageVerify@@@WDRV_WINC_STATUS WDRV_WINC_OTAImageVerify ( DRV_HANDLE handle, const WDRV_WINC_OTA_STATUS_CALLBACK pfUpdateStatusCB ) Verifies an OTA image located in the NVM memory to check if it can be activated...","GUID-00424F5B-60B8-4447-A359-A1DAC2EE2E8D.html@@@1.1.9.8 WDRV_WINC_BSSFindReset@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindReset ( DRV_HANDLE handle, WDRV_WINC_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) The information structure of the first BSS is requested from the WINCS02...","GUID-0145B1DB-AA31-4F62-8818-8A5A0CB18602.html@@@1.1.9.9 WDRV_WINC_BSSFindGetInfo@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindGetInfo ( DRV_HANDLE handle, WDRV_WINC_BSS_INFO * const pBSSInfo ) After each call to either WDRV_WINC_BSSFindFirst or WDRV_WINC_BSSFindNext the driver receives a...","GUID-01A29056-3BD9-4299-8E0F-47CC0A0575E0.html@@@1.1.19.9 WDRV_WINC_NetIfRegisterEventCallback@@@WDRV_WINC_STATUS WDRV_WINC_NetIfRegisterEventCallback ( DRV_HANDLE handle, const WDRV_WINC_NETIF_EVENT_HANDLER pfNetIfEventCallback ) Function to register an event callback function...","GUID-020B97C2-860B-42DA-AE7D-E2A2994286E4.html@@@1.1.21.10 WDRV_WINC_OTAOptionsSet@@@WDRV_WINC_STATUS WDRV_WINC_OTAOptionsSet ( DRV_HANDLE handle, const WDRV_WINC_OTA_OPTIONS * const pOTAOptions ) Configures OTA options. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must...","GUID-02A694CF-88A5-4ADA-8785-7EEEC62D66EA.html@@@Worldwide Sales and Service@@@AMERICAS ASIA/PACIFIC ASIA/PACIFIC EUROPE Corporate Office 2355 West Chandler Blvd. Chandler, AZ 85224-6199 Tel: 480-792-7200 Fax: 480-792-7277 Technical Support: www.microchip.com/support Web...","GUID-02ED2A09-D42F-4CD2-B87A-FE433F01370D.html@@@1.2.8.8 WDRV_WINC_IPDNSServerAddressSet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPDNSServerAddressSet ( DRV_HANDLE handle, uint32_t dnsServerAddress ) Configures the DNS server address. Disables DHCP on the WINC and assigns a static DNS address. The...","GUID-031836CF-94FC-442B-B7E8-45F3E66649D1.html@@@1.3.3.6 WDRV_PIC32MZW_BSSFindGetInfo Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindGetInfo ( DRV_HANDLE handle, WDRV_PIC32MZW_BSS_INFO * const pBSSInfo ) Requests the information structure of the current BSS scan result. After each call to...","GUID-04214F69-4455-4277-933F-D4F45E61B6CF.html@@@1.1.22.2 WDRV_WINC_PROV_PROTOCOL_TYPE Enum@@@typedef enum { WDRV_WINC_PROV_PROTOCOL_BINARY, WDRV_WINC_PROV_PROTOCOL_ASCII, } WDRV_WINC_PROV_PROTOCOL_TYPE; Provisioning protocol type. Members Description WDRV_WINC_PROV_PROTOCOL_BINARY Binary...","GUID-0459459F-E39F-4FB8-B936-C97285F171CA.html@@@1.2.8.13 WDRV_WINC_SocketRegisterResolverCallback Function@@@WDRV_WINC_STATUS WDRV_WINC_SocketRegisterResolverCallback ( DRV_HANDLE handle, tpfAppResolveCb pfAppResolveCb ) Register an event callback for DNS resolver events. DNS resolver events are dispatched...","GUID-047E0730-191B-4311-B62C-0B240CE47BF3.html@@@1.1.20.11 WDRV_WINC_NVMWrite@@@WDRV_WINC_STATUS WDRV_WINC_NVMWrite ( DRV_HANDLE handle, void *pBuffer, uint32_t offset, uint32_t length, WDRV_WINC_NVM_STATUS_CALLBACK pfUpdateStatusCB ) Writes a number of bytes to the NVM...","GUID-0507DE5A-B40E-45B6-9930-716D272063F6.html@@@1.1.29.2.6 WDRV_WINC_TLSCipherSuiteOpen@@@WDRV_WINC_TLS_HANDLE WDRV_WINC_TLSCipherSuiteOpen ( DRV_HANDLE handle ) Obtains a handle to a free TLS cipher suite. Used for configuring specific cipher algorithms for a TLS connection...","GUID-05AADD1D-076A-4AB2-8465-29237FE131A4.html@@@1.2.14.7 WDRV_WINC_SSLECCHandShakeRsp Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLECCHandShakeRsp ( DRV_HANDLE handle, WINC_WDRV_ECC_REQ_TYPE reqType, WINC_WDRV_ECC_STATUS status, const WDRV_WINC_ECC_HANDSHAKE_INFO * const pHandshakeData, const...","GUID-05DB8121-0E91-4E8A-AE77-8A0405604950.html@@@1.3.2 Client Open/Close APIs@@@The PIC32MZW1 Wi-Fi module consists of two instances, a control instance and a data instance. The control instance is driven as a conventional Harmony system interface by the system kernel or...","GUID-071EA34C-8BB8-4BC4-9213-5E85E6736193.html@@@1.1.18.5.1 WDRV_WINC_MQTT_PROP_PAYLOAD_FORMAT_TYPE Enum@@@typedef enum { WDRV_WINC_MQTT_PROP_PAYLOAD_FORMAT_UNSPECIFIED, WDRV_WINC_MQTT_PROP_PAYLOAD_FORMAT_UTF8, WDRV_WINC_MQTT_PROP_MAX_PAYLOAD_FORMAT } WDRV_WINC_MQTT_PROP_PAYLOAD_FORMAT_TYPE; Possible...","GUID-07985EED-D525-413B-AEFE-78B563328687.html@@@Quality Management System@@@For information regarding Microchip\u2019s Quality Management Systems, please visit www.microchip.com/quality...","GUID-07CA878D-8CFF-4235-B24C-32311D12A424.html@@@1.1.1.4 WDRV_WINC_SYSTEM_EVENT_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SYSTEM_EVENT_CALLBACK) ( SYS_MODULE_OBJ object, WDRV_WINC_SYSTEM_EVENT_TYPE event ); Callback used to communicate system events from the WINC driver. Parameters Description...","GUID-07F5A862-34A2-4A48-B24D-3A6966AC24A4.html@@@1.2.5.1 WDRV_WINC_BSSFIND_NOTIFY_CALLBACK Typedef@@@typedef bool (*WDRV_WINC_BSSFIND_NOTIFY_CALLBACK) Callback to signal discovery of a BSS. When the information about a discovered BSS is requested the driver will use this callback to provide the BSS...","GUID-0818BE73-D6F8-4BAF-99E3-875CBC8B4E2F.html@@@1.1.5.6 WDRV_WINC_MAC_ADDR_LEN Macro@@@#define WDRV_WINC_MAC_ADDR_LEN 6 U Length of a MAC address. None...","GUID-08F0A534-875E-4BCA-980F-21DF0E281FD4.html@@@1.1.12.5 WDRV_WINC_DebugRegisterCallback@@@void WDRV_WINC_DebugRegisterCallback ( WDRV_WINC_DEBUG_PRINT_CALLBACK const pfDebugPrintCallback ) The debug serial stream provides a printf-like stream of messages from within the WINC driver. The...","GUID-08FC43FF-5ACA-46F3-AEA6-8F5EFAD077EB.html@@@1.3.12.3 WDRV_PIC32MZW_CONN_STATE Enum@@@typedef enum { /* Association state is disconnected. */ WDRV_PIC32MZW_CONN_STATE_DISCONNECTED, /* Association state is connecting. */ WDRV_PIC32MZW_CONN_STATE_CONNECTING, /* Association state is...","GUID-08FC4F7C-8772-4F02-8C3A-5D89C78D8278.html@@@1.1.1.9 WDRV_WINC_Status@@@SYS_STATUS WDRV_WINC_Status ( SYS_MODULE_OBJ object ) This function provides the current status of the WINC driver module. WDRV_WINC_Initialize must have been called. Parameters Description object...","GUID-09435DF1-6BFB-4272-8CF8-2DD702F32D09.html@@@1.3.5.3 WDRV_PIC32MZW_AUTH_TYPE Enum@@@typedef enum { /* This type may be used in helper function * WDRV_PIC32MZW_AuthCtxSetPersonal, in which case it is translated into * the best practice auth type. Other uses of this type are invalid...","GUID-094BA77A-E430-4C1F-B051-58848BE93F9D.html@@@1.3.2.3 WDRV_PIC32MZW_Close Function@@@void WDRV_PIC32MZW_Close (DRV_HANDLE handle) Closes an instance of the PIC32MZW driver. This is the function that closes an instance of the MAC. All per client data is released and the handle can no...","GUID-097C5367-1775-49C5-8D0E-E1B2D8B07BD2.html@@@1.1.4 Client Interface@@@The client interface allows the application to open and close the WINCS02 driver. Once opened the application can call other APIs to configure and control the WINCS02 driver and device...","GUID-0A67F966-29BA-410D-8D51-EF1CAF875F33.html@@@1.2.3.8 WDRV_WINC_AssocSSIDGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocSSIDGet ( DRV_HANDLE handle, WDRV_WINC_SSID * const pSSID, WDRV_WINC_ASSOC_CALLBACK const pfAssociationInfoCB ) Retrieve the current association SSID. Attempts to...","GUID-0AEDA27D-A7D4-4DAA-8A8F-4CB3146CFB62.html@@@1.3.2.4 WDRV_PIC32MZW_StatusExt Function@@@WDRV_PIC32MZW_SYS_STATUS WDRV_PIC32MZW_StatusExt (SYS_MODULE_OBJ object) Provides the extended system status of the PIC32MZW driver module. This function provides the extended system status of the...","GUID-0B1FB07C-29AB-491A-9494-907836F39910.html@@@1.1.30.11 WDRV_WINC_WifiPowerSaveModeSet@@@WDRV_WINC_STATUS WDRV_WINC_WifiPowerSaveModeSet ( DRV_HANDLE handle, WDRV_WINC_POWERSAVE_MODE psMode ) Configures the powersave mode to one of the available powersave modes. WDRV_WINC_Initialize must...","GUID-0B377484-72D9-4299-AE14-DFBE284E0BC3.html@@@1.2.6.1 WDRV_WINC_AuthCtxIsValid Function@@@bool WDRV_WINC_AuthCtxIsValid ( const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx) Tests if an authentication context is valid. Tests the elements of the authentication context to judge if their values...","GUID-0BBBC52D-D4DA-4BBB-842F-C3757A16ECA2.html@@@1.1.30.8 WDRV_WINC_CONN_CFG Struct@@@typedef struct { uint8_t ifIdx; bool l2Only; /* STA specific configuration. */ struct { uint32_t connTimeoutMs; uint8_t roaming; } sta; /* AP specific configuration. */ struct { uint32_t...","GUID-0C7DA075-8B23-4DE7-83D8-2D4B453C3540.html@@@1.1.18.2.2 WDRV_WINC_MQTTConnPropDefaultSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTConnPropDefaultSet ( WDRV_WINC_MQTT_CONN_PROP *pConnProp ) Sets the subscribe connection structure to safe default values. None. Parameters Description pConnProp Pointer...","GUID-0D5187B0-8D5C-414E-932E-000D253B711A.html@@@1.1.1 System Interface@@@The system interface provides APIs for initializing and maintaining the core WINCS02 driver as well as monitoring its status. Harmony will initialize the WINCS02 driver by calling WDRV_WINC_Initialize...","GUID-0E1744E0-2F53-4B98-8C7B-4019F0CE32AE.html@@@1.1.7 Client - Authentication Context APIs@@@The authentication context contains information relevant to the authentication mechanisms used in Wi-Fi. Currently supported are Open and WPA/WPA2/WPA3-Personal. The structure WDRV_WINC_AUTH_CONTEXT...","GUID-0EB59C36-8667-47E0-BB7E-585BA68CFC88.html@@@1.2.5.2 WDRV_WINC_BSSFindFirst Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindFirst ( DRV_HANDLE handle, WDRV_WINC_CHANNEL_ID channel, bool active, const WDRV_WINC_SSID_LIST * const pSSIDList, const WDRV_WINC_BSSFIND_NOTIFY_CALLBACK...","GUID-0ECEDFB0-5F95-45BF-981B-90BB41E2DBD8.html@@@1.1.30.18 WDRV_WINC_WifiMACOptionsSet@@@WDRV_WINC_STATUS WDRV_WINC_WifiMACOptionsSet ( DRV_HANDLE handle, const WDRV_WINC_MAC_OPTIONS * const pMACOptions ) Configures WiFi MAC options. WDRV_WINC_Initialize must have been called...","GUID-0F4ACD3B-184C-4190-8771-A4443E8F9827.html@@@1.1.19 Client - Network Interface APIs@@@This interface provides functionality required for network interface operations. Multiple network interfaces are supported, in case separate configuration are required. Network interfaces are defined...","GUID-0FAAB5D2-B3D4-49EC-A751-6AA4C5678EDD.html@@@1.1.17.3 WDRV_WINC_FIRMWARE_VERSION_INFO Struct@@@typedef struct { bool isValid; /* Version number structure. */ struct { uint16_t major; uint16_t minor; uint16_t patch; } version; /* Build date/time structure. */ struct { uint8_t...","GUID-0FB3F908-88EE-45CE-94F5-E97AF9049C9B.html@@@Microchip Information@@@...","GUID-0FCAD104-BEE9-4C48-8C21-08A48BA12F99.html@@@1.1.2.3 WDRV_WINC_SPIDeinitialize@@@void WDRV_WINC_SPIDeinitialize ( void ) This function deinitializes the SPI object for the WiFi driver. WDRV_WINC_SPIInitialize must have been called. None. None. None...","GUID-104E40C1-F4A9-499B-A870-1A65C35EF5C1.html@@@1.3.10.2 WDRV_PIC32MZW_REGDOMAIN_SELECT Enum@@@typedef enum { WDRV_PIC32MZW_REGDOMAIN_SELECT_NONE, WDRV_PIC32MZW_REGDOMAIN_SELECT_CURRENT, WDRV_PIC32MZW_REGDOMAIN_SELECT_ALL } WDRV_PIC32MZW_REGDOMAIN_SELECT; Defines possible selections of...","GUID-10E4E4C5-848E-45F6-ABDB-2819383B122D.html@@@1.2.13.3 WDRV_WINC_BSSDisconnect Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSDisconnect (DRV_HANDLE handle) Disconnects from a BSS. Disconnects from an existing BSS. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been...","GUID-118D6516-8539-44C8-9655-2A37845C9849.html@@@1.3.5.5 WDRV_PIC32MZW_AuthCtxIsValid Function@@@bool WDRV_PIC32MZW_AuthCtxIsValid ( const WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx) Tests if an authentication context is valid. Tests the elements of the authentication context to judge if their...","GUID-11E4FD9C-17E6-4F65-AE7A-6550EB45E118.html@@@1.3 MPLAB\u00AE Harmony PIC32MZW1 WLAN Library@@@The PIC32MZW1 Wi-Fi module consists of two instances, a control instance and a data instance. The control instance is driven as a conventional Harmony system interface by the system kernel or...","GUID-1242E485-AAAF-4094-8BC0-26D08F544D47.html@@@1.1.1.1 WDRV_WINC_SYS_IDX_0 Macro@@@#define WDRV_WINC_SYS_IDX_0 0 U WINC device system interface index 0. None...","GUID-125F1A93-76CC-4BD7-BACA-01844FBD5F4F.html@@@Legal Notice@@@This publication and the information herein may be used only with Microchip products, including to design, test, and integrate Microchip products with your application. Use of this information in any...","GUID-127FE248-9405-4B74-9AAF-A094FAE1FA97.html@@@1.1.24.9 listen@@@int listen ( int fd, int backlog) Listen for connections on a socket. Parameters Description fd Socket file descriptor. backlog Maximum number of pending connections, currently ignored. 0 - Success...","GUID-12A4A89E-8B2F-49AB-8CDF-AC68A6835B3E.html@@@1.1.1.12 WDRV_WINC_ISR@@@void WDRV_WINC_ISR ( SYS_MODULE_OBJ object ) This function is called by the interrupt routines to signal an interrupt from the WINC. WDRV_WINC_Initialize must have been called. Parameters Description...","GUID-133ADB94-CBF7-48A3-A644-A3C5D73F6D06.html@@@1.3.4.4 WDRV_PIC32MZW_BSSCtxIsValid Function@@@bool WDRV_PIC32MZW_BSSCtxIsValid ( const WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, bool ssidValid ) Tests if a BSS context is valid. Tests the elements of the BSS context to judge if their values are...","GUID-13B5CDC6-2DC9-4E98-92CE-57513F0B0D80.html@@@1.1.29.2.1 WDRV_WINC_TLS_CS_HANDLE Typedef@@@typedef uint8_t WDRV_WINC_TLS_CS_HANDLE; Handle representing TLS cipher suites. None...","GUID-14055E8C-6857-470A-9688-C3530212D3A9.html@@@1.1.18.6.2 WDRV_WINC_MQTTSubPropDefaultSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTSubPropDefaultSet ( WDRV_WINC_MQTT_SUB_PROP *pSubProp ) Sets the subscribe property structure to safe default values. None. Parameters Description pSubProp Pointer to...","GUID-146944D1-7D0A-4266-854C-D839862B736B.html@@@1.2.12.7 WDRV_WINC_CustIEStoreCtxRemoveIE Function@@@WDRV_WINC_STATUS WDRV_WINC_CustIEStoreCtxRemoveIE ( WDRV_WINC_CUST_IE_STORE_CONTEXT * const pCustIECtx, uint8_t id ) Removes data from the custom IE store. This function removes a custom IE from the...","GUID-14E56CEC-4DA0-4224-B7C3-DD36BD3E79E2.html@@@1.3.3.9 WDRV_PIC32MZW_BSSFindNext Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindNext ( DRV_HANDLE handle, WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the next scan results be provided. The information structure of the...","GUID-156CFC83-0E02-4577-9E83-FC4F9ED255C5.html@@@1.1.18.8.3 WDRV_WINC_MQTTBrokerSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTBrokerSet ( DRV_HANDLE handle, const char *pAddress, uint16_t port, WDRV_WINC_TLS_HANDLE tlsHandle ) Configure the MQTT broker address and port as well as TLS handle...","GUID-162AD5A9-148E-430D-AA31-347A7A68CD96.html@@@1.2.12.5 WDRV_WINC_CUST_IE_STORE_CONTEXT Struct@@@typedef struct { /* Maximum length of the IE store data. */ uint8_t maxLength; /* Current length of data in the store. */ uint8_t curLength; /* IE data in store. */ uint8_t ieData[]; }...","GUID-16DCED4C-680C-4BB4-9E3E-81314FDF593D.html@@@1.1.18.8.2 WDRV_WINC_MQTT_CONN_STATUS_CALLBACK Typedef@@@typedef void (*WDRV_WINC_MQTT_CONN_STATUS_CALLBACK) ( DRV_HANDLE handle, uintptr_t userCtx, WDRV_WINC_MQTT_CONN_STATUS_TYPE state, WDRV_WINC_MQTT_CONN_INFO *pConnInfo ); Callback is called whenever...","GUID-17871A56-C6F1-48C2-8AC7-D046367FC6FB.html@@@1.2.14.8 WDRV_WINC_SSLECCReqCallbackSet Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLECCReqCallbackSet ( DRV_HANDLE handle, WDRV_WINC_REQ_ECC_CALLBACK pfECCREQCallback ) Set the ECC request callback. Registers the ECC request callback with the driver...","GUID-184C9520-803C-4DD0-B96E-EE90BA6A3888.html@@@1.1.18.4.5 WDRV_WINC_MQTTMsgInfoRetainSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTMsgInfoRetainSet ( WDRV_WINC_MQTT_MSG_INFO *pMsgInfo, bool retain ) Sets the retain property of a message info structure. WDRV_WINC_MQTTMsgInfoDefaultSet must have been...","GUID-18D1BB22-2A10-4A63-ABE6-36D8DAF91BF9.html@@@WDRV_WINC_MQTT_PUB_INVALID_HANDLE Macro@@@#define WDRV_WINC_MQTT_PUB_INVALID_HANDLE 0 This defines the value of an invalid publish handle. None...","GUID-198E91A2-4D66-4562-9E11-5EEE509BFC9A.html@@@1.1.29.1.14 WDRV_WINC_TLSCtxCipherSuiteSet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxCipherSuiteSet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, WDRV_WINC_TLS_CS_HANDLE tlsCsHandle ) Sets the TLS cipher suite. WDRV_WINC_Initialize must have...","GUID-19A929AC-0A90-41FA-98BF-D4BE597A685E.html@@@1.1.14.2 WDRV_WINC_DNS_RESOLVE_CALLBACK Typedef@@@void (*WDRV_WINC_DNS_RESOLVE_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_DNS_STATUS_TYPE status, uint8_t recordType, const char *pDomainName, WDRV_WINC_IP_MULTI_TYPE_ADDRESS *pIPAddr ); Callback...","GUID-1A16AFB9-0845-42CE-A604-361A3C412DED.html@@@1.2.10 Power Save Control@@@This topic provides information on how to control the power save modes of the WINC devices. The application can set and get the current power save mode of the WINC device using the functions...","GUID-1A48B726-35D9-4E22-B034-1B6B6817DD6D.html@@@1.2.12.6 WDRV_WINC_CustIEStoreCtxAddIE Function@@@WDRV_WINC_STATUS WDRV_WINC_CustIEStoreCtxAddIE ( WDRV_WINC_CUST_IE_STORE_CONTEXT * const pCustIECtx, uint8_t id, const uint8_t * const pData, uint8_t dataLength ) Add data to the custom IE store. The...","GUID-1B8A0623-FBC3-46A4-B1A5-4CB7C607899A.html@@@1.3.5.8 WDRV_PIC32MZW_AuthCtxSetOpen Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetOpen ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx ) Configure an authentication context for Open authentication. The auth type and information are...","GUID-1CBE2602-014E-441D-AA96-A164FA0C59BE.html@@@1.1.18.7.2 WDRV_WINC_MQTT_USER_PROP_CALLBACK Typedef@@@typedef void (*WDRV_WINC_MQTT_USER_PROP_CALLBACK) ( DRV_HANDLE handle, const WDRV_WINC_MQTT_USER_PROP * const pUserProps ); Callback is called when a user property is received. Parameters Description...","GUID-1CD690A6-5D93-4C13-9EB1-EC8B7F33CF4D.html@@@1.3.5.4 WDRV_PIC32MZW_AuthCtxConfigureMfp Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxConfigureMfp ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, WDRV_PIC32MZW_AUTH_MFP_CONFIG config ) Set the Management Frame Protection configuration of an...","GUID-1D05091F-1E8C-41C2-89E5-6F76D1CE034E.html@@@1.1.5.4 WDRV_WINC_CONN_STATE Enum@@@typedef enum { WDRV_WINC_CONN_STATE_DISCONNECTED, WDRV_WINC_CONN_STATE_CONNECTING, WDRV_WINC_CONN_STATE_CONNECTED, WDRV_WINC_CONN_STATE_FAILED, WDRV_WINC_CONN_STATE_ROAMED, } WDRV_WINC_CONN_STATE; A...","GUID-1D11DC07-7274-4060-8482-69AC0D5F249C.html@@@1.1.17.4 WDRV_WINC_InfoDriverVersionGet@@@WDRV_WINC_STATUS WDRV_WINC_InfoDriverVersionGet ( DRV_HANDLE handle, WDRV_WINC_DRIVER_VERSION_INFO * const pDriverVersion ) Returns information on the drivers version. WDRV_WINC_Initialize must have...","GUID-1D79FE90-0DEE-4D16-889A-67C596585DCD.html@@@1.1.6.5 WDRV_WINC_ASSOC_INFO Struct@@@typedef struct { DRV_HANDLE handle; WDRV_WINC_MAC_ADDR peerAddress; WDRV_WINC_AUTH_TYPE authType; int8_t rssi; uint16_t assocID; } WDRV_WINC_ASSOC_INFO; This structure contains the association...","GUID-1E7B25EC-6C88-473A-93B8-268896D380DA.html@@@1.1.13 Client - DHCP Server APIs@@@This interface supports configuring the DHCP server functionality within the WINCS02. To use the DHCP server its pool of addresses must be configured by calling WDRV_WINC_DHCPSPoolAddressSet . The...","GUID-21224849-4465-4BA5-80C4-ED03DF1E9AC7.html@@@1.2.15.7 WDRV_WINC_UTCToLocalTime Function@@@bool WDRV_WINC_UTCToLocalTime (uint32_t timeUTC, tstrSystemTime * const pSysTime) Convert UTC time to local system time. Converts UTC time into the local system time structure format. None. Param...","GUID-214624A4-2C2B-4A50-BE42-92CEBF57DAC5.html@@@1.2.12.1 WDRV_WINC_APSetCustIE Function@@@WDRV_WINC_STATUS WDRV_WINC_APSetCustIE ( DRV_HANDLE handle, const WDRV_WINC_CUST_IE_STORE_CONTEXT * const pCustIECtx ) Configures the custom IE. Soft-AP beacons may contain a application provided...","GUID-21750586-F9F2-4E33-87FB-8F2994BF4744.html@@@Trademarks@@@The Microchip name and logo, the Microchip logo, Adaptec, AVR, AVR logo, AVR Freaks, BesTime, BitCloud, CryptoMemory, CryptoRF, dsPIC, flexPWR, HELDO, IGLOO, JukeBlox, KeeLoq, Kleer, LANCheck, LinkMD...","GUID-21FC15BA-6E5E-4210-B81A-A0DED32516AD.html@@@1.2.9.2 WDRV_WINC_NVMEraseSector Function@@@WDRV_WINC_STATUS WDRV_WINC_NVMEraseSector ( DRV_HANDLE handle, WDRV_WINC_NVM_REGION region, uint8_t startSector, uint8_t numSectors ); Erase a sector within an NVM region. Erases a number of sectors...","GUID-222005DE-D1BE-4FB6-8648-B96294057BA8.html@@@1.2.15.4 WDRV_WINC_SystemTimeSNTPClientDisable Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSNTPClientDisable (DRV_HANDLE handle); Disable the SNTP client. Disables the SNTP client used to set the system time. WDRV_WINC_Initialize should have been called...","GUID-2335ACBC-3CA0-4AE1-A842-59F55DC0B149.html@@@1.2.6.7 WDRV_WINC_AuthCtxSetWPAEnterpriseTLS Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWPAEnterpriseTLS ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const char * const pUserDomain, const uint8_t * const pPrivateKey, const uint16_t privateKeyLength...","GUID-236D493D-2482-4D21-8584-2AC36951F21E.html@@@1.1.18.5.7 WDRV_WINC_MQTTPubPropContentTypeSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTPubPropContentTypeSet ( WDRV_WINC_MQTT_PUB_PROP *pPubProp, const uint8_t *pContentType ) Sets the content type property in the publish property structure...","GUID-237690AC-9D9D-4CE1-A4BE-BE2A0A41ABE1.html@@@1.2.6.12 WDRV_WINC_HTTPProvCtxSetDomainName Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetDomainName ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx, const char * const pname ) Define the DNS domain name for the provisioning server. This defines...","GUID-23D851D7-B213-4FC3-B20E-383B5CA7A58C.html@@@1.1.18.6.3 WDRV_WINC_MQTTSubPropSubscriptIDSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTSubPropSubscriptIDSet ( WDRV_WINC_MQTT_SUB_PROP *pSubProp, uint32_t subId ) Sets the subscription ID property in the subscribe property structure...","GUID-23F89985-906C-43A8-8B34-D2E7B9B3C0D9.html@@@1.1.29.1.7 WDRV_WINC_TLSCtxCACertFileSet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxCACertFileSet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, const char *pCACertName, bool peerAuth ) Sets the certificate authority field of a TLS context...","GUID-2486F605-C69E-4182-B038-F6EE43956CD2.html@@@1.2.15.6 WDRV_WINC_SYSTIME_CURRENT_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SYSTIME_CURRENT_CALLBACK) Callback returning the system time. Callback returning the system time. The time is returned as UTC seconds since 01/01/1970. None...","GUID-254098C7-BCA6-46F9-BD0F-579DC6FB13DA.html@@@1.1.29.2.9 WDRV_WINC_TLSCipherSuiteAlgGet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCipherSuiteAlgGet ( DRV_HANDLE handle, WDRV_WINC_TLS_CS_HANDLE tlsCsHandle, const WDRV_WINC_TLS_CS_CALLBACK pfTlsCsResponseCB, bool getDefaults ) Gets the current or...","GUID-2671E31D-FF25-48D7-BA45-794EAD5BB282.html@@@1.1.15.3 WDRV_WINC_EXTCRYPTOSignResult@@@WDRV_WINC_STATUS WDRV_WINC_EXTCRYPTOSignResult ( DRV_HANDLE handle, uintptr_t extCryptoCxt, bool status, const uint8_t * const pSignature, size_t lenSignature ) Provide the signature for a signing...","GUID-26B0D414-BB09-45D1-8D3F-178292E996D8.html@@@1.1.16.10 WDRV_WINC_FileOpen@@@WDRV_WINC_FILE_HANDLE WDRV_WINC_FileOpen ( DRV_HANDLE handle, const char *pFilename, WDRV_WINC_FILE_TYPE type, WDRV_WINC_FILE_MODE_TYPE mode, size_t lenFile, WDRV_WINC_FILE_STATUS_CALLBACK pfStatusCb...","GUID-26B4F763-DF5A-49C2-A4DF-B49456778E6E.html@@@1.1.19.3 WDRV_WINC_NETIF_INFO_TYPE Enum@@@typedef enum { WDRV_WINC_NETIF_INFO_INVALID, WDRV_WINC_NETIF_INFO_MAC_ADDR } WDRV_WINC_NETIF_INFO_TYPE; Possible values for network interface information. Members Description...","GUID-271CC4C5-196A-4BF0-BAF9-9A95284A87D7.html@@@1.3.1.1 WDRV_PIC32MZW_SYS_INIT Struct@@@typedef struct { /* Pointer to Crypt RNG context. */ CRYPT_RNG_CTX *pCryptRngCtx; /* Pointer to regulatory domain string. */ char * const pRegDomName; /* Power-Save Mode. */...","GUID-273595BD-8F0E-43A0-8F16-2E9A3BC8C32E.html@@@1.1.19.6 WDRV_WINC_NETIF_EVENT_HANDLER Typedef@@@typedef void (*WDRV_WINC_NETIF_EVENT_HANDLER) ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, WDRV_WINC_NETIF_EVENT_TYPE eventType, void *pEventInfo ); Callback to be used to convey network interface...","GUID-280694C4-227F-4691-BEF1-FB6365B3CD28.html@@@1.3.7 Client Interface - STA mode APIs@@@The PIC32MZW1 device can connect to a BSS as a Wi-Fi station device. To connect to a BSS the function WDRV_PIC32MZW_BSSConnect can be called, this takes two contexts which provide information about...","GUID-28265593-A1C2-42A4-AEE5-0EA4BAFFF996.html@@@1.1.18.10 WDRV_WINC_MQTT_PROTO_VER Enum@@@typedef enum { WDRV_WINC_MQTT_PROTO_VER_ 3 , WDRV_WINC_MQTT_PROTO_VER_ 5 } WDRV_WINC_MQTT_PROTO_VER; Possible MQTT protocol versions supported. Members Description WDRV_WINC_MQTT_PROTO_VER_3 MQTT...","GUID-2837E642-4901-446E-B0F5-8EE66291BCFC.html@@@1.3.10 Regulatory Domain Selection APIs@@@NOTE: There are restrictions on use of this API especially related to any exposure of this functionality to an end user. Please refer to the Radio Performance section of the Datasheet\u201D...","GUID-29414FB7-FC66-4DBA-9085-95AE709B8727.html@@@1.1.23.1 WDRV_WINC_SNTPEnableSet@@@WDRV_WINC_STATUS WDRV_WINC_SNTPEnableSet ( DRV_HANDLE handle, bool enabled ) Enables or disables the Simple Network Time Protocol (SNTP) client. WDRV_WINC_Initialize must have been called...","GUID-29793135-D6B2-40AF-8E70-B019E35213F4.html@@@1.1.29.2.3 WDRV_WINC_TLS_CS_INVALID_HANDLE Macro@@@#define WDRV_WINC_TLS_CS_INVALID_HANDLE 0 U Defines an invalid TLS cipher suite list handle. None...","GUID-2A105138-74F3-4FA1-B636-D7A60B1B64EB.html@@@1.1.18.4.4 WDRV_WINC_MQTTMsgInfoQoSSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTMsgInfoQoSSet ( WDRV_WINC_MQTT_MSG_INFO *pMsgInfo, WDRV_WINC_MQTT_QOS_TYPE qos ) Sets the QoS property of a message info structure. WDRV_WINC_MQTTMsgInfoDefaultSet must...","GUID-2A173EAE-1DB4-418C-A805-C68BE939178D.html@@@1.3.4.9 WDRV_PIC32MZW_BSSCtxSetSSIDVisibility Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetSSIDVisibility ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, bool visible ) Configures the visibility of the BSS context. Specific to Soft-AP mode this flag...","GUID-2ABD6FED-1321-45C2-9459-48EDAE276E06.html@@@1.1.7.4 WDRV_WINC_AUTH_TYPE Enum@@@typedef enum { WDRV_WINC_AUTH_TYPE_DEFAULT = - 1 , WDRV_WINC_AUTH_TYPE_OPEN = 0 , WDRV_WINC_AUTH_TYPE_WPAWPA2_PERSONAL = 2 , WDRV_WINC_AUTH_TYPE_WPA2_PERSONAL = 3...","GUID-2B16047F-F8F7-4400-864D-8ED801E07C20.html@@@WDRV_WINC_MQTT_SUB_STATUS_TYPE Enum@@@typedef enum { WDRV_WINC_MQTT_SUB_STATUS_ACKED, WDRV_WINC_MQTT_SUB_STATUS_RXDATA, WDRV_WINC_MQTT_SUB_STATUS_ERROR, WDRV_WINC_MQTT_SUB_STATUS_END } WDRV_WINC_MQTT_SUB_STATUS_TYPE; Possible values for...","GUID-2BDB3C21-2ECA-432D-B3AD-BE8077138F4C.html@@@1.1.9.14 WDRV_WINC_BSSFindGetNumBSSResults@@@uint8_t WDRV_WINC_BSSFindGetNumBSSResults ( DRV_HANDLE handle ) Returns the number of BSS scan results found. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been called to obtain...","GUID-2BF820F0-2994-4959-9ECE-DF04FDB15A0E.html@@@1.1.7.6 WDRV_WINC_AUTH_CONTEXT Struct@@@typedef struct { WDRV_WINC_AUTH_TYPE authType; uint8_t authMod; /* Union of data structures for each authentication type. */ union { /* WPA-Personal authentication state. */ struct { uint8_t size...","GUID-2C5CEB80-077C-4EB2-A2D5-9EF849C1F2F2.html@@@1.3.2.2 WDRV_PIC32MZW_Open Function@@@DRV_HANDLE WDRV_PIC32MZW_Open ( const SYS_MODULE_INDEX index, const DRV_IO_INTENT intent) Opens an instance of the PIC32MZW driver. Opens an instance of the PIC32MZW driver and returns a handle which...","GUID-2C6E0C40-1C65-45F6-BCD4-A44F91D8DE3A.html@@@1.1.19.1 WDRV_WINC_NETIF_IDX Enum@@@typedef enum { WDRV_WINC_NETIF_IDX_INVALID, WDRV_WINC_NETIF_IDX_ 0 , WDRV_WINC_NETIF_IDX_ 1 , WDRV_WINC_NETIF_IDX_DEFAULT, WDRV_WINC_NUM_NETIFS } WDRV_WINC_NETIF_IDX; Possible values for the network...","GUID-2C7E90FE-A597-4924-B4B6-5A062BBE1838.html@@@1.1.1.8 WDRV_WINC_Reinitialize@@@void WDRV_WINC_Reinitialize ( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ) This is the function that re-initializes the WINC. It is called by the system. WDRV_WINC_Initialize must have...","GUID-2C98CE0C-BC5E-4875-842C-2D591C000F85.html@@@1.2.6.5 WDRV_WINC_AuthCtxSetWPA Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWPA ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, uint8_t * const pPSK, uint8_t size ) Configure an authentication context for WPA-PSK authentication. The type and...","GUID-2D39B442-09EA-47D9-A710-67904FC4DA4F.html@@@1.3.8.4 WDRV_PIC32MZW_APRekeyIntervalSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APRekeyIntervalSet ( DRV_HANDLE handle, const uint32_t interval ) Configures the group re-key interval used when operating in Soft-AP mode The re-key interval...","GUID-2EE5E09F-F7A3-4B3A-9CEE-DB7F52840E02.html@@@1.3.11 Vendor IE API Implementation@@@...","GUID-2F989B2F-B851-4A6E-BD04-D852FD04F254.html@@@1.1.12.1 WDRV_WINC_DEBUG_PRINT_CALLBACK Typedef@@@typedef void (*WDRV_WINC_DEBUG_PRINT_CALLBACK) ( const char *format, ... ); The function callback provides a printf-like prototype. Parameters Description format Format specifiers in printf style...","GUID-2FAD3653-78B4-42A4-89A3-D1F492AE27A0.html@@@1.2.7 Client Interaction@@@This topic provides information on general client operation. General Client Operation For the application to begin using an instance of the WINC module, it must call the WDRV_WINC_Open function. This...","GUID-2FD9AC4C-2CEA-4340-A001-68B0FD46B615.html@@@1.1.19.5 WDRV_WINC_NETIF_ADDR_UPDATE_TYPE Struct@@@typedef struct { WDRV_WINC_IP_ADDRESS_TYPE type; WDRV_WINC_IP_MULTI_ADDRESS addr; } WDRV_WINC_NETIF_ADDR_UPDATE_TYPE; Structure to contain an IP address update. Members Description type Type of...","GUID-30254EA1-9A20-4F0A-BB0C-50F3C5CE24D5.html@@@1.3.11.1 WDRV_PIC32MZW_IE_FRAME_TYPE_MASK Enum@@@typedef enum { /* If set in Tx API, the custom IE data provided by the application will be * added to the beacon frames while transmitting beacons. If set in Rx API, * the vendor specific IE data from...","GUID-30BE20F5-015A-4498-8163-33B711BEB52D.html@@@1.1.18.9.5 WDRV_WINC_MQTTPublish@@@WDRV_WINC_STATUS WDRV_WINC_MQTTPublish ( DRV_HANDLE handle, const WDRV_WINC_MQTT_MSG_INFO *pMsgInfo, const char *pTopicName, const uint8_t *pTopicData, size_t topicDataLen...","GUID-313368DE-CCC8-459C-99DE-47762D5731CC.html@@@1.2.7.1 WDRV_WINC_Close Function@@@void WDRV_WINC_Close (DRV_HANDLE handle) Closes an instance of the WINC driver. This is the function that closes an instance of the MAC. All per client data is released and the handle can no longer be...","GUID-31497D4C-2D61-42B6-8218-BBB69E77EE97.html@@@1.2.11.4 WDRV_WINC_Status Function@@@SYS_STATUS WDRV_WINC_Status (SYS_MODULE_OBJ object) Provides the current status of the WINC driver module. This function provides the current status of the WINC driver module. WDRV_WINC_Initialize...","GUID-31D550DE-5F4E-4593-97FE-3F5BEB6B3A82.html@@@1.1.29.1.1 WDRV_WINC_TLS_HANDLE Typedef@@@typedef uint8_t WDRV_WINC_TLS_HANDLE; Handle representing TLS contexts. None...","GUID-31D64AD3-E7A2-4855-8130-ADBDE6EB8505.html@@@1.1.6.4 WDRV_WINC_ASSOC_RSSI_CALLBACK Typedef@@@typedef void (*WDRV_WINC_ASSOC_RSSI_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_ASSOC_HANDLE assocHandle, int8_t rssi ); This callback provides details of the signal strength (RSSI) of the current...","GUID-322BB018-8034-4AC1-9389-C87D90C05150.html@@@1.1.24.15 setsockopt@@@int setsockopt ( int fd, int level, int optname, const void *optval, socklen_t optlen) Set options on sockets. Parameters Description fd Socket file descriptor. level Option level. optname Option...","GUID-326AA97A-3AC5-46B4-B007-B9D10141A900.html@@@1.1.30.5 WDRV_WINC_REGDOMAIN_INFO Struct@@@typedef struct { uint8_t regDomainLen; uint8_t regDomain[WDRV_WINC_REGDOMAIN_MAX_NAME_LEN]; } WDRV_WINC_REGDOMAIN_INFO; Specifies the country code length, country code associated with the regulatory...","GUID-328AB21B-BE8E-470B-A40F-E400D7599E18.html@@@1.1.26.2 WDRV_WINC_APStart@@@WDRV_WINC_STATUS WDRV_WINC_APStart ( DRV_HANDLE handle, const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const WDRV_WINC_CONN_CFG *pWiFiCfg, const...","GUID-336E3831-F0E2-43EF-A87F-933244A0DC81.html@@@1.1.1.5 WDRV_WINC_SYS_STATUS Enum@@@typedef enum { WDRV_WINC_SYS_STATUS_ERROR_DEVICE_NOT_FOUND, WDRV_WINC_SYS_STATUS_ERROR_DEVICE_FAILURE } WDRV_WINC_SYS_STATUS; An extended status Members Description...","GUID-339C64DA-F57A-42E4-8018-96013D179999.html@@@1.2.15 System Time Control@@@This topic provides information on how the WINC system time can be controlled and queried. The WINC device maintains a system time internally. Time can be set in two ways, by an NTP query from the...","GUID-34039A6A-F27D-4BF6-BD76-9F47983D235A.html@@@1.2.12.2 WDRV_WINC_APStart Function@@@WDRV_WINC_STATUS WDRV_WINC_APStart ( DRV_HANDLE handle, const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const WDRV_WINC_HTTP_PROV_CONTEXT * const...","GUID-342A150F-5753-4A81-8D81-FBA07A561B60.html@@@1.1.30.17 WDRV_WINC_WifiCoexConfGet@@@WDRV_WINC_STATUS WDRV_WINC_WifiCoexConfGet ( DRV_HANDLE handle, WDRV_WINC_COEX_CFG *pCoexCfg, bool *pIsEnabled ) Returns the current coexistence arbiter configuration related to interface mode...","GUID-35059B4D-093C-48D6-B789-CEA549149CC0.html@@@1.1.27.3 WDRV_WINC_BSSConnect@@@WDRV_WINC_STATUS WDRV_WINC_BSSConnect ( DRV_HANDLE handle, const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const WDRV_WINC_CONN_CFG *pWiFiCfg, const...","GUID-3526C88F-E441-449E-84FA-7F6CD533C75B.html@@@1.1.8.1 WDRV_WINC_BSS_CONTEXT Struct@@@typedef struct { WDRV_WINC_SSID ssid; WDRV_WINC_MAC_ADDR bssid; WDRV_WINC_CHANNEL_ID channel; } WDRV_WINC_BSS_CONTEXT; The context contains the SSID, channel and visibility of a BSS. Members...","GUID-35AEB7EE-B0EA-45A7-884F-6C1A05971FBF.html@@@1.2.5.11 WDRV_WINC_BSSFindSetScanParameters Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetScanParameters ( DRV_HANDLE handle, uint8_t numSlots, uint8_t activeSlotTime, uint8_t passiveSlotTime, uint8_t numProbes ) Configures the scan operation. The scan...","GUID-35BCCF59-0AAA-4BE8-AF97-89A4C831D338.html@@@1.1.6.8 WDRV_WINC_AssocDisconnect@@@WDRV_WINC_STATUS WDRV_WINC_AssocDisconnect ( WDRV_WINC_ASSOC_HANDLE assocHandle ) This API disconnects the STA associated with softAP based on the input association handle. Association handle is...","GUID-36905F6F-54E5-468D-8F0C-06B14514D281.html@@@1.1.18.2.3 WDRV_WINC_MQTTConnPropSessionExpirySet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTConnPropSessionExpirySet ( WDRV_WINC_MQTT_CONN_PROP *pConnProp, uint32_t expiryTime ) Sets the session expiry time property in the connection property structure...","GUID-3744A796-97FD-42E1-91E5-6AC2632D5607.html@@@1.2.6.3 WDRV_WINC_AuthCtxSetOpen Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetOpen ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) Configure an authentication context for Open authentication. The type and state information are configured...","GUID-37E48D5C-A9B3-439F-A4DA-0761E4EC57F7.html@@@1.1.29.1.8 WDRV_WINC_TLSCtxCertFileSet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxCertFileSet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, const char *pCertName ) Sets the certificate field of a TLS context. WDRV_WINC_Initialize must have...","GUID-38B98272-9F79-4E2B-8B1B-1BE940F6B02A.html@@@1.2.4 BLE Operation@@@This topic provides information on how ATWINC3400 BLE operations are controlled. The ATWINC3400 device includes BLE functionality, while this driver does not provide direct access to the BLE...","GUID-38DEB132-EAB0-4B5C-905A-37F12F416A43.html@@@1.1.5.7 WDRV_WINC_MAC_ADDR Struct@@@typedef struct { uint8_t addr[WDRV_WINC_MAC_ADDR_LEN]; bool valid; } WDRV_WINC_MAC_ADDR; The MAC address consist of a buffer and a valid flag. Members Description addr MAC address, must be...","GUID-39D1EB75-81FB-421B-874F-D79CD542D967.html@@@1.2.9.3 WDRV_WINC_NVMRead Function@@@WDRV_WINC_STATUS WDRV_WINC_NVMRead ( DRV_HANDLE handle, WDRV_WINC_NVM_REGION region, void *pBuffer, uint32_t offset, uint32_t size ); Reads data from an NVM region. Reads the number of bytes specified...","GUID-3A5DC2A3-B246-4811-BC2F-4829FB487294.html@@@1.3.4.8 WDRV_PIC32MZW_BSSCtxSetSSID Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetSSID ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, uint8_t * const pSSID, uint8_t ssidLength ) Configures the SSID of the BSS context. The SSID string and...","GUID-3A812688-3729-46D1-BDD9-A66330FA9350.html@@@1.1.13.1 WDRV_WINC_DHCPS_IDX@@@typedef enum { WDRV_WINC_DHCPS_IDX_INVALID = - 1 , WDRV_WINC_DHCPS_IDX_ 0 = 0 , } WDRV_WINC_DHCPS_IDX; Type describing possible DHCP server pool indexes. Members Description...","GUID-3A9E52A4-17AC-4133-81BB-1BD7BF256C66.html@@@1.1.10 Client - Bypass Mode APIs@@@This interface allows the application to send and receive layer 2 (Ethernet) data frames, bypassing the WINCS02 device&apos;s in-built network layer 3 (IP). The WINCS02 device&apos;s in-built network layer 3...","GUID-3AD98956-9F94-46AE-9499-1EDAD7E191D9.html@@@1.3.4.6 WDRV_PIC32MZW_BSSCtxSetChannel Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetChannel ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, WDRV_PIC32MZW_CHANNEL_ID channel ) Configures the channel of the BSS context. The supplied channel...","GUID-3B3A9EE5-573C-4E99-9541-3D78EA7D1FF2.html@@@1.1.21.8 WDRV_WINC_OTAImageActivate@@@WDRV_WINC_STATUS WDRV_WINC_OTAImageActivate ( DRV_HANDLE handle, const WDRV_WINC_OTA_STATUS_CALLBACK pfUpdateStatusCB ) Marks a firmware image in NVM memory as active so that it will be used on the...","GUID-3B687BA8-CC6B-4846-A782-129F1EBC470C.html@@@1.2.5 BSS Search@@@The application can use this interface to request a scan for local BSSs. Once requested the WINC device will conduct the search using the configured search parameters and report the results back to...","GUID-3BD62324-3750-43B6-9FE5-A486021AC455.html@@@1.1.29.2 TLS Cipher Suite Lists@@@TLS ciphersuite lists encapsulate lists of ciphersuite IDs which can be associated with a TLS context. The initial contents of each TLS ciphersuite list is the default list of ciphersuite IDs provided...","GUID-3C4416D8-1EC6-4BFD-94B6-8FBA3C4181A0.html@@@1.1.29.1.5 WDRV_WINC_TLSCtxOpen@@@WDRV_WINC_TLS_HANDLE WDRV_WINC_TLSCtxOpen ( DRV_HANDLE handle ) Obtains a handle to a free TLS context. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been called to obtain a...","GUID-3CEC9BF3-313A-4F4D-B11B-FB884B5494B5.html@@@1.1.19.10 WDRV_WINC_NetIfIPAutoConfModeSet@@@WDRV_WINC_STATUS WDRV_WINC_NetIfIPAutoConfModeSet ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, WDRV_WINC_NETIF_AAC_TYPE aacMode ) Sets how the IP address of the network interface can be assigned...","GUID-3D1E32DB-4425-4009-9267-8617566212CD.html@@@1.3.12.4 WDRV_PIC32MZW_GetStatistics Function@@@void WDRV_PIC32MZW_GetStatistics ( DRV_HANDLE handle, WDRV_PIC32MZW_MAC_MEM_STATISTICS *pStats ); Retrieves the static data of the PIC32MZW. Retrieves the static data of the PIC32MZW...","GUID-3DC860C4-4FAC-4FC2-A33D-C1D5F33F5820.html@@@1.1.18.3 Connection Acknowledgement Properties@@@Connection Acknowledgement properties can be received in a CONNACK message in the WDRV_WINC_MQTT_CONNACK_PROP as part of the WDRV_WINC_MQTT_CONN_INFO structure via the...","GUID-3E485907-2C41-4C9A-A5A9-BF00F332D046.html@@@1.2.16 WPS@@@This topic provides information on how to use WPS to connect to Wi-Fi BSSs. The WINC device supports WPS using PIN and PBC methods. Two functions are provided to begin WPS enrollee discovery using...","GUID-3FA73927-6033-486F-9B99-56499E11F6FE.html@@@1.1.29.1.12 WDRV_WINC_TLSCtxHostnameCheckSet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxHostnameCheckSet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, const char *pDomainName, bool verifyDomain ) Sets the hostname check field of a TLS context...","GUID-3FBB1D60-62D2-4D05-8D9F-0A5C2FC4ABC2.html@@@1.1.5 Client - Common@@@These are definitions which are used by many different interfaces...","GUID-3FD559C0-0864-4DCE-A113-101288D32FE2.html@@@1.3.5.7 WDRV_PIC32MZW_AuthCtxSetEnterpriseTLS Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetEnterpriseTLS ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, const char * const pUserDomain, WDRV_PIC32MZW_TLS_CONTEXT_HANDLE tlsCtxHandle...","GUID-40DCEB0D-948A-4130-B509-532AAC87797D.html@@@1.1.3.1 WDRV_WINC_INTInitialize@@@void WDRV_WINC_INTInitialize ( SYS_MODULE_OBJ object, int intSrc ) This function initializes interrupts for the WiFi driver. WDRV_WINC_Initialize must have been called before calling this function...","GUID-410EFAD2-61EC-437C-90F3-73A4DE1852D4.html@@@1.1.18 Client - MQTT APIs@@@This API allows the application to connect to an MQTT broker and exchange messages. Features include: Support for MQTT V3.1.1 and V5. Secure TLS connection. Publish to topics by name and alias (V5)...","GUID-4255E21D-806B-4BD9-B564-B661790C123F.html@@@1.1.9.6 WDRV_WINC_BSSFindFirst@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindFirst ( DRV_HANDLE handle, WDRV_WINC_CHANNEL_ID channel, bool active, const WDRV_WINC_SSID_LIST * const pSSIDList, const WDRV_WINC_BSSFIND_NOTIFY_CALLBACK...","GUID-427F1B64-0FB1-44A9-AE31-0B30981FB5E9.html@@@1.1.7.9 WDRV_WINC_AuthCtxSetDefaults@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetDefaults ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) Ensures that each element of the structure is configured into a default state. None. Parameters Description...","GUID-428BA90A-8569-4AF5-99EF-A915134BF434.html@@@1.3.3 Client - BSS Find APIs@@@The application can use this interface to request a scan for local BSSs. Once requested, the device will conduct the search using the configured search parameters and report the results back to the...","GUID-44CD91F0-B619-4120-AB58-96E1AB543F0B.html@@@1.1.27 Client - Station APIs@@@This interface allows the WINCS02 to connect to a BSS as a station. The function WDRV_WINC_BSSConnect is provided to perform the connection operation. This function accepts both a BSS context and an...","GUID-44FF5A20-CD27-40EC-9DBE-EE5848F6C6B2.html@@@1.2.8.7 WDRV_WINC_IPDHCPServerConfigure Function@@@WDRV_WINC_STATUS WDRV_WINC_IPDHCPServerConfigure ( DRV_HANDLE handle, uint32_t ipAddress, uint32_t netMask, WDRV_WINC_DHCP_ADDRESS_EVENT_HANDLER const pfDHCPAddressEventCallback ) Configures the...","GUID-4594F3F1-EA78-43B4-854F-36413FDD31C5.html@@@1.3.8 Client Interface - Soft AP mode APIs@@@The PIC32MZW1 device can create a Soft-AP allowing a Wi-Fi station device to connect to the PIC32MZW1. To create a Soft-AP the function WDRV_PIC32MZW_APStart is called. This function takes several...","GUID-46257952-2442-458D-9867-DA5BC4393601.html@@@1.2.16.1 WDRV_WINC_WPS_DISC_CALLBACK Typedef@@@typedef void (*WDRV_WINC_WPS_DISC_CALLBACK) Callback to report WPS discovery results. Callback to report WPS discovery results. None...","GUID-46A68417-E0EF-42D6-8005-4627888EB3C4.html@@@1.1.22.5 WDRV_WINC_ProvServiceStop@@@WDRV_WINC_STATUS WDRV_WINC_ProvServiceStop ( DRV_HANDLE handle ) Stops a provisioning service. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been called to obtain a valid...","GUID-46CBE331-4DD4-4361-BB0F-4DAA6AFB8251.html@@@1.1.16.8 WDRV_WINC_FILE_STATUS_CALLBACK Typedef@@@typedef void (*WDRV_WINC_FILE_STATUS_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_FILE_HANDLE fHandle, uintptr_t userCtx, WDRV_WINC_FILE_STATUS_TYPE status ); Definition of file status callback, used to...","GUID-46E9A47A-7AFE-4CAC-8E37-E6BA9E506666.html@@@1.1.1.7 WDRV_WINC_Deinitialize@@@void WDRV_WINC_Deinitialize ( SYS_MODULE_OBJ object ) This is the function that deinitializes the WINC. It is called by the system. WDRV_WINC_Initialize must have been called. Parameters Description...","GUID-46F712DC-4824-449D-9199-9AF12D72B0BF.html@@@1.3.8.2 WDRV_PIC32MZW_APStart Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APStart ( DRV_HANDLE handle, const WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, const WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, const...","GUID-474967A0-8416-46B3-9E57-9DE3A001326E.html@@@1.1.24.18 inet_pton@@@int inet_pton ( int af, const char *s, void *a0) Convert IPv4 and IPv6 addresses from text to binary form. Parameters Description af Address family, either AF_INET or AF_INET6 . s Pointer to input IP...","GUID-4857DE4D-B3E7-458A-B25E-BAC2571A06AD.html@@@1.1.16.5 WDRV_WINC_FILE_HANDLE Typedef@@@typedef uintptr_t WDRV_WINC_FILE_HANDLE; WINC file handle type definition. None...","GUID-4952B1AB-8197-4ED4-B46F-BBBD86E30B30.html@@@1.1.2.4 WDRV_WINC_SPIOpen@@@bool WDRV_WINC_SPIOpen ( void ) This function opens the SPI object for the WiFi driver. WDRV_WINC_SPIInitialize must have been called. None. true of false indicating success of operation. None...","GUID-4B7527DC-12C4-4A41-8004-41415FF65DAB.html@@@1.3.1 System Interface APIs@@@The PIC32MZW1 Wi-Fi module consists of two instances, a control instance and a data instance. The control instance is driven as a conventional Harmony system interface by the system kernel or...","GUID-4BA18BFC-A824-4574-BF01-95818C53B59A.html@@@1.1.20.4 WDRV_WINC_NVM_GEOM_INFO Struct@@@typedef struct { struct { uint16_t number; uint16_t size; } sector; struct { uint32_t start; } address; } WDRV_WINC_NVM_GEOM_INFO; Geometry information about NVM geometry like sector size and number...","GUID-4CB9E571-2A08-47B5-B3F3-76C0CEB81767.html@@@1.2.8.6 WDRV_WINC_IPDefaultGatewaySet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPDefaultGatewaySet ( DRV_HANDLE handle, uint32_t gatewayAddress ) Configures the default gateway used by the WINC. Disables DHCP on the WINC and assigns a static default...","GUID-4D0F629D-36BF-4205-91F0-AC0118A3D665.html@@@1.2.11.3 WDRV_WINC_Reinitialize Function@@@void WDRV_WINC_Reinitialize ( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ) WINC driver reinitialization function. This is the function that re-initializes the WINC. It is called by the...","GUID-4D6BE8EC-13EC-4A94-ABDE-0605142C88B5.html@@@1.3.6.6 WDRV_PIC32MZW_AssocPeerAddressGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocPeerAddressGet ( WDRV_PIC32MZW_ASSOC_HANDLE assocHandle, WDRV_PIC32MZW_MAC_ADDR * const pPeerAddress ) Retrieve the current association peer device network...","GUID-4E25D2C0-21B1-43D6-B3F1-33DE1D7CDC6E.html@@@1.2.5.6 WDRV_WINC_BSSFindNext Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindNext ( DRV_HANDLE handle, WDRV_WINC_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the next scan results be provided. The information structure of the next BSS is...","GUID-4E5D2B7C-5BDC-4C23-8747-D530B99ECF63.html@@@1.3.10.5 WDRV_PIC32MZW_RegDomainSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_RegDomainSet ( DRV_HANDLE handle, const char *pRegDomain, const WDRV_PIC32MZW_REGDOMAIN_CALLBACK pfRegDomCallback ) Attempts to set the current regulatory domain...","GUID-4EC8AD6B-F2ED-4E18-965F-82C5B8A3028F.html@@@1.2 MPLAB\u00AE Harmony WINC WLAN Library@@@The MPLAB Harmony WINC Driver provides a high-level interface to the ATWINC1500 and ATWINC3400 Wi-Fi network controller modules. The WINC Driver Library, in conjunction with the ATWINC1500 or...","GUID-4F001B89-BAE8-438A-987F-DE04F8F1414A.html@@@1.1.30.12 WDRV_WINC_WifiPowerSaveModeGet@@@WDRV_WINC_STATUS WDRV_WINC_WifiPowerSaveModeGet ( DRV_HANDLE handle, WDRV_WINC_POWERSAVE_CALLBACK pfPowersaveEventCB ) Retrieves the currently applied powersave mode. WDRV_WINC_Initialize must have...","GUID-4FAD93E9-85FB-4180-908D-DDB94AB6F6BB.html@@@1.2.10.3 WDRV_WINC_PowerSaveSetBeaconInterval Function@@@WDRV_WINC_STATUS WDRV_WINC_PowerSaveSetBeaconInterval ( DRV_HANDLE handle, uint16_t numBeaconIntervals ) Configures the beacon listening interval. The beacon listening interval specifies how many...","GUID-514964D4-5786-4161-ADA6-185B1B434707.html@@@1.1.17 Client - Driver Information APIs@@@This interface provides information about the WINCS02 driver and WINCS02 device...","GUID-5160F49B-444F-4D1A-A398-5207DEF78843.html@@@1.3.3.2 WDRV_PIC32MZW_SCAN_MATCH_MODE Enum@@@typedef enum { /* Stop scan on first match. */ WDRV_PIC32MZW_SCAN_MATCH_MODE_STOP_ON_FIRST, /* Scan for all matches. */ WDRV_PIC32MZW_SCAN_MATCH_MODE_FIND_ALL } WDRV_PIC32MZW_SCAN_MATCH_MODE; List of...","GUID-5195123C-F0F4-4B6F-8424-A8B39E368881.html@@@1.2.8.12 WDRV_WINC_SocketRegisterEventCallback Function@@@WDRV_WINC_STATUS WDRV_WINC_SocketRegisterEventCallback ( DRV_HANDLE handle, tpfAppSocketCb pfAppSocketCb ) Register an event callback for socket events. Socket events are dispatched to the application...","GUID-51FC8FF8-6BFC-4204-8F79-23B2F77F1EA4.html@@@1.1.9 Client - BSS Find APIs@@@The application can use this interface to request a scan for local BSSs. Once requested, the device will conduct the search using the configured search parameters and report the results back to the...","GUID-526664A1-D8FB-4EA7-B0FB-B437B628AA30.html@@@1.1.7.11 WDRV_WINC_AuthCtxSetPersonal@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetPersonal ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, uint8_t *pPassword, uint8_t size, WDRV_WINC_AUTH_TYPE authType ) The auth type and information are configured...","GUID-52CD7D3E-80E9-4AC5-8460-D486BA173A54.html@@@1.1.18.1.1 WDRV_WINC_MQTT_CONN_INFO Struct@@@typedef struct { bool sessionPresent; uint8_t connectReasonCode; WDRV_WINC_MQTT_CONNACK_PROP properties; } WDRV_WINC_MQTT_CONN_INFO; Properties associated with an MQTT connection attempt. Members...","GUID-533D5ED2-D4A6-4D2D-96C2-F22F52395F72.html@@@1.3.12 Client - Information APIs@@@This interface provides general information about the device...","GUID-537E27A2-F053-4056-861D-7A2157C17DE6.html@@@1.3.12.6 WDRV_PIC32MZW_InfoEnabledChannelsGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoEnabledChannelsGet ( DRV_HANDLE handle, WDRV_PIC32MZW_CHANNEL24_MASK * const pChannelMask ) Retrieves the enabled channels of the PIC32MZW. Retrieves the enabled...","GUID-53DCA511-B5A6-4224-A0F5-C5EB4087C934.html@@@1.1.29.1.6 WDRV_WINC_TLSCtxClose@@@void WDRV_WINC_TLSCtxClose ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle ) Frees a TLS context handle for other uses. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been...","GUID-53F8EA6A-F40A-4E38-993E-68BAF49AA81A.html@@@1.1.5.1 WDRV_WINC_BSSCON_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_WINC_BSSCON_NOTIFY_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_ASSOC_HANDLE assocHandle, WDRV_WINC_CONN_STATE currentState ); When the connection state changes this callback enable...","GUID-542B1508-F7EA-4EF6-83BB-0A91DBF35020.html@@@1.1.13.5 WDRV_WINC_DHCPSNetIfBind@@@WDRV_WINC_STATUS WDRV_WINC_DHCPSNetIfBind ( DRV_HANDLE handle, WDRV_WINC_DHCPS_IDX poolIdx, WDRV_WINC_NETIF_IDX ifIdx ) Assigns a DHCP server pool to the specified network interface...","GUID-549761E8-0692-4599-8B0D-AB64FDA1DB3F.html@@@1.1.14 Client - DNS APIs@@@This interface supports configuring and using the DNS client within the WINCS02 device. The DNS servers used by the device can be configured statically by the application using the function...","GUID-54A43A1B-F025-4502-90B0-C2A9F8F41065.html@@@1.1.9.13 WDRV_WINC_BSSFindGetScanChannels24@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindGetScanChannels24 ( DRV_HANDLE handle, WDRV_WINC_CHANNEL24_MASK * const pChannelMask ) In some scenarios an application may want to scan on a subset of channels. This...","GUID-55AAD917-8AB7-4FF9-813B-76B946D6C51A.html@@@1.1.27.2 WDRV_WINC_BSSDefaultWiFiCfg@@@WDRV_WINC_STATUS WDRV_WINC_BSSDefaultWiFiCfg ( WDRV_WINC_CONN_CFG * const pWiFiCfg ) Create a default WiFi configuration structure suitable for connecting to a BSS as a STA. None. Parameters...","GUID-56113E8A-96A0-4600-BAE3-746B4F2BE950.html@@@1.1.9.5 WDRV_WINC_BSSFIND_NOTIFY_CALLBACK Typedef@@@typedef bool (*WDRV_WINC_BSSFIND_NOTIFY_CALLBACK) ( DRV_HANDLE handle, uint8_t index, uint8_t ofTotal, WDRV_WINC_BSS_INFO *pBSSInfo ); When the information about a discovered BSS is requested the...","GUID-562FFC3B-E23F-423C-B72D-C2DE095DDB01.html@@@1.3.3.13 WDRV_PIC32MZW_BSSFindSetScanParameters Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindSetScanParameters ( DRV_HANDLE handle, uint8_t numSlots, uint16_t activeSlotTime, uint16_t passiveSlotTime, uint8_t numProbes ) Configures the scan operation...","GUID-566318FA-E8EF-46A9-AB72-FBCDDB836580.html@@@1.1.22.1 WDRV_WINC_PROV_CLIENT_ID Typedef@@@typedef int WDRV_WINC_PROV_CLIENT_ID; A client ID associated with clients to the provisioning service. None...","GUID-577EB4F3-C11B-4D1A-BB91-0CFDB6EF6FB7.html@@@1.3.12.7 WDRV_PIC32MZW_InfoOpChanGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoOpChanGet ( DRV_HANDLE handle, uint8_t * const pMACAddress ) Retrieves the operating channel of the PIC32MZW. Retrieves the current operating channel...","GUID-578C5D8D-B9C9-487E-B3F4-DF97B7AA9A66.html@@@1.1.29.2.5 WDRV_WINC_TLSCSCTX_INFO Struct@@@typedef struct { bool idxInUse; WINC_CMD_REQ_HANDLE setCmdReqHandle; } WDRV_WINC_TLSCSCTX_INFO; Structure containing information about a TLS cipher suite. Members Description idxInUse Flag indicating...","GUID-579FADC9-118B-4DB9-8A61-89F87AAAB36F.html@@@1.2.12 Soft-AP@@@This topic provides information on how to operate a Soft AP. The WINC device can create a Soft-AP allowing a Wi-Fi station device to connect to the WINC. There are two forms of Soft-AP which can be...","GUID-59578B0F-C244-4349-9F81-8229B80F04E4.html@@@1.2.3.7 WDRV_WINC_AssocRSSIGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocRSSIGet ( DRV_HANDLE handle, int8_t * const pRSSI, WDRV_WINC_ASSOC_RSSI_CALLBACK const pfAssociationRSSICB ) Retrieve the current association RSSI. Attempts to retrieve...","GUID-59A4C29B-EABD-4A0A-8687-BAAF282F8F24.html@@@1.1.15.1 WDRV_WINC_EXTCRYPTO_SIG_ALGO Enum@@@typedef enum { WDRV_WINC_EXTCRYPTO_SIG_ALGO_INVALID = 0 , WDRV_WINC_EXTCRYPTO_SIG_ALGO_ECDSA_SECP256R1, WDRV_WINC_EXTCRYPTO_SIG_ALGO_ECDSA_SECP384R1, WDRV_WINC_EXTCRYPTO_SIG_ALGO_ECDSA_SECP521R1 }...","GUID-59CA8683-3A83-4D79-8315-1A295F015D36.html@@@1.1.18.2.5 WDRV_WINC_MQTTConnPropReceiveMaxSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTConnPropReceiveMaxSet ( WDRV_WINC_MQTT_CONN_PROP *pConnProp, uint16_t receiveMax ) Sets the receive maximum property in the connection property structure...","GUID-5AAAE8F1-FD7E-4586-A07F-C915566476DB.html@@@1.1.18.8.1 WDRV_WINC_MQTT_CONN_STATUS_TYPE Enum@@@typedef enum { WDRV_WINC_MQTT_CONN_STATUS_UNKNOWN, WDRV_WINC_MQTT_CONN_STATUS_DISCONNECTED, WDRV_WINC_MQTT_CONN_STATUS_CONNECTING, WDRV_WINC_MQTT_CONN_STATUS_CONNECTED...","GUID-5AFD5446-59A9-4EC8-ACFC-46A05F66BA2F.html@@@1.1.14.1 WDRV_WINC_DNS_STATUS_TYPE Enum@@@typedef enum { WDRV_WINC_DNS_STATUS_OK = WINC_STATUS_OK, WDRV_WINC_DNS_STATUS_ERROR = WINC_STATUS_DNS_ERROR, WDRV_WINC_DNS_STATUS_TIME_OUT = WINC_STATUS_DNS_TIMEOUT } WDRV_WINC_DNS_STATUS_TYPE; Type...","GUID-5C692195-B523-4322-A373-4780486CD3AB.html@@@1.3.7.1 WDRV_PIC32MZW_BSSConnect Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSConnect ( DRV_HANDLE handle, const WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, const WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, const...","GUID-5C9FC401-24C1-4E76-90C8-BC8CD7643065.html@@@1.1.20.9 WDRV_WINC_NVMGeometryGet@@@const WDRV_WINC_NVM_GEOM_INFO* const WDRV_WINC_NVMGeometryGet ( DRV_HANDLE handle ); Returns information on the geometry (sector size, number of sectors, etc) of the NVM region. WDRV_WINC_Initialize...","GUID-5CC2152D-A6E7-4DAF-AFF7-1901DEEAD5B2.html@@@1.1.8.6 WDRV_WINC_BSSCtxSetSSID@@@WDRV_WINC_STATUS WDRV_WINC_BSSCtxSetSSID ( WDRV_WINC_BSS_CONTEXT * const pBSSCtx, uint8_t * const pSSID, uint8_t ssidLength ) The SSID string and length provided are copied into the BSS context. None...","GUID-5DC47D78-D069-4AB5-A4DC-E26D1400947A.html@@@1.1.24.10 recv@@@ssize_t recv ( int fd, void *buf, size_t len, int flags) Receive a message from a socket. Parameters Description fd Socket file descriptor. buf Pointer to buffer to receive data. len Length of data to...","GUID-5E0FFB91-528B-46EF-A4CF-A205923C64E4.html@@@1.3.3.12 WDRV_PIC32MZW_BSSFindSetScanMatchMode Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindSetScanMatchMode ( DRV_HANDLE handle, WDRV_PIC32MZW_SCAN_MATCH_MODE matchMode ) Configures the scan matching mode. This function configures the matching mode...","GUID-5E4DE35D-0E4D-4D34-A4EF-4464B592F400.html@@@1.2.8.11 WDRV_WINC_IPUseDHCPSet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPUseDHCPSet ( DRV_HANDLE handle, const WDRV_WINC_DHCP_ADDRESS_EVENT_HANDLER pfDHCPAddressEventCallback ) Enables DHCP. Enables the use of DHCP by the WINC. This removes any...","GUID-5E884F77-9CE8-437D-9C5F-7997B179001D.html@@@1.1.20.7 WDRV_WINC_NVM_OPERATION_STATE Struct@@@typedef struct { WDRV_WINC_NVM_OPERATION_TYPE operation; WDRV_WINC_NVM_STATUS_CALLBACK pfOperationStatusCB; uint8_t *pBuffer; uint32_t offset; uint32_t length; WDRV_WINC_NVM_GEOM_INFO geom; }...","GUID-5F105463-B28D-4D4E-BD09-365304360143.html@@@1.2.6.11 WDRV_WINC_HTTPProvCtxSetDefaults Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetDefaults ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx ) Initialize provisioning store. Ensure the provisioning store is initialized to appropriate...","GUID-5F2DF9A4-B7D5-4465-8B11-E3CC3ABC9BF7.html@@@1.1.8 Client - BSS Context APIs@@@The BSS context contains information relevant to a BSS such as SSID and channel. The structure WDRV_WINC_BSS_CONTEXT is provided to contain the context. To initialize a context, the function...","GUID-5F7B18AE-0513-4167-89B2-E1EC4C42DD27.html@@@1.1.19.8 WDRV_WINC_DHCP_ADDRESS_EVENT_HANDLER Typedef@@@typedef void (*WDRV_WINC_DHCP_ADDRESS_EVENT_HANDLER) ( DRV_HANDLE handle, uint32_t ipAddress ); This data type defines a function event handler to receive notification of allocation of IP address via...","GUID-5F8B176A-A05C-4C2A-83C9-8BA05E4761D9.html@@@1.1.18.14 WDRV_WINC_MQTT_SUBSCRIBE_CALLBACK Typedef@@@void (*WDRV_WINC_MQTT_SUBSCRIBE_CALLBACK) ( DRV_HANDLE handle, uintptr_t userCtx, const WDRV_WINC_MQTT_MSG_INFO *pMsgInfo, const char *pTopicName, const uint8_t *pTopicData, size_t topicDataLen...","GUID-5F99E99A-8346-4CBC-B4D5-381AC83D36F0.html@@@1.1.27.4 WDRV_WINC_BSSDisconnect@@@WDRV_WINC_STATUS WDRV_WINC_BSSDisconnect ( DRV_HANDLE handle ) Disconnects from an existing BSS. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been called to obtain a valid...","GUID-5FEA436C-D1ED-49A2-A76F-230B2D381A4C.html@@@1.2.16.2 WDRV_WINC_WPSEnrolleeDiscoveryStartPBC Function@@@WDRV_WINC_STATUS WDRV_WINC_WPSEnrolleeDiscoveryStartPBC ( DRV_HANDLE handle, const WDRV_WINC_WPS_DISC_CALLBACK pfWPSDiscoveryCallback ) Start WPS discovery (Push Button). Starts the WPS discovery as...","GUID-604CB1A0-ABED-4096-8474-7E7CDBFB5E6A.html@@@1.1.12.2 WDRV_WINC_DEBUG_LEVEL Macro@@@#define WDRV_WINC_DEBUG_TYPE_NONE 0 #define WDRV_WINC_DEBUG_TYPE_ERROR 1 #define WDRV_WINC_DEBUG_TYPE_INFORM 2 #define WDRV_WINC_DEBUG_TYPE_TRACE 3 #define WDRV_WINC_DEBUG_TYPE_VERBOSE 4 #define...","GUID-608870F8-B57F-4E7C-BC3B-5E137969E9C4.html@@@1.1.18.2.4 WDRV_WINC_MQTTConnPropMaxPacketSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTConnPropMaxPacketSet ( WDRV_WINC_MQTT_CONN_PROP *pConnProp, uint32_t maxPacketSize ) Sets the maximum packet size property in the connection property structure...","GUID-60C12586-1616-42CB-85FB-DFC96C5D08A7.html@@@1.3.1.2 WDRV_PIC32MZW_SYS_STATUS Enum@@@typedef enum { /* RF initialisation is in progress*/ WDRV_PIC32MZW_SYS_STATUS_RF_INIT_BUSY = SYS_STATUS_READY_EXTENDED, /* RF configuration is missing */ WDRV_PIC32MZW_SYS_STATUS_RF_CONF_MISSING, /*...","GUID-616CDBC1-3935-4DBC-80FC-A5B9CE78ED13.html@@@1.2.3 Association Management@@@This topic provides information on Wi-Fi association management. The application can query information about the current Wi-Fi association by calling one of these interface functions. The requested...","GUID-62609FEA-0339-4187-9435-88CE00E65018.html@@@1.2.5.3 WDRV_WINC_BSSFindGetInfo Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindGetInfo ( DRV_HANDLE handle, WDRV_WINC_BSS_INFO * const pBSSInfo ) Requests the information structure of the current BSS scan result. After each call to either...","GUID-63404677-1C09-41F6-8D95-12C76CAA1BDE.html@@@1 MPLAB\u00AE Harmony 3 Wireless_wifi@@@This is the help page for the MPLAB\u00AE Harmony 3 Wireless_wifi solutions. Quickly incorporate connectivity to your designs with wireless ICs, modules, software and development kits that make connecting...","GUID-63CD01EE-BFD0-4A95-96D3-F766BA6D1064.html@@@1.1.18.4.1 WDRV_WINC_MQTT_MSG_INFO Struct@@@typedef struct { bool duplicate; WDRV_WINC_MQTT_QOS_TYPE qos; bool retain; WDRV_WINC_MQTT_PUB_PROP *pProperties; } WDRV_WINC_MQTT_MSG_INFO; Message information which can be considered optional has...","GUID-63DB669E-47A5-4F30-A608-EEC3B1E9F690.html@@@1.2.14.3 WDRV_WINC_SSLActiveCipherSuitesSet Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLActiveCipherSuitesSet ( DRV_HANDLE handle, WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx, WDRV_WINC_SSL_CIPHERSUITELIST_CALLBACK pfSSLListCallback ) Set the active...","GUID-6445797E-A6F0-4ECB-9B2C-AB334AC3E9FD.html@@@1.1.7.1 WDRV_WINC_PSK_LEN Macro@@@#define WDRV_WINC_PSK_LEN 64 U Length of PSK (ASCII encoded binary). None...","GUID-66583817-8C3B-4CBE-9F01-E862ACDFAD70.html@@@1.2.8.5 WDRV_WINC_IPAddressSet Function@@@WDRV_WINC_STATUS WDRV_WINC_IPAddressSet ( DRV_HANDLE handle, uint32_t ipAddress, uint32_t netMask ) Configures an IPv4 address. Disables DHCP on the WINC and assigns a static IPv4 address. The address...","GUID-668664E2-A646-4F05-9143-BAE55D2F1A47.html@@@1.2.14.10 WDRV_WINC_SSLRetrieveHash Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLRetrieveHash ( DRV_HANDLE handle, uint8_t *pHash, uint16_t hashSz ) Retrieve the certificate hash Retrieve the certificate hash from the WINC WDRV_WINC_Initialize should...","GUID-6752FE72-905F-4D3D-B9FD-2C463A129AC0.html@@@1.1.9.7 WDRV_WINC_BSSFindNext@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindNext ( DRV_HANDLE handle, WDRV_WINC_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) The information structure of the next BSS is requested from the WINC...","GUID-67EB0ECB-DB18-4725-9055-1567ADE75FD7.html@@@1.3.4.7 WDRV_PIC32MZW_BSSCtxSetDefaults Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetDefaults ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx ) Configures a BSS context into a default legal state. Ensures that each element of the structure is...","GUID-68449BC3-7664-4425-8DAB-120B78CC3C35.html@@@1.3.9.7 WDRV_PIC32MZW_PowerSaveSleepInactLimitSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveSleepInactLimitSet ( DRV_HANDLE handle, uint16_t u16SleepInactLimit ); Set the sleep inactivity(assoc-timeout) threshold/limit for power save operation (in...","GUID-68F4EB58-C0D8-4ED8-A68B-B9214D1E4E81.html@@@1.1.18.2.6 WDRV_WINC_MQTTConnPropTopicAliasMaxSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTConnPropTopicAliasMaxSet ( WDRV_WINC_MQTT_CONN_PROP *pConnProp, uint16_t topicAliasMax ) Sets the topic alias maximum property in the connection property structure...","GUID-692317EF-E19C-4FF1-A9C7-EF5346CB492C.html@@@1.3.9 802.11 Powersave API@@@...","GUID-69A54D14-EBFF-43BA-9C32-414181077D2D.html@@@1.3.5.9 WDRV_PIC32MZW_AuthCtxSetPersonal Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetPersonal ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, uint8_t *pPassword, uint8_t size, WDRV_PIC32MZW_AUTH_TYPE authType ) Configure an authentication...","GUID-69E04F49-B2F4-4793-9174-5B0D2D0A7C0F.html@@@1.2.3.1 WDRV_WINC_ASSOC_CALLBACK Typedef@@@typedef void (*WDRV_WINC_ASSOC_CALLBACK) Pointer to a callback to provide information about the current association. This data type defines a function callback to provide details of the SSID, network...","GUID-69F527D1-C80A-441E-B6F7-28AB8D96CFBD.html@@@1.1.18.9.2 WDRV_WINC_MQTT_PUB_HANDLE Typedef@@@typedef uintptr_t WDRV_WINC_MQTT_PUB_HANDLE; Publish handles are provided until packet IDs are known. Publish handles are only valid between a publish request and completion of the publish command at...","GUID-6A832945-9864-4F39-9223-3A8CF5EC39E8.html@@@1.1.24.6 accept@@@int accept ( int fd, struct sockaddr *addr, socklen_t *len) Accept a connection on a socket. Parameters Description fd Socket file descriptor. addr Pointer to a structure to filled in with the address...","GUID-6ABD444D-B3C8-4ABF-B3E0-6212EA7DFF99.html@@@1.1.10.1 WDRV_WINC_L2DATA_MONITOR_CALLBACK Typedef@@@typedef void (*WDRV_WINC_L2DATA_MONITOR_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, const uint8_t * const pL2DataPtr, size_t l2DataLen ); This defines a function pointer for a callback...","GUID-6AD186BA-5042-45A8-B0BC-1C26DA1904BA.html@@@1.3.1.6 WDRV_PIC32MZW_Status Function@@@SYS_STATUS WDRV_PIC32MZW_Status (SYS_MODULE_OBJ object) Provides the current status of the PIC32MZW driver module. This function provides the current status of the PIC32MZW driver module...","GUID-6AD7C815-3F73-49A8-8CC2-49BC35BA0E5D.html@@@1.1.19.12 WDRV_WINC_NetIfIPRouteSet@@@WDRV_WINC_STATUS WDRV_WINC_NetIfIPRouteSet ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, WDRV_WINC_IP_ADDRESS_TYPE type, WDRV_WINC_IP_MULTI_ADDRESS *pNetwork, int scope, WDRV_WINC_IP_MULTI_ADDRESS...","GUID-6B7F8CA6-8E7B-46C0-8EAD-4FA69F0AE7FE.html@@@1.1.21.3 WDRV_WINC_OTA_STATUS_CALLBACK Typedef@@@typedef void (*WDRV_WINC_OTA_STATUS_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_OTA_OPERATION_TYPE operation, uint8_t opId, WDRV_WINC_OTA_UPDATE_STATUS status ); This defines an OTA status function...","GUID-6B82A241-FF17-4820-B615-5688BFD6AC50.html@@@1.3.8.3 WDRV_PIC32MZW_APStop Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APStop (DRV_HANDLE handle) Stops an instance of Soft-AP. Stops an instance of Soft-AP. WDRV_PIC32MZW_Initialize should have been called. WDRV_PIC32MZW_Open should...","GUID-6BC88511-923D-4CFA-B5E5-6049DAC630CF.html@@@1.2.12.8 WDRV_WINC_CustIEStoreCtxSetStorage Function@@@WDRV_WINC_CUST_IE_STORE_CONTEXT* WDRV_WINC_CustIEStoreCtxSetStorage ( uint8_t * const pStorage, uint16_t lenStorage ) Initialize the custom IE store. The caller provides storage for the custom IE...","GUID-6C1D56BE-C531-4584-903E-B20EA545069E.html@@@1.3.3.1 WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK Typedef@@@typedef bool (*WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK) Callback to signal discovery of a BSS. When the information about a discovered BSS is requested the driver will use this callback to provide the...","GUID-6D3F756B-BA1C-4193-BF17-0EB0F3E95A45.html@@@1.1.18.1 Connection Information@@@Connection Information is provided in a WDRV_WINC_MQTT_CONN_INFO structure via the WDRV_WINC_MQTT_CONN_STATUS_CALLBACK registered when calling WDRV_WINC_MQTTConnect . If Connection Acknowledgement...","GUID-6D516901-F5CE-4952-A80B-370AD5AAF6B3.html@@@1.1.8.5 WDRV_WINC_BSSCtxSetDefaults@@@WDRV_WINC_STATUS WDRV_WINC_BSSCtxSetDefaults ( WDRV_WINC_BSS_CONTEXT * const pBSSCtx ) Ensures that each element of the structure is configured into a legal state. None. Parameters Description pBSSCtx...","GUID-6D581912-6FBB-4AF2-A074-CF3416892B5B.html@@@1.1.9.12 WDRV_WINC_BSSFindSetScanChannels24@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetScanChannels24 ( DRV_HANDLE handle, WDRV_WINC_CHANNEL_MASK channelMask24 ) In some scenarios an application may want to scan on a subset of channels. This function...","GUID-6D9FD24D-697C-4C76-BF82-0AFDB3985742.html@@@1.1.14.4 WDRV_WINC_DNSResolveDomain@@@WDRV_WINC_STATUS WDRV_WINC_DNSResolveDomain ( DRV_HANDLE handle, uint8_t recordType, const char *pDomainName, uint16_t timeoutMs, const WDRV_WINC_DNS_RESOLVE_CALLBACK pfDNSResolveResponseCB ) Resolves...","GUID-6E8ABE0F-15BC-484D-8780-00DADD7D2BFC.html@@@1.1.13.7 WDRV_WINC_DHCPSEnableSet@@@WDRV_WINC_STATUS WDRV_WINC_DHCPSEnableSet ( DRV_HANDLE handle, WDRV_WINC_DHCPS_IDX poolIdx, bool enabled, WDRV_WINC_DHCPS_EVENT_HANDLER pfDHCPSEventCB ) Enables or disables the DHCP server...","GUID-6EB41C46-B8EC-40D7-9C3A-F5021EF7EB5D.html@@@1.1.22.3 WDRV_WINC_PROV_ATTACH_CALLBACK Typedef@@@typedef void (*WDRV_WINC_PROV_ATTACH_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_PROV_CLIENT_ID clientId, WDRV_WINC_IP_MULTI_TYPE_ADDRESS *pClientAddr ); This defines a function pointer for a callback to...","GUID-706FDD7D-4A73-4F4B-A854-7860572C476D.html@@@1.1.18.5.2 WDRV_WINC_MQTT_PUB_MAX_CONTENT_TYPE_LEN Macro@@@#define WDRV_WINC_MQTT_PUB_MAX_CONTENT_TYPE_LEN 32 The maximum length of a content type string within the publish message. None...","GUID-707E7AD4-D7A6-4A6B-BCCF-E61D0C13D6CD.html@@@1.1.13.3 WDRV_WINC_DHCPS_EVENT_HANDLER Typedef@@@typedef void (*WDRV_WINC_DHCPS_EVENT_HANDLER) ( DRV_HANDLE handle, WDRV_WINC_DHCPS_EVENT_TYPE eventType, void *pEventInfo ); Callback to be used to convey DHCP server events. Parameters Description...","GUID-70CC6D2C-E661-472B-A9FC-C8B2BAD88832.html@@@1.2.6.8 WDRV_WINC_HTTP_PROV_CONTEXT Struct@@@typedef struct { /* Flag indicating if any URL is mapped to the provisioning server. */ bool wildcardURL; /* Domain name of provisioning server. */ char domainName[ 64 + 1 ]; /* Pointer to callback to...","GUID-70D00228-09FE-4AFF-9FFA-B9589740E367.html@@@1.1.18.5.6 WDRV_WINC_MQTTPubPropMessageExpirySet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTPubPropMessageExpirySet ( WDRV_WINC_MQTT_PUB_PROP *pPubProp, uint32_t expiryTime ) Sets the message expiry property in the publish property structure...","GUID-7196E72D-E31A-4289-8429-959CF3CA3057.html@@@1.1.30.16 WDRV_WINC_WifiCoexConfSet@@@WDRV_WINC_STATUS WDRV_WINC_WifiCoexConfSet ( DRV_HANDLE handle, WDRV_WINC_COEX_CFG *pCoexCfg ) Sets the interface mode, priority and antenna mode of the coexistence arbiter. WDRV_WINC_Initialize must...","GUID-72234C45-8DB7-4B1A-A5D9-B45EE408CFEF.html@@@1.2.11 Setup & Initialization@@@This topic provides information on setup/initialization. The system performs the initialization of the device driver with settings that affect only the instance of the device that is being...","GUID-728BC254-AEE1-4CDE-8238-8B0386D55874.html@@@1.1.20 Client - NVM APIs@@@This interface allows access to the NVM region of the WINCS02 device. The geometry of the NVM region can be obtained by calling the function WDRV_WINC_NVMGeometryGet which returns a pointer to a...","GUID-72BC11D1-536B-48D1-BB3A-CB16AAB47E8F.html@@@1.1.9.3 WDRV_WINC_SSID Struct@@@typedef struct { uint8_t name[WDRV_WINC_MAX_SSID_LEN]; uint8_t length; } WDRV_WINC_SSID; The SSID consists of a buffer and a length field. Members Description name SSID name, up to...","GUID-72D36B91-3F11-4FFA-976D-B39969FD30B5.html@@@1.1.19.13 WDRV_WINC_NetIfMACAddrGet@@@WDRV_WINC_STATUS WDRV_WINC_NetIfMACAddrGet ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, WDRV_WINC_NETIF_INFO_HANDLER pfNetIfInfoCB ) Requests the MAC address of a network interface, to be return...","GUID-72F2D602-011B-491A-9AA3-2C43FC943544.html@@@1.1.29.1.13 WDRV_WINC_TLSCtxSetSignCallback@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxSetSignCallback ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, WDRV_WINC_EXTCRYPTO_SIGN_CB pfSignCb, uintptr_t signCbCtx ) Sets the signing callback for external...","GUID-73035754-3012-47E9-A25A-8F9C8E9FE68E.html@@@1.3.11.3 WDRV_PIC32MZW_VENDORIE_INFO Struct@@@typedef struct { uint8_t sa[ 6 ]; int8_t rssi; WDRV_PIC32MZW_IE_FRAME_TYPE_MASK frameType; } WDRV_PIC32MZW_VENDORIE_INFO; Defines received vendor specific IE related information. Provides more...","GUID-7542487D-F4F2-4BE1-999F-CC2ED370EF7E.html@@@1.1.2.2 WDRV_WINC_SPIInitialize@@@void WDRV_WINC_SPIInitialize ( const WDRV_WINC_SPI_CFG * const pInitData ) This function initializes the SPI object for the WiFi driver. None. Parameters Description pInitData Pointer to...","GUID-7551DC67-D79D-4F0C-B56F-7B17E12400E0.html@@@The Microchip Website@@@Microchip provides online support via our website at www.microchip.com/ . This website is used to make files and information easily available to customers. Some of the content available includes...","GUID-75D92A10-7C52-42B8-A009-7834B215D2DB.html@@@1.1.23.3 WDRV_WINC_SNTPServerAddressSet@@@WDRV_WINC_STATUS WDRV_WINC_SNTPServerAddressSet ( DRV_HANDLE handle, const char *pAddr ) Configures the address/name to be used as the NTP server. WDRV_WINC_Initialize must have been called...","GUID-75D93743-4767-40F6-96F2-7455F897EB5A.html@@@1.1.5.2 WDRV_WINC_STATUS Enum@@@typedef enum { WDRV_WINC_STATUS_OK = 0 , WDRV_WINC_STATUS_NOT_OPEN, WDRV_WINC_STATUS_INVALID_ARG, WDRV_WINC_STATUS_SCAN_IN_PROGRESS, WDRV_WINC_STATUS_NO_BSS_INFO, WDRV_WINC_STATUS_BSS_FIND_END...","GUID-76364FA8-610F-4BB3-9C29-1E7474982DA1.html@@@1.2.8.1 WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER Typedef@@@typedef void (*WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER) Pointer to an ICMP echo response event handler function. This data type defines a function event handler which is called in response to an ICMP...","GUID-76754FE0-3B15-48E4-B846-A34FCAD421E4.html@@@1.1.7.8 WDRV_WINC_AuthCtxIsValid@@@bool WDRV_WINC_AuthCtxIsValid ( const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) Tests the elements of the authentication context to judge if their values are legal. None. Parameters Description...","GUID-772C1456-CB13-426D-9844-AF05BD49919D.html@@@1.1.16.1 WDRV_WINC_FILE_INVALID_HANDLE Macro@@@#define WDRV_WINC_FILE_INVALID_HANDLE 0 Value of an invalid file handle. None...","GUID-7754F32E-D105-41A5-A616-96D9F21EF2E6.html@@@1.3.5 Client Interface - Authentication Context APIs@@@The authentication context contains information relevant to the authentication mechanisms used in Wi-Fi. Currently supported are Open, WPA/WPA2/WPA3-Personal and WPA/WPA2/WPA3-Enterprise(EAP-TLS)...","GUID-7792CA7C-02EE-4AD7-B4BC-90E95427ADEC.html@@@1.1.28.2 WDRV_WINC_SystemTimeSetCurrent@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSetCurrent ( DRV_HANDLE handle, uint32_t curTime ) Configures the system time to the UTC value specified. WDRV_WINC_Initialize must have been called...","GUID-77B834C3-DFB7-4F85-9C63-95D00BEC02CB.html@@@1.1.22.4 WDRV_WINC_ProvServiceStart@@@WDRV_WINC_STATUS WDRV_WINC_ProvServiceStart ( DRV_HANDLE handle, WDRV_WINC_PROV_PROTOCOL_TYPE type, uint16_t port, WDRV_WINC_IP_ADDRESS_TYPE ipType, WDRV_WINC_PROV_ATTACH_CALLBACK pfProvAttachCB )...","GUID-780D4DA2-F1AD-4CAD-889F-876FCB3270A8.html@@@Publish Properties@@@Publish properties can be included when calling WDRV_WINC_MQTTPublish to publish to a topic or when calling WDRV_WINC_MQTTLWTSet to set the will message. Publish properties can also be received in a...","GUID-78401BE2-EFC2-4D87-87D7-464D2FC42157.html@@@1.1.20.12 WDRV_WINC_NVMRead@@@WDRV_WINC_STATUS WDRV_WINC_NVMRead ( DRV_HANDLE handle, void *pBuffer, uint32_t offset, uint32_t length, WDRV_WINC_NVM_STATUS_CALLBACK pfUpdateStatusCB ) Reads a number of bytes from the NVM...","GUID-785F61F4-8CE0-4D07-AB5B-F2DD42FD530E.html@@@1.1.18.8 Connection@@@To connect to a MQTT broker the application should: Configure the broker with WDRV_WINC_MQTTBrokerSet optionally applying a TLS context if secure connections are required. Configure the client...","GUID-78A366F1-25A1-48F4-8E56-7A4FE40964F7.html@@@1.3.9.5 WDRV_PIC32MZW_PowerSaveBroadcastTrackingSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveBroadcastTrackingSet ( DRV_HANDLE handle, bool dtimTracking ); Configures the WiFi broadcast traffic wake up behaviour. Configures if the WiFi should wake...","GUID-78C1D07E-0BA2-472F-8F67-C19B29C2FA50.html@@@1.2.8.9 WDRV_WINC_IPLinkActive Function@@@bool WDRV_WINC_IPLinkActive (DRV_HANDLE handle) Indicates state of IP link. Returns a flag indicating if the IP link is active or not. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open...","GUID-78CABE3B-24DD-4013-AAFE-D7D59BD3EA25.html@@@1.1.19.2 WDRV_WINC_NETIF_EVENT_TYPE Enum@@@typedef enum { WDRV_WINC_NETIF_EVENT_INTF_UP, WDRV_WINC_NETIF_EVENT_INTF_DOWN, WDRV_WINC_NETIF_EVENT_ADDR_UPDATE, } WDRV_WINC_NETIF_EVENT_TYPE; Possible values for network interface events. Members...","GUID-78DB111E-E79A-4370-AE52-C9CE06147971.html@@@1.2.8 Network Sockets and IP@@@This topic provides information on how to use the built in TCP/IP stack of the WINC devices. When operating in Socket mode the WINC devices run a small TCP/IP stack to offload the work from the host...","GUID-78F201F6-0F68-49CE-8537-FCD1D366C882.html@@@1.1.26.3 WDRV_WINC_APStop@@@WDRV_WINC_STATUS WDRV_WINC_APStop ( DRV_HANDLE handle ) Stops an instance of Soft-AP. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been called to obtain a valid handle...","GUID-7934A244-CB88-4108-AAFF-1F0D5D94AC15.html@@@1.1.2.5 WDRV_WINC_SPISendReceive@@@bool WDRV_WINC_SPISendReceive ( void * pTransmitData, void * pReceiveData, size_t size ); This function sends and receives data from the module through the SPI bus. WDRV_WINC_SPIInitialize must have...","GUID-794F2619-17CD-4165-A8B2-A7163B082776.html@@@1.1.20.2 WDRV_WINC_NVM_STATUS_TYPE Enum@@@typedef enum { WDRV_WINC_NVM_STATUS_SUCCESS, WDRV_WINC_NVM_STATUS_ERROR, } WDRV_WINC_NVM_STATUS_TYPE; Possible NVM status codes. Members Description WDRV_WINC_NVM_STATUS_SUCCESS Operation was a...","GUID-7964B25F-6C7D-4858-8C3D-881389D5ACDC.html@@@1.1.7.2 WDRV_WINC_MIN_PSK_PASSWORD_LEN Macro@@@#define WDRV_WINC_MIN_PSK_PASSWORD_LEN 8 U Minimum length of a WPA Personal Password. None...","GUID-79FCA9DE-EAFD-4F96-A1B6-8E2C5587D8DD.html@@@1.1.30.1 WDRV_WINC_REGDOMAIN_MAX_NAME_LEN Macro@@@#define WDRV_WINC_REGDOMAIN_MAX_NAME_LEN 6 U Maximum length of regulatory domain name. None...","GUID-7A3FD52F-3099-49A8-A6AC-7461BC124ED8.html@@@1.2.6.9 WDRV_WINC_HTTPPROV_INFO_CALLBACK Typedef@@@typedef void (*WDRV_WINC_HTTPPROV_INFO_CALLBACK) HTTP provisioning callback for connect information. This callback is used to signal the desired SSID and authentication contexts selected via...","GUID-7A906145-9998-470C-B54E-CF6802EB8156.html@@@1.1.20.1 WDRV_WINC_NVM_OPERATION_TYPE Enum@@@typedef enum { WDRV_WINC_NVM_OPERATION_NONE, WDRV_WINC_NVM_OPERATION_ERASE, WDRV_WINC_NVM_OPERATION_WRITE, WDRV_WINC_NVM_OPERATION_READ, WDRV_WINC_NVM_OPERATION_CHECK } WDRV_WINC_NVM_OPERATION_TYPE...","GUID-7B88E8B8-F113-4831-99B9-C43A2FE514A1.html@@@1.1.1.10 WDRV_WINC_StatusExt@@@WDRV_WINC_SYS_STATUS WDRV_WINC_StatusExt ( SYS_MODULE_OBJ object ) This function provides the extended system status of the WINC driver module. WDRV_WINC_Initialize must have been called. Parameters...","GUID-7B9B458B-5E72-4146-A716-4DC27AF15C22.html@@@1.1.1.11 WDRV_WINC_Tasks@@@void WDRV_WINC_Tasks ( SYS_MODULE_OBJ object ) This function is used to maintain the driver&apos;s internal state machine. WDRV_WINC_Initialize must have been called. Parameters Description object Driver...","GUID-7C1130A7-09FD-4A0C-8A78-7EF57B201FCF.html@@@1.1.30.14 WDRV_WINC_WifiRegDomainGet@@@WDRV_WINC_STATUS WDRV_WINC_WifiRegDomainGet ( DRV_HANDLE handle, WDRV_WINC_REGDOMAIN_SELECT regDomainSel, WDRV_WINC_REGDOMAIN_CALLBACK pfRegDomainEventCB ) Read the active or all available regulatory...","GUID-7C6B2FD4-BCC0-4D98-B1DE-D97C59411668.html@@@1.1.21.4 WDRV_WINC_OTA_OPERATION_STATE Struct@@@typedef struct { WDRV_WINC_OTA_OPERATION_TYPE operation; uint8_t opId; WDRV_WINC_OTA_STATUS_CALLBACK pfOperationStatusCB; } WDRV_WINC_OTA_OPERATION_STATE; Structure containing details relating to an...","GUID-7C8386D9-245B-4B9C-9CF7-2A77298E73E2.html@@@1.1.18.7.4 WDRV_WINC_MQTTUserPropSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTUserPropSet ( DRV_HANDLE handle, const uint8_t *pKey, size_t lenKey, const uint8_t *pValue, size_t lenValue ) Used to set or clear the value associated with a user...","GUID-7CFA4233-3BEA-4D18-AB0D-36A346709A67.html@@@1.3.7.2 WDRV_PIC32MZW_BSSDisconnect Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSDisconnect (DRV_HANDLE handle) Disconnects from a BSS. Disconnects from an existing BSS. WDRV_PIC32MZW_Initialize should have been called. WDRV_PIC32MZW_Open...","GUID-7CFCDC19-0A74-4164-A437-BEFE7061053A.html@@@1.2.8.4 WDRV_WINC_IPAddressGet Function@@@uint32_t WDRV_WINC_IPAddressGet (DRV_HANDLE handle) Returns the current IPv4 address. Returns the current IPv4 address if configured. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open...","GUID-7DB7F100-DD22-49CC-9E4A-EE15965B42B5.html@@@1.1.18.3.1 WDRV_WINC_MQTT_CONN_MAX_ASSIGNED_CLIENT_ID Macro@@@#define WDRV_WINC_MQTT_CONN_MAX_ASSIGNED_CLIENT_ID 48 Defines the maximum length of the assigned client ID. None...","GUID-7E704BF5-A0F5-4F45-AA11-0E6A0BE19A97.html@@@1.1.18.15 WDRV_WINC_MQTTDisconnect@@@WDRV_WINC_STATUS WDRV_WINC_MQTTDisconnect ( DRV_HANDLE handle, WDRV_WINC_MQTT_DISCONN_REASON_CODE_TYPE reasonCode ) Starts the process of disconnecting from an MQTT broker. WDRV_WINC_Initialize must...","GUID-7E8B70A2-A1F9-4F83-89F8-5450933B7D77.html@@@1.2.6.10 WDRV_WINC_HTTPProvCtxSetConnectCallback Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetConnectCallback ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx, const WDRV_WINC_HTTPPROV_INFO_CALLBACK pfProvConnectInfoCB ) Defines the connection...","GUID-7E92DBD1-3ACE-40D5-A3D0-91FAEBA57E7E.html@@@1.3.8.1 WDRV_PIC32MZW_SEC_MASK Enum@@@typedef enum { /* AP supports WEP-40 or WEP-104, as standalone or as GTK with 11i TSN. */ WDRV_PIC32MZW_SEC_BIT_WEP = 0x01 , /* AP supports TKIP as GTK (if not WEP) and PTK. */...","GUID-7E9D000A-97B7-40E5-9C0A-16899428882D.html@@@1.1.9.15 WDRV_WINC_BSSFindInProgress@@@bool WDRV_WINC_BSSFindInProgress ( DRV_HANDLE handle ) Returns a flag indicating if a BSS scan operation is currently running. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must have been...","GUID-7EC3E8BA-E484-4312-A2CE-2319F1F3D2AD.html@@@1.1.2.1 WDRV_WINC_SPI_CFG Struct@@@typedef struct { /* SPI driver specific configuration. */ } WDRV_WINC_SPI_CFG; Structure containing SPI configuration parameters. Members Description n/a SPI driver specific. None...","GUID-7F51E890-0A5D-4FBA-9852-7B21B263A058.html@@@1.1.29 Client - TLS APIs@@@This interface manages the TLS contexts and TLS ciphersuite lists...","GUID-7F977039-8978-42C8-B827-41D3F34D3DF5.html@@@1.2.10.2 WDRV_WINC_PowerSaveManualSleep Function@@@WDRV_WINC_STATUS WDRV_WINC_PowerSaveManualSleep ( DRV_HANDLE handle, uint32_t sleepTime ) Manual sleep power save operation. If the current power save mode is WDRV_WINC_PS_MODE_MANUAL the WINC can be...","GUID-7FA7287D-419D-46FD-8260-C519F4244966.html@@@1.2.16.4 WDRV_WINC_WPSEnrolleeDiscoveryStop Function@@@WDRV_WINC_STATUS WDRV_WINC_WPSEnrolleeDiscoveryStop (DRV_HANDLE handle) Stop WPS discovery. Stops the WPS discovery if it was started. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open...","GUID-8051836F-F85D-4391-BA03-78D9F06F1A15.html@@@1.1.18.5.3 WDRV_WINC_MQTT_PUB_PROP Struct@@@typedef struct { bool isValid; uint8_t payloadFormatIndicator; uint16_t topicAlias; uint32_t messageExpiryInterval; uint32_t subscriptionIdentifer; uint32_t willDelayInterval; uint8_t...","GUID-806F1CB3-73D6-42A6-944B-06FDBB445FE6.html@@@1.1.19.7 WDRV_WINC_NETIF_INFO_HANDLER@@@typedef void (*WDRV_WINC_NETIF_INFO_HANDLER) ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, WDRV_WINC_NETIF_INFO_TYPE infoType, void *pInfo, WDRV_WINC_STATUS status ); Callback to be used to convey...","GUID-80DABF55-5E30-404C-9FA5-17D860B6074B.html@@@1.1.7.3 WDRV_WINC_MAX_PSK_PASSWORD_LEN Macro@@@#define WDRV_WINC_MAX_PSK_PASSWORD_LEN 63 U Maximum length of a WPA Personal Password. None...","GUID-80F168C4-43F3-45F6-BBE1-C858DEC85DAC.html@@@1.1.18.9.1 WDRV_WINC_MQTT_PUB_STATUS_TYPE Enum@@@typedef enum { WDRV_WINC_MQTT_PUB_STATUS_SENT, WDRV_WINC_MQTT_PUB_STATUS_RECV, WDRV_WINC_MQTT_PUB_STATUS_ERROR } WDRV_WINC_MQTT_PUB_STATUS_TYPE; Possible values for MQTT publish status. Members...","GUID-810AFE21-0E72-4F4E-AFE4-629BDF2C2404.html@@@1.1.22 Client - Provisioning APIs@@@This interface provides functions to configure and control the provisioning interface...","GUID-81205D61-75C9-46FF-BF98-00D69610D376.html@@@1.1.24.12 send@@@ssize_t send ( int fd, const void *buf, size_t len, int flags) Send a message on a socket. Parameters Description fd Socket file descriptor. buf Pointer to buffer containing data to send. len Length...","GUID-81C3F83D-6E88-45F1-B6E2-C741D612AA1C.html@@@1.2.12.3 WDRV_WINC_APStop Function@@@WDRV_WINC_STATUS WDRV_WINC_APStop (DRV_HANDLE handle) Stops an instance of Soft-AP. Stops an instance of Soft-AP. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been called...","GUID-81D18119-F240-47CC-8CDA-1B9FDD83B822.html@@@1.3.3.5 WDRV_PIC32MZW_BSSFindFirst Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindFirst ( DRV_HANDLE handle, WDRV_PIC32MZW_CHANNEL_ID channel, bool active, const WDRV_PIC32MZW_SSID_LIST * const pSSIDList, const...","GUID-82DC1410-B564-4ED8-ACD9-D2156928F7EE.html@@@1.1.11 Client - Configuration APIs@@@This interface allows WINCS02 device configurations to be archived to non-volatile storage and retrieved later. A typical use case for this would be storing Wi-Fi configuration to allow the device...","GUID-833E3062-0EF5-4C7B-90AA-244A02494757.html@@@1.2.6.13 WDRV_WINC_HTTPProvCtxSetURLWildcard Function@@@WDRV_WINC_STATUS WDRV_WINC_HTTPProvCtxSetURLWildcard ( WDRV_WINC_HTTP_PROV_CONTEXT * const pHTTPProvCtx, bool wildcardURL ) Define the use of a wildcard URL check. Indicates if the Soft-AP should map...","GUID-83D738AE-6AFE-4699-BCF2-17955A8E12AE.html@@@1.1.18.16 WDRV_WINC_MQTTSubscribe@@@WDRV_WINC_STATUS WDRV_WINC_MQTTSubscribe ( DRV_HANDLE handle, WDRV_WINC_MQTT_QOS_TYPE qos, const char *pTopicName, const WDRV_WINC_MQTT_SUB_PROP * const pSubProp, WDRV_WINC_MQTT_SUBSCRIBE_CALLBACK...","GUID-84A559F7-B9AF-4927-9073-A2BDA2AA6804.html@@@1.3.9.2 WDRV_PIC32MZW_POWERSAVE_MODE Enum@@@typedef enum { /* Run mode : No power-save. Both TX and RX are active */ WDRV_PIC32MZW_POWERSAVE_RUN_MODE = 0 , /* WSM mode : Wireless sleep mode. TX and RX are stopped, clocks will be running. STA...","GUID-8732F5D7-740A-4281-B519-0C7FBB34D3B8.html@@@1.2.14.2 WDRV_WINC_SSL_REQ_ECC_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SSL_REQ_ECC_CALLBACK) Callback to request ECC information. Called when authentication with ECC Cipher suites. Param Description handle Client handle obtained by a call to...","GUID-876AC989-0CCF-4106-919E-538189D3C50F.html@@@1.1.20.5 WDRV_WINC_NVM_CHK_STATUS_INFO Struct@@@typedef struct { uint32_t offset; uint32_t length; WDRV_WINC_NVM_CHECK_MODE_TYPE mode; union { uint16_t crc16; struct { uint8_t l; const uint8_t *p; } hash; }; } WDRV_WINC_NVM_CHK_STATUS_INFO; Status...","GUID-8798B53B-10BA-43B8-A6F3-6ECFD021E54F.html@@@1.1.3.2 WDRV_WINC_INTDeinitialize@@@void WDRV_WINC_INTDeinitialize ( int intSrc ) This function de-initializes interrupts for the WiFi driver. WDRV_WINC_Initialize must have been called before calling this function. Parameters...","GUID-87C04FD6-C195-4753-885F-65FFD0679CD1.html@@@1.1.9.1 WDRV_WINC_CHANNEL24_MASK Enum@@@typedef enum { WDRV_WINC_CM_ 2 _ 4 G_NONE = 0x0000 , WDRV_WINC_CM_ 2 _ 4 G_CH1 = 0x0001 , WDRV_WINC_CM_ 2 _ 4 G_CH2 = 0x0002 , WDRV_WINC_CM_ 2 _ 4 G_CH3 = 0x0004 , WDRV_WINC_CM_ 2 _ 4 G_CH4 = 0x0008...","GUID-881CB628-AB6B-499D-A7D8-BF8B08113F8B.html@@@1.1.21.2 WDRV_WINC_OTA_OPERATION_TYPE Enum@@@typedef enum { WDRV_WINC_OTA_OPERATION_NONE, WDRV_WINC_OTA_OPERATION_DOWNLOAD_VERIFY, WDRV_WINC_OTA_OPERATION_VERIFY, WDRV_WINC_OTA_OPERATION_ACTIVATE, WDRV_WINC_OTA_OPERATION_INVALIDATE, }...","GUID-884CAB2B-B126-425B-A5B3-17551172DE67.html@@@1.1.28.3 WDRV_WINC_SystemTimeGetCurrent@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeGetCurrent ( DRV_HANDLE handle, const WDRV_WINC_SYSTIME_CURRENT_CALLBACK pfGetCurrentCallback ) Requests the current system time which is returned via the callback...","GUID-888B1D77-10DC-4BCA-BEA0-88EAA6A78507.html@@@1.2.14 SSL/TLS Control@@@This topic provides information on how to configure the SSL/TLS sessions. Internally the WINC devices are configured to establish TLS sessions using a typical set of cipher suites. If the application...","GUID-888D69A1-B8F0-458A-83C8-530A6877520E.html@@@1.1.24.8 connect@@@int connect ( int fd, const struct sockaddr *addr, socklen_t len) Initiate a connection on a socket. Parameters Description fd Socket file descriptor. addr Pointer to socket address. len Length of...","GUID-895E65D1-1C90-408D-B617-2D86C45A3D2A.html@@@1.2.13.1 WDRV_WINC_BSSCON_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_WINC_BSSCON_NOTIFY_CALLBACK) Callback to notify the user of a change in connection state. When the connection state changes this callback enable the driver to signal the user about...","GUID-89830EB7-CAEB-433A-88A5-FA6FF6543ADB.html@@@1.1.26 Client - Soft-AP APIs@@@Provides an interface to create and manage a Soft-AP. The function WDRV_WINC_APStart is provided to perform the Soft-AP operation. This function accepts both a BSS context and an Authentication...","GUID-89919B58-A91B-40E3-A595-984AE71AE7D7.html@@@1.1.14.5 WDRV_WINC_DNSAutoSet@@@WDRV_WINC_STATUS WDRV_WINC_DNSAutoSet ( DRV_HANDLE handle, bool enabled ) Configures the system to use the automatic DNS assignment, for example via DHCP. WDRV_WINC_Initialize must have been called...","GUID-8ACC9797-BCD2-49F6-BD38-493A2A403C7C.html@@@1.1.24.2 WINC_SOCKET_EVENT Enum@@@typedef enum { WINC_SOCKET_EVENT_OPEN, WINC_SOCKET_EVENT_LISTEN, WINC_SOCKET_EVENT_CONNECT_REQ, WINC_SOCKET_EVENT_CONNECT, WINC_SOCKET_EVENT_SEND, WINC_SOCKET_EVENT_RECV, WINC_SOCKET_EVENT_CLOSE...","GUID-8AF0A92F-AB70-4C6C-9303-EACE5CE4DAD9.html@@@1.1.18.9 Publishing@@@To use topic aliases the alias must first be associated with the topic name in the broker. To associate a topic name with an alias the MQTT application should call WDRV_WINC_MQTTPublish with a valid...","GUID-8B2369A2-2979-440A-9539-92611F4C323D.html@@@1.1.21 Client - OTA APIs@@@This interface offers OTA (over-the-air) update support. Direct OTA support is provided by the function WDRV_WINC_OTAUpdateFromURL which uses HTTP(S) to download an OTA image, write it to NVM memory...","GUID-8BE8380E-360A-4D3B-AC0B-5B87D4B6A60B.html@@@1.2.5.5 WDRV_WINC_BSSFindInProgress Function@@@bool WDRV_WINC_BSSFindInProgress (DRV_HANDLE handle) Indicates if a BSS scan is in progress. Returns a flag indicating if a BSS scan operation is currently running. WDRV_WINC_Initialize must have been...","GUID-8BF10274-CD22-4774-8C40-CCFED5766714.html@@@1.3.4.5 WDRV_PIC32MZW_BSSCtxSetBSSID Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSCtxSetBSSID ( WDRV_PIC32MZW_BSS_CONTEXT * const pBSSCtx, uint8_t * const pBSSID ) Configures the BSSID of the BSS context. The BSSID string is copied into the BSS...","GUID-8C0A19D1-85C2-4427-98CC-C4D9F13FFBAF.html@@@1.1.25.2 WDRV_WINC_ICMPEchoRequestAddr@@@WDRV_WINC_STATUS WDRV_WINC_ICMPEchoRequestAddr ( DRV_HANDLE handle, const WDRV_WINC_IP_MULTI_ADDRESS * const pIPAddr, WDRV_WINC_IP_ADDRESS_TYPE ipAddrType, const WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER...","GUID-8CC2A673-AF23-4055-8F1E-C43A3195F69A.html@@@1.3.2.1 WDRV_PIC32MZW_CTRLDCPT Struct@@@typedef struct _WDRV_PIC32MZW_CTRLDCPT { /* Primary driver handle. */ DRV_HANDLE handle; /* Flag indicating if this instance is operating as s station or soft-AP. */ bool isAP; /* Variable to store...","GUID-8D63200E-D1CF-4D36-AC0D-23570973580F.html@@@1.2.4.3 WDRV_WINC_BLEStop Function@@@WDRV_WINC_STATUS WDRV_WINC_BLEStop (DRV_HANDLE handle) Stops the BLE interface. Disables the BLE interface. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been called to...","GUID-8DD40768-A2E9-42F0-A1B8-E8300AE18682.html@@@1.1.13.6 WDRV_WINC_DHCPSGatewaySet@@@WDRV_WINC_STATUS WDRV_WINC_DHCPSGatewaySet ( DRV_HANDLE handle, WDRV_WINC_DHCPS_IDX poolIdx, WDRV_WINC_IPV4_ADDR *pGWAddr ) Configures the default gateway IP address of a DHCP server pool...","GUID-8DF1397A-E9E5-47F3-8737-CFA4F0CD376A.html@@@1.3.10.3 WDRV_PIC32MZW_RF_MAC_CONFIG Struct@@@typedef struct _WDRV_PIC32MZW_RF_MAC_CONFIG { /* Flag indicating if Power ON calibration is valid */ bool powerOnCalIsValid; /* Flag indicating if Factory calibration is valid */ bool...","GUID-8FACD6F4-1D4B-41B1-B0A0-16CF67D8D39E.html@@@1.1.30.10 WDRV_WINC_REGDOMAIN_CALLBACK Typedef@@@typedef void (*WDRV_WINC_REGDOMAIN_CALLBACK) ( DRV_HANDLE handle, uint8_t index, uint8_t ofTotal, bool isCurrent, const WDRV_WINC_REGDOMAIN_INFO * const pRegDomInfo ); This defines a function pointer...","GUID-905D427C-3203-499B-A04D-BF50321BB0DE.html@@@1.1.27.1 WDRV_WINC_BSS_ROAMING_CFG Enum@@@typedef enum { WDRV_WINC_BSS_ROAMING_CFG_OFF, WDRV_WINC_BSS_ROAMING_CFG_ON_L2, WDRV_WINC_BSS_ROAMING_CFG_ON_L3, WDRV_WINC_BSS_ROAMING_CFG_DEFAULT, WDRV_WINC_NUM_BSS_ROAMING_CFGS }...","GUID-90CD96F0-59C4-4482-ADEF-A4D46256252B.html@@@1.1.18.9.4 WDRV_WINC_MQTT_PUB_STATUS_CALLBACK Typedef@@@typedef void (*WDRV_WINC_MQTT_PUB_STATUS_CALLBACK) ( DRV_HANDLE handle, uintptr_t userCtx, WDRV_WINC_MQTT_PUB_HANDLE pubHandle, uint16_t packetId, WDRV_WINC_MQTT_PUB_STATUS_TYPE status ); Callback is...","GUID-91210A9C-CD94-432C-B37A-EEF3D38A7E2D.html@@@1.1.25.1 WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER Typedef@@@typedef void (*WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER) ( DRV_HANDLE handle, const WDRV_WINC_IP_MULTI_ADDRESS * const pIPAddr, WDRV_WINC_IP_ADDRESS_TYPE ipAddrType, uint16_t rtt ); This data type...","GUID-9143BF75-1787-494D-A6E9-4014E0AFEBF6.html@@@1.1.24.19 inet_ntop@@@const char *inet_ntop( int af, const void *a0, char *s, socklen_t l) Convert IPv4 and IPv6 addresses from binary to text form. Parameters Description af Address family, either AF_INET or AF_INET6 . a0...","GUID-91624021-947C-414C-B077-0BE4D47C3DB1.html@@@1.1.19.4 WDRV_WINC_NETIF_AAC_TYPE Enum@@@typedef enum { WDRV_WINC_NETIF_AAC_NONE, WDRV_WINC_NETIF_AAC_V4_DHCP, WDRV_WINC_NETIF_AAC_V4_AUTOCONF, WDRV_WINC_NETIF_AAC_V6_DHCP, WDRV_WINC_NETIF_AAC_V6_SLAAC } WDRV_WINC_NETIF_AAC_TYPE; Possible...","GUID-91C23295-08F6-4FC0-B0A4-BD7A427FCB18.html@@@1.1.10.3 WDRV_WINC_L2DataMonitorCallbackSet@@@WDRV_WINC_STATUS WDRV_WINC_L2DataMonitorCallbackSet ( DRV_HANDLE handle, WDRV_WINC_L2DATA_MONITOR_CALLBACK pfL2DataMonitorCB ) Sets the callback used to report L2 data frames. WDRV_WINC_Initialize...","GUID-924D8469-F958-4868-BE63-3DB083AE7626.html@@@1.1.16.6 WDRV_WINC_FILE_DELETE_CALLBACK Typedef@@@typedef void (*WDRV_WINC_FILE_DELETE_CALLBACK) ( DRV_HANDLE handle, uintptr_t userCtx, WDRV_WINC_FILE_TYPE type, WDRV_WINC_FILE_STATUS_TYPE status ); Definition of file delete callback, used to...","GUID-929FF129-78D9-4158-83C6-9955EA09D304.html@@@1.2.13.2 WDRV_WINC_BSSConnect Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSConnect ( DRV_HANDLE handle, const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, const WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const WDRV_WINC_BSSCON_NOTIFY_CALLBACK...","GUID-92A5C628-45F6-4F40-BF99-846176902BAC.html@@@1.3.1.4 WDRV_PIC32MZW_Deinitialize Function@@@void WDRV_PIC32MZW_Deinitialize (SYS_MODULE_OBJ object) PIC32MZW driver deinitialization function. This is the function that deinitializes the PIC32MZW. It is called by the system...","GUID-93432FBD-6097-42DF-985D-CF202AE20ECC.html@@@1.1.18.6 Subscribe Properties@@@Subscribe properties can be included when calling WDRV_WINC_MQTTSubscribe to subscribe to a topic. WDRV_WINC_MQTTSubPropDefaultSet is used to initialize a WDRV_WINC_MQTT_SUB_PROP structure, then the...","GUID-94F2FA08-C61B-415B-B28E-0DD8AE9CAB8B.html@@@1.1.24 Client - Berkeley Sockets APIs@@@This interface provides a Berkeley style sockets API. While closely matching the Berkeley standard API this interface does differ due to the architecture of the WINCS02. Only asynchronous sockets are...","GUID-9545B29C-1FCB-4AB0-A576-3B5F7BEEF4B9.html@@@1.3.9.6 WDRV_PIC32MZW_PowerSaveListenIntervalSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveListenIntervalSet ( DRV_HANDLE handle, uint16_t u16ListenInt ); Set the Wi-Fi listen interval for power save operation(in beacon period count). Set the...","GUID-95A6531F-8BF2-4046-A994-0BF9B44D9BCE.html@@@1.1.19.11 WDRV_WINC_NetIfIPAddrSet@@@WDRV_WINC_STATUS WDRV_WINC_NetIfIPAddrSet ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, WDRV_WINC_IP_ADDRESS_TYPE type, WDRV_WINC_IP_MULTI_ADDRESS *pAddr, unsigned int scope ) Defines the network IP...","GUID-95CBABB3-B66F-40EA-BA9F-530831BA707B.html@@@1.2.16.3 WDRV_WINC_WPSEnrolleeDiscoveryStartPIN Function@@@WDRV_WINC_STATUS WDRV_WINC_WPSEnrolleeDiscoveryStartPIN ( DRV_HANDLE handle, uint32_t pin, const WDRV_WINC_WPS_DISC_CALLBACK pfWPSDiscoveryCallback ) Start WPS discovery (PIN). Starts the WPS...","GUID-96111E78-F1BE-4C6A-8178-D984AAA81EA2.html@@@1.1.16.7 WDRV_WINC_FILE_FIND_CALLBACK Typedef@@@typedef void (*WDRV_WINC_FILE_FIND_CALLBACK) ( DRV_HANDLE handle, uintptr_t userCtx, WDRV_WINC_FILE_TYPE type, const char *pFilename, WDRV_WINC_FILE_STATUS_TYPE status ); Definition of file find...","GUID-9618C4E6-B0B4-4B40-8D1A-74E9D953DB32.html@@@1.2.3.4 WDRV_WINC_ASSOC_RSSI_CALLBACK Typedef@@@typedef void (*WDRV_WINC_ASSOC_RSSI_CALLBACK)(DRV_HANDLE handle, int8_t rssi); A callback to provide the current RSSI of the current association. This callback provides details of the signal strength...","GUID-96DBC350-57DA-4EF6-8881-1F29C9F630B5.html@@@1.2.14.4 WDRV_WINC_SSLCTXCipherSuitesGet Function@@@uint8_t WDRV_WINC_SSLCTXCipherSuitesGet ( WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx, uint16_t *pCipherSuiteList, uint8_t maxNumCipherSuites ) Returns the enabled cipher suites from a context...","GUID-96F1CDF2-79BF-4BE4-9438-782AD714DFC5.html@@@1.1.29.1.2 WDRV_WINC_TLS_CTX_NUM Macro@@@#define WDRV_WINC_TLS_CTX_NUM 2 U Number of TLS contexts. None...","GUID-97F4B27C-55F0-422F-A3D6-A58842D09E97.html@@@1.2.6.2 WDRV_WINC_AuthCtxSetDefaults Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetDefaults ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) Configures an authentication context into a default state. Ensures that each element of the structure is...","GUID-99863FC4-6091-4701-8325-4FBBD63272E1.html@@@1.2.14.5 WDRV_WINC_SSLCTXCipherSuitesSet Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLCTXCipherSuitesSet ( WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx, uint16_t *pCipherSuiteList, uint8_t numCipherSuites ) Set the cipher suites enabled in a context...","GUID-99918D60-0E56-476F-9636-4FBFA9761C61.html@@@1.1.26.1 WDRV_WINC_APDefaultWiFiCfg@@@WDRV_WINC_STATUS WDRV_WINC_APDefaultWiFiCfg ( WDRV_WINC_CONN_CFG * const pWiFiCfg ) Create a default WiFi configuration structure suitable for creating a BSS as a Soft-AP. None. Parameters Description...","GUID-9A3DC5B9-748D-40ED-BFEF-05F51A3AC760.html@@@1.1.21.1 WDRV_WINC_OTA_UPDATE_STATUS Enum@@@typedef enum { WDRV_WINC_OTA_STATUS_STARTED, WDRV_WINC_OTA_STATUS_COMPLETE, WDRV_WINC_OTA_STATUS_FAIL, WDRV_WINC_OTA_STATUS_INVALID_URL, WDRV_WINC_OTA_STATUS_INSUFFICIENT_FLASH...","GUID-9A4FCDF0-2CE1-4CA9-BC92-2D79BBDA4E42.html@@@1.3.4.2 WDRV_PIC32MZW_BSS_ROAMING_CFG Enum@@@typedef enum { /* BSS Roaming is turned off. */ WDRV_PIC32MZW_BSS_ROAMING_CFG_OFF, /* BSS Roaming is turned on, no IP renew occurs. */ WDRV_PIC32MZW_BSS_ROAMING_CFG_ON, /* BSS Roaming is turned on...","GUID-9AE7E6C6-BBAA-44B2-9D3A-38A80624E8A5.html@@@1.3.3.4 WDRV_PIC32MZW_BSS_INFO Struct@@@typedef struct { /* BSS context information (BSSID, SSID, channel etc). */ WDRV_PIC32MZW_BSS_CONTEXT ctx; /* Signal strength RSSI of BSS. */ int8_t rssi; /* Security capabilities of BSS. */...","GUID-9B851175-EAC6-4C6D-9E59-3F30C6595DF0.html@@@1.3.6.4 WDRV_PIC32MZW_ASSOC_INFO Struct@@@typedef struct { /* Primary driver handle. */ DRV_HANDLE handle; /* MAC address of peer device. */ WDRV_PIC32MZW_MAC_ADDR peerAddress; /* Authentication type used. */ WDRV_PIC32MZW_AUTH_TYPE authType...","GUID-9BF4CEFC-CDE7-4E28-BA3F-7FF8559EA511.html@@@1.1.24.13 sendto@@@ssize_t sendto ( int fd, const void *buf, size_t len, int flags, const struct sockaddr *addr, socklen_t alen) Send a message on a socket. Parameters Description fd Socket file descriptor. buf Pointer...","GUID-9C0EDBDC-8531-4266-977C-BD26930D8DDE.html@@@1.1.17.2 WDRV_WINC_DRIVER_VERSION_INFO Struct@@@typedef struct { /* Version number structure. */ struct { uint16_t major; uint16_t minor; uint16_t patch; } version; } WDRV_WINC_DRIVER_VERSION_INFO; This data type defines the version information of...","GUID-9C4F1C0E-FF2A-4947-A3DD-81C3A49DB662.html@@@1.1.7.10 WDRV_WINC_AuthCtxSetOpen@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetOpen ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx ) The auth type and information are configured appropriately for Open authentication. None. Parameters Description...","GUID-9C516049-3039-48EE-8D4D-5E905F0E0E64.html@@@1.1.16.12 WDRV_WINC_FileDelete@@@WDRV_WINC_STATUS WDRV_WINC_FileDelete ( DRV_HANDLE handle, const char *pFilename, WDRV_WINC_FILE_TYPE type, WDRV_WINC_FILE_DELETE_CALLBACK pfDeleteCb, uintptr_t deleteCbCtx ) Requests the WINC device...","GUID-9C88D234-2BD3-497A-80E6-430C4DEE3D57.html@@@1.1.18.8.6 WDRV_WINC_MQTTConnect@@@WDRV_WINC_STATUS WDRV_WINC_MQTTConnect ( DRV_HANDLE handle, bool cleanSession, uint16_t keepAliveTime, WDRV_WINC_MQTT_PROTO_VER protocolVer, const WDRV_WINC_MQTT_CONN_PROP * const pConnProp...","GUID-9D46514E-6D47-4CF6-915D-64CF58E44234.html@@@1.1.24.16 getaddrinfo@@@int getaddrinfo ( const char *host, const char *serv, const struct addrinfo *hint, struct addrinfo **res) Network address and service translation. Parameters Description host Pointer to host to...","GUID-9D7FF72B-E648-4E12-A908-7D722938C12A.html@@@1.2.1 WINC Firmware Update Guide@@@This document explains the WINC Firmware Upgrade Process. The ATWINC1500 and ATWINC3400 WiFi devices require firmware to be loaded into flash memory to operate. These devices will come shipped with...","GUID-9DC08CEA-87E3-441C-9346-0317D8A1D46C.html@@@1.3.5.6 WDRV_PIC32MZW_AuthCtxSetDefaults Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSetDefaults ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx ) Configures an authentication context into a default state. Ensures that each element of the...","GUID-9FCCF935-6123-403E-AD9B-CD7615B9D2CC.html@@@1.1.23 Client - SNTP APIs@@@The WINCS02 device includes a Simple Network Time Protocol (SNTP) client which synchronizes the device&apos;s local time with an NTP server. The SNTP client can be enabled (default) or disabled by calling...","GUID-A0876431-0E46-449A-87BB-62D7B850C638.html@@@1.3.6.1 WDRV_PIC32MZW_ASSOC_HANDLE_INVALID Macro@@@#define WDRV_PIC32MZW_ASSOC_HANDLE_INVALID (((WDRV_PIC32MZW_ASSOC_HANDLE) - 1 )) Invalid association handle. Defines a value for an association handle which isn&apos;t yet valid. None...","GUID-A1192529-D286-4C97-B960-EA1D152D95F2.html@@@1.1.30.7 WDRV_WINC_MAC_OPTIONS Struct@@@typedef struct { bool useTxAmpdu; } WDRV_WINC_MAC_OPTIONS; Contains MAC options. Members Description useTxAmpdu Wi-Fi A-MPDU Tx Enable. None...","GUID-A174C46A-915D-4904-AC7F-D6350A6994A3.html@@@1.1 MPLAB\u00AE Harmony WINCS02 WLAN Library@@@The MPLAB Harmony WINCS02 Driver provides a high-level interface to the WINCS02 Wi-Fi network controller module. The WINCS02 Driver, in conjunction with the WINCS02 module, allows an application to...","GUID-A1973CB2-FDD4-4331-8C34-628D76F97AA5.html@@@1.2.6 Authentication, BSS & HTTP provisioning@@@This topic provides information how contexts are used. To simplify other interfaces and encapsulate information the WINC Driver uses context structures in various places to pass around information...","GUID-A2367ED6-567D-4520-873B-B4A20441F755.html@@@1.1.29.2.2 WDRV_WINC_TLS_CIPHER_SUITE_NUM Macro@@@#define WDRV_WINC_TLS_CIPHER_SUITE_NUM 2 U Number of cipher suites. None...","GUID-A2A22824-F2B5-495C-97A7-F746ED2AD162.html@@@1.1.18.7 User Properties@@@User properties can be set by calling WDRV_WINC_MQTTUserPropSet and included in many MQTT messages. User properties can be received in many MQTT messages via a WDRV_WINC_MQTT_USER_PROP_CALLBACK...","GUID-A2CBA12F-0E50-493B-951D-B8F04AF0F523.html@@@1.1.9.10 WDRV_WINC_BSSFindSetScanParameters@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetScanParameters ( DRV_HANDLE handle, uint8_t numSlots, uint8_t activeSlotTime, uint8_t passiveSlotTime, uint8_t numProbes ) The scan consists of a number of slots...","GUID-A41D060B-3559-4D60-8C99-34B6D015731E.html@@@1.3.6 Client - Association APIs@@@This interface provides information about the current association with a peer device...","GUID-A4CE3571-0C52-4623-B10E-359D31196E20.html@@@1.2.15.1 WDRV_WINC_LocalTimeToUTC Function@@@uint32_t WDRV_WINC_LocalTimeToUTC ( const tstrSystemTime * const pSysTime) Convert local system time to UTC time. Converts the local system time structure into a more convenient UTC time. None. Param...","GUID-A4E8E317-B698-4D3F-8D00-90FC31D9D540.html@@@1.2.13.4 WDRV_WINC_BSSReconnect Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSReconnect ( DRV_HANDLE handle, WDRV_WINC_BSSCON_NOTIFY_CALLBACK pfNotifyCallback ) Reconnects to a BSS using stored credentials. Reconnects to the previous BSS using...","GUID-A4F75ABE-ECB0-4D34-9997-19D66450B692.html@@@1.1.2 System - SPI@@@The SPI interface API connects the WINCS02 driver to an appropriate SPI driver within the Harmony framework. Depending on hardware and system configuration Harmony will construct a suitable SPI...","GUID-A51864DC-AD1F-43AC-A5CC-3310BB2362EB.html@@@1.3.4.1 WDRV_PIC32MZW_BSS_CONTEXT Struct@@@typedef struct { /* SSID of BSS. */ WDRV_PIC32MZW_SSID ssid; /* BSSID. */ WDRV_PIC32MZW_MAC_ADDR bssid; /* Current channel of BSS. */ WDRV_PIC32MZW_CHANNEL_ID channel; /* Flag indicating if SSID is...","GUID-A583B4A0-5F61-47BD-B713-44ADBEEEF52B.html@@@1.1.30.4 WDRV_WINC_POWERSAVE_INFO Struct@@@typedef struct { WDRV_WINC_POWERSAVE_MODE psMode; } WDRV_WINC_POWERSAVE_INFO; Specified the powersave mode. Members Description psMode Powersave mode None...","GUID-A5D503A8-7A36-4518-8A1E-181C733453AA.html@@@1.1.30.3 WDRV_WINC_REGDOMAIN_SELECT Enum@@@typedef enum { WDRV_WINC_REGDOMAIN_SELECT_NONE, WDRV_WINC_REGDOMAIN_SELECT_CURRENT, WDRV_WINC_REGDOMAIN_SELECT_ALL } WDRV_WINC_REGDOMAIN_SELECT; Specifies a grouping of regulatory domains. Members...","GUID-A64A640B-371A-4011-9FA4-E79BE0FBDEF7.html@@@1.1.1.13 WDRV_WINC_RegisterSystemEventCallback@@@void WDRV_WINC_RegisterSystemEventCallback ( SYS_MODULE_OBJ object, WDRV_WINC_SYSTEM_EVENT_CALLBACK pfEventCallback ) This function registers a system event callback to be notified of system events...","GUID-A6CFD5EB-FD0C-43FE-AF56-EC0CF387296C.html@@@1.1.9.11 WDRV_WINC_BSSFindSetRSSIThreshold@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetRSSIThreshold ( DRV_HANDLE handle, int8_t rssiThreshold ) The RSSI threshold required for reconnection to an AP without scanning all channels first...","GUID-A7016003-8684-4D26-B759-0441465932F4.html@@@1.3.4 Client - BSS Context APIs@@@The BSS context contains information relevant to a BSS such as SSID and channel. The structure WDRV_PIC32MZW_BSS_CONTEXT is provided to contain the context. To initialize a context, the function...","GUID-A7167B5A-F6BC-438F-8A94-0DB2F689A92C.html@@@1.1.24.22 ntohl@@@uint32_t ntohl (uint32_t n) Convert 32-bit value from network to host byte order. Parameters Description n Value to convert. Converted value. None...","GUID-A7A928A9-822F-4943-BC2B-BB91EE79FB4C.html@@@1.1.20.8 WDRV_WINC_NVM_STATUS_CALLBACK Typedef@@@typedef void (*WDRV_WINC_NVM_STATUS_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_NVM_OPERATION_TYPE operation, WDRV_WINC_NVM_STATUS_TYPE status, uintptr_t opStatusInfo ); This defines an NVM status...","GUID-A8E3EAD2-E72A-4EFF-8661-C61656D7108B.html@@@1.1.4.2 WDRV_WINC_Close@@@void WDRV_WINC_Close ( DRV_HANDLE handle ) This is the function that closes an instance of the MAC. All per client data is released and the handle can no longer be used after this function is called...","GUID-A9327FAB-1701-421D-9A6F-62663C4D90AF.html@@@1.2.15.2 WDRV_WINC_SystemTimeGetCurrent Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeGetCurrent ( DRV_HANDLE handle, const WDRV_WINC_SYSTIME_CURRENT_CALLBACK pfGetCurrentCallback ) Requests the current system time from the WINC. Requests the...","GUID-A9B728FA-1A73-4196-82D2-D0B05B65CE8C.html@@@1.1.24.5 socket@@@int socket ( int domain, int type, int protocol) Create an endpoint for communication. Parameters Description domain Communication domain, must be AF_INET or AF_INET6 . type Socket type, must be...","GUID-AAAB9525-D75A-490F-89CA-766C731ABBA6.html@@@1.3.10.1 WDRV_PIC32MZW_REGDOMAIN_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_REGDOMAIN_CALLBACK) Pointer to a regulatory domain callback. This defines a function pointer to a regulatory domain callback which will receive information about a single...","GUID-AACD94F5-6FB4-4866-9D9D-2B2E416411EC.html@@@1.1.23.2 WDRV_WINC_SNTPStaticSet@@@WDRV_WINC_STATUS WDRV_WINC_SNTPStaticSet ( DRV_HANDLE handle, bool enabled ) Configures the NTP configuration mode to either DHCP or Static. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open...","GUID-AB1DF13B-9B40-4C79-9253-1AB4415392D2.html@@@1.1.29.2.7 WDRV_WINC_TLSCipherSuiteClose@@@void WDRV_WINC_TLSCipherSuiteClose ( DRV_HANDLE handle, WDRV_WINC_TLS_CS_HANDLE tlsCsHandle ) Frees a TLS cipher suite handle for other uses. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open...","GUID-ABDC9A29-634D-48AC-B83D-570E298B7803.html@@@1.2.2 Serial Bridge@@@This example compiles the serial bridge application which is used to communicate to WINC devices from PC. Serial bridge application acts as a bridge between PC and WINC devices. For example, firmware...","GUID-ABFDD598-3AD3-4727-892F-2731263E571E.html@@@1.1.18.12 WDRV_WINC_MQTT_QOS_TYPE Enum@@@typedef enum { WDRV_WINC_MQTT_QOS_ 0 , WDRV_WINC_MQTT_QOS_ 1 , WDRV_WINC_MQTT_QOS_ 2 } WDRV_WINC_MQTT_QOS_TYPE; Definition of possible quality of service levels. Members Description...","GUID-AEB75FB7-3B42-4190-BAA9-7D63F05F7344.html@@@1.1.24.4 WDRV_WINC_SocketRegisterEventCallback@@@WDRV_WINC_STATUS WDRV_WINC_SocketRegisterEventCallback ( DRV_HANDLE handle, const WINC_SOCKET_EVENT_CALLBACK pfSocketEventCb ) Socket events are dispatched to the application via this callback...","GUID-AED3AEE3-3B81-4B4F-98B2-37D9F81C74FD.html@@@1.1.6.6 WDRV_WINC_AssocRSSIGet@@@WDRV_WINC_STATUS WDRV_WINC_AssocRSSIGet ( WDRV_WINC_ASSOC_HANDLE assocHandle, int8_t * const pRSSI, WDRV_WINC_ASSOC_RSSI_CALLBACK const pfAssociationRSSICB ) Attempts to retrieve the RSSI of the...","GUID-AF0E58AB-FDAE-44E8-A78A-59531969B63D.html@@@1.1.30.13 WDRV_WINC_WifiRegDomainSet@@@WDRV_WINC_STATUS WDRV_WINC_WifiRegDomainSet ( DRV_HANDLE handle, const char * pRegDomainName, uint8_t regDomainNameLen, WDRV_WINC_WIFIC_EVENT_HANDLER pfWifiCEventCB ) Configures the regulatory domain...","GUID-AF380EDC-B004-4B11-8FF6-2563D3DAC1B6.html@@@1.3.3.7 WDRV_PIC32MZW_BSSFindGetNumBSSResults Function@@@uint8_t WDRV_PIC32MZW_BSSFindGetNumBSSResults (DRV_HANDLE handle) Returns the number of BSS scan results found. Returns the number of BSS scan results found. WDRV_PIC32MZW_Initialize must have been...","GUID-B01C8839-A321-4547-B3D6-858923953A23.html@@@1.2.15.3 WDRV_WINC_SystemTimeSetCurrent Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSetCurrent ( DRV_HANDLE handle, uint32_t curTime ) Sets the current system time on the WINC. Configures the system time to the UTC value specified...","GUID-B16E4B19-2E6C-4EC2-B21B-B7A85CD63E80.html@@@1.1.6 Client - Association APIs@@@This interface provides information about the current association with a peer device. A peer is either an AP when in Station mode or connected stations when in Soft-AP mode...","GUID-B1B5D9B2-1320-46FF-9DF6-6F8461580D9B.html@@@1.1.21.6 WDRV_WINC_OTAUpdateFromURL@@@WDRV_WINC_STATUS WDRV_WINC_OTAUpdateFromURL ( DRV_HANDLE handle, const char *pURL, WDRV_WINC_TLS_HANDLE tlsHandle, const WDRV_WINC_OTA_STATUS_CALLBACK pfUpdateStatusCB ) Using the URL provided the...","GUID-B2B928F7-B83B-4A9A-9674-F2617F39B841.html@@@1.1.18.4.2 WDRV_WINC_MQTTMsgInfoDefaultSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTMsgInfoDefaultSet ( WDRV_WINC_MQTT_MSG_INFO *pMsgInfo ) Ensures all elements of the structure are initialized to safe default values. None. Parameters Description...","GUID-B3C27564-ED50-4BFA-805B-6D9CDB80D72D.html@@@1.1.20.13 WDRV_WINC_NVMCheck@@@WDRV_WINC_STATUS WDRV_WINC_NVMCheck ( DRV_HANDLE handle, uint32_t offset, uint32_t size, WDRV_WINC_NVM_CHECK_MODE_TYPE mode, WDRV_WINC_NVM_STATUS_CALLBACK pfUpdateStatusCB ) Performs a CRC/hash check...","GUID-B3E1D701-D7DC-408F-ACC3-1AFAAD077DDE.html@@@1.1.28 Client - System Time APIs@@@The WINCS02 device maintains a local system time. This can be set either by the host through this API or via the SNTP Client when connected to a Wi-Fi network. To manually set the system time the host...","GUID-B469C737-BF1B-4997-8200-4764A509DA05.html@@@1.1.29.2.8 WDRV_WINC_TLSCipherSuiteAlgSet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCipherSuiteAlgSet ( DRV_HANDLE handle, WDRV_WINC_TLS_CS_HANDLE tlsCsHandle, const uint16_t * const pAlgorithms, uint8_t numAlgorithms, const WDRV_WINC_TLS_CS_CALLBACK...","GUID-B48AAC57-8F3B-48E9-B52E-6E7B7062E014.html@@@1.1.20.3 WDRV_WINC_NVM_CHECK_MODE_TYPE Enum@@@typedef enum { WDRV_WINC_NVM_CHECK_MODE_CRC16, WDRV_WINC_NVM_CHECK_MODE_SHA1, WDRV_WINC_NVM_CHECK_MODE_SHA224, WDRV_WINC_NVM_CHECK_MODE_SHA256, WDRV_WINC_NVM_CHECK_MODE_SHA384...","GUID-B493CC69-14C7-4875-A704-5C4D3679E9C4.html@@@1.1.7.7 WDRV_WINC_AuthCtxConfigureMfp@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxConfigureMfp ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, WDRV_WINC_AUTH_MFP_CONFIG config ) The authentication context is updated with the Management Frame Protection...","GUID-B4FA4527-55B1-4380-920A-6CE92DFBA100.html@@@1.3.6.2 WDRV_PIC32MZW_ASSOC_RSSI_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_ASSOC_RSSI_CALLBACK) A callback to provide the current RSSI of the current association. This callback provides details of the signal strength (RSSI) of the current...","GUID-B56FF47C-AEC8-4E63-9FC7-783709431BBC.html@@@1.2.3.2 WDRV_WINC_ASSOC_HANDLE; Typedef@@@typedef uintptr_t WDRV_WINC_ASSOC_HANDLE; A handle representing an association instance. An association handle references a single association instance between AP and STA. None...","GUID-B6921361-2F3A-4384-8081-FCE9BC1D3895.html@@@1.3.3.14 WDRV_PIC32MZW_BSSRoamingConfigure Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSRoamingConfigure ( DRV_HANDLE handle, WDRV_PIC32MZW_BSS_ROAMING_CFG roamingCfg ) Configures BSS roaming support. Enables or disables BSS roaming support. If...","GUID-B72C42AB-44BC-4807-9AAE-7F747E4E19A4.html@@@1.1.16.13 WDRV_WINC_FileClose@@@WDRV_WINC_STATUS WDRV_WINC_FileClose ( DRV_HANDLE handle, WDRV_WINC_FILE_HANDLE fHandle ) Close a file transfer between user application and WINC device. WDRV_WINC_Initialize must have been called...","GUID-B8484446-9AEF-4AB4-94E4-EC68E8C96968.html@@@1.1.18.4.3 WDRV_WINC_MQTTMsgInfoPubPropSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTMsgInfoPubPropSet ( WDRV_WINC_MQTT_MSG_INFO *pMsgInfo, WDRV_WINC_MQTT_PUB_PROP *pPubProp ) Sets the publish properties associated with a message info structure...","GUID-B8A118B5-D71D-40A9-A8A3-D07E6667D995.html@@@1.3.11.5 WDRV_PIC32MZW_IERxDataGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_IERxDataGet ( DRV_HANDLE handle, WDRV_PIC32MZW_IE_FRAME_TYPE_MASK frameMask, const uint32_t vendorOUI, const WDRV_PIC32MZW_IE_RX_CALLBACK pfVendorIERxCB ) Registers...","GUID-BB0DEC1B-642C-486F-8155-29DEF7A538D0.html@@@1.2.6.6 WDRV_WINC_AuthCtxSetWPAEnterpriseMSCHAPv2 Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWPAEnterpriseMSCHAPv2 ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, const char * const pUserDomain, const uint8_t * const pPassword, const uint16_t passwordLength...","GUID-BB86DF33-DA59-40AC-AFCD-F3BAED76EA26.html@@@1.2.9.1 WDRV_WINC_NVM_REGION Enum@@@typedef enum { /* Access to the entire flash address space. */ WDRV_WINC_NVM_REGION_RAW, /* Access to the firmware region (active image). */ WDRV_WINC_NVM_REGION_FIRMWARE_ACTIVE, /* Access to the...","GUID-BBAE7293-41FB-4EDF-B167-69D3633E073D.html@@@1.1.11.2 WDRV_WINC_CfgArchiveStore@@@WDRV_WINC_STATUS WDRV_WINC_CfgArchiveStore ( DRV_HANDLE handle, const char *pFilename ) Archives the currently active configuration set to a flash file. WDRV_WINC_Initialize must have been called...","GUID-BBB64F8F-7448-4E87-B05F-17B8C4635CD0.html@@@1.1.21.9 WDRV_WINC_OTAImageInvalidate@@@WDRV_WINC_STATUS WDRV_WINC_OTAImageInvalidate ( DRV_HANDLE handle, const WDRV_WINC_OTA_STATUS_CALLBACK pfUpdateStatusCB ) Mark a firmware image located in NVM memory as invalid to allow the...","GUID-BBBF3A92-9F6F-4813-8199-20A17D288F06.html@@@1.1.12 Client - Debug APIs@@@Debug information is available from both the WINCS02 driver and WINCS02 device. The WINCS02 driver produces debug output via a printf style callback of type WDRV_WINC_DEBUG_PRINT_CALLBACK provided by...","GUID-BBC5C177-4BC4-4472-A19A-C60261121CF0.html@@@1.2.8.2 WDRV_WINC_ICMP_ECHO_STATUS Enum@@@typedef enum { /* The operation completed successfully. */ WDRV_WINC_ICMP_ECHO_STATUS_SUCCESS = 0 , /* ICMP destination unreachable. */ WDRV_WINC_ICMP_ECHO_STATUS_UNREACH = 1 , /* The operation timed...","GUID-BC2CF70D-B995-4831-8AE7-85E53E02A57D.html@@@1.3.12.1 WDRV_PIC32MZW_CHANNEL_ID Enum@@@typedef enum _WDRV_PIC32MZW_CHANNEL_ID { /* Any valid channel. */ WDRV_PIC32MZW_CID_ANY, /* 2.4 GHz channel 1 - 2412 MHz. */ WDRV_PIC32MZW_CID_ 2 _ 4 G_CH1, /* 2.4 GHz channel 2 - 2417 MHz. */...","GUID-BC41BE13-8382-4079-A0AE-D141D77A7251.html@@@1.1.29.1.11 WDRV_WINC_TLSCtxSNISet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxSNISet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, const char *pServerName ) Sets the SNI field of a TLS context. WDRV_WINC_Initialize must have been called...","GUID-BD1F5003-02C3-4175-9DB2-902B122ED92E.html@@@1.1.11.1 WDRV_WINC_CfgArchiveRecall@@@WDRV_WINC_STATUS WDRV_WINC_CfgArchiveRecall ( DRV_HANDLE handle, const char *pFilename ) Recall a flash file to the currently active configuration. WDRV_WINC_Initialize must have been called...","GUID-BD2AF66D-B10D-4B19-ACE3-BCBEB39F1186.html@@@1.1.6.1 WDRV_WINC_NUM_ASSOCS Macro@@@#define WDRV_WINC_NUM_ASSOCS 8 U This is the number of Station associations supported by the driver. None...","GUID-BDC8A1A5-B0FF-4C1C-8076-DE84067082AB.html@@@WDRV_WINC_SSID_LIST Struct@@@typedef struct WDRV_WINC_STR_SSID_LIST { struct WDRV_WINC_STR_SSID_LIST *pNext; WDRV_WINC_SSID ssid; } WDRV_WINC_SSID_LIST; An element structure which can form part of an SSID linked list. Members...","GUID-BE4AE9DB-39AD-4CD9-AA97-DA3E323271FF.html@@@1.1.29.2.4 WDRV_WINC_TLS_CS_CALLBACK Typedef@@@typedef void (*WDRV_WINC_TLS_CS_CALLBACK) ( DRV_HANDLE handle, WDRV_WINC_TLS_CS_HANDLE tlsCsHandle, uint16_t *pAlgorithms, uint8_t numAlgorithms, bool success ); Callback will be called to provide TLS...","GUID-BE9A0977-3616-4935-92BF-8FCEF7F121D8.html@@@1.2.10.1 WDRV_WINC_PowerSaveGetMode Function@@@WDRV_WINC_PS_MODE WDRV_WINC_PowerSaveGetMode (DRV_HANDLE handle) Returns the current power save mode. Returns to the caller the current power save mode in use by the WINC. WDRV_WINC_Initialize should...","GUID-C03897C9-8CB4-4452-BDC3-06FA1DA4EB82.html@@@1.2.8.3 WDRV_WINC_ICMPEchoRequest Function@@@WDRV_WINC_STATUS WDRV_WINC_ICMPEchoRequest ( DRV_HANDLE handle, uint32_t ipAddress, uint8_t ttl, const WDRV_WINC_ICMP_ECHO_RSP_EVENT_HANDLER pfICMPEchoResponseCB ) Sends an ICMP echo request. Sends an...","GUID-C0858BB2-B95A-4B25-B5BD-4B19C6E09ED9.html@@@1.2.5.8 WDRV_WINC_BSSFindSetEnabledChannels Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetEnabledChannels ( DRV_HANDLE handle, WDRV_WINC_CHANNEL_MASK channelMask ) Configures the channels which can be scanned. To comply with regulatory domains certain...","GUID-C0A91481-BE29-4CE6-9520-B9999BCC19E3.html@@@1.2.5.7 WDRV_WINC_BSSFindReset Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindReset ( DRV_HANDLE handle, WDRV_WINC_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the first scan results again The information structure of the first BSS is...","GUID-C29F6564-0F47-4455-A4E3-FE68DFC51C49.html@@@1.2.6.4 WDRV_WINC_AuthCtxSetWEP Function@@@WDRV_WINC_STATUS WDRV_WINC_AuthCtxSetWEP ( WDRV_WINC_AUTH_CONTEXT * const pAuthCtx, uint8_t idx, uint8_t *pKey, uint8_t size ) Configure an authentication context for WEP authentication. The auth type...","GUID-C2F0C738-26EF-45AE-A557-26FC1E66FD25.html@@@1.1.17.5 WDRV_WINC_InfoDeviceGet@@@WDRV_WINC_STATUS WDRV_WINC_InfoDeviceGet ( DRV_HANDLE handle, WDRV_WINC_DEVICE_INFO * const pDeviceInfo ) Returns information on the WINC device. WDRV_WINC_Initialize must have been called...","GUID-C3A711C9-5604-4C43-A3DA-BE6D5BDFDCCB.html@@@1.1.5.3 WDRV_WINC_CHANNEL_ID Enum@@@typedef enum { WDRV_WINC_CID_ANY, WDRV_WINC_CID_ 2 _ 4 G_CH1, WDRV_WINC_CID_ 2 _ 4 G_CH2, WDRV_WINC_CID_ 2 _ 4 G_CH3, WDRV_WINC_CID_ 2 _ 4 G_CH4, WDRV_WINC_CID_ 2 _ 4 G_CH5, WDRV_WINC_CID_ 2 _ 4...","GUID-C6ECFED6-5973-4A87-B444-BFAEF83B580D.html@@@1.1.12.4 WDRV_WINC_DebugUARTSet@@@WDRV_WINC_STATUS WDRV_WINC_DebugUARTSet ( DRV_HANDLE handle, WDRV_WINC_DEBUG_UART uartPort, uint32_t uartBaudRate ) Sets the debug UART and baud rate on the WINC device. WDRV_WINC_Initialize must have...","GUID-C700CC43-D113-4806-9D38-BBBB75B2284B.html@@@1.1.16.11 WDRV_WINC_FileWrite@@@WDRV_WINC_STATUS WDRV_WINC_FileWrite ( DRV_HANDLE handle, WDRV_WINC_FILE_HANDLE fHandle, const uint8_t *pData, size_t lenData ) Write data to a file from user application to WINC device...","GUID-C79465BA-38BB-4ABC-A45C-5FDCB79FA3A1.html@@@1.2.9.4 WDRV_WINC_NVMWrite Function@@@WDRV_WINC_STATUS WDRV_WINC_NVMWrite ( DRV_HANDLE handle, WDRV_WINC_NVM_REGION region, void *pBuffer, uint32_t offset, uint32_t size ); Writes data to an NVM region. Writes the number of bytes...","GUID-C7C116BD-97AB-4148-BC15-B85809E9CD90.html@@@1.1.15.2 WDRV_WINC_EXTCRYPTO_SIGN_CB Typedef@@@typedef void (*WDRV_WINC_EXTCRYPTO_SIGN_CB) ( DRV_HANDLE handle, uintptr_t signCbCtx, WDRV_WINC_EXTCRYPTO_SIG_ALGO signAlgo, uint8_t *pSignValue, size_t signValueLen, uintptr_t extCryptoCxt )...","GUID-C7F15064-E72B-4B09-A0CA-F84098497D36.html@@@1.1.12.3 WDRV_WINC_DEBUG_UART Enum@@@typedef enum { WDRV_WINC_DEBUG_UART_OFF = 0 , WDRV_WINC_DEBUG_UART_ 1 = 1 , WDRV_WINC_DEBUG_UART_ 2 = 2 } WDRV_WINC_DEBUG_UART; Values to indicate debug UART selection. Members Description...","GUID-C83F212A-690F-48CE-8F2A-4B83862B2C31.html@@@1.3.9.4 WDRV_PIC32MZW_PowerSaveModeSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_PowerSaveModeSet ( DRV_HANDLE handle, WDRV_PIC32MZW_POWERSAVE_MODE powerSaveMode, WDRV_PIC32MZW_POWERSAVE_CORRELATION picCorrelation...","GUID-C86D0248-7EEF-449B-B747-D60C8B68E491.html@@@1.1.15 Client - External Crypto Operations APIs@@@This interface manages the flow of information required for certain WINCS02 crypto operations to be performed externally (from the perspective of the WINCS02 device). The only crypto operation which...","GUID-C8FD6AB1-6D19-4A8B-86E3-74F54370A97E.html@@@1.3.5.1 WDRV_PIC32MZW_ENT_AUTH_DOMAIN_USER_LEN_MAX Macro@@@#define WDRV_PIC32MZW_ENT_AUTH_DOMAIN_USER_LEN_MAX 255 #define WDRV_PIC32MZW_MAX_SSID_LEN 32 #define WDRV_PIC32MZW_MAC_ADDR_LEN 6 #define WDRV_PIC32MZW_WEP_40_KEY_STRING_SIZE 10 #define...","GUID-C97E4EFB-3FAB-4629-B94E-1F1DE8350984.html@@@1.2.4.2 WDRV_WINC_BLEStart Function@@@WDRV_WINC_STATUS WDRV_WINC_BLEStart (DRV_HANDLE handle) Starts the BLE interface. Enables the BLE interface. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been called to...","GUID-C9F34153-1A97-4111-825E-72E8D47B6F1A.html@@@1.3.5.10 WDRV_PIC32MZW_AuthCtxSharedKey Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxSharedKey ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, bool enable ) Enable or disable Shared Key authentication in an authentication context. The...","GUID-CA4F7F1B-CAE2-4AB7-AE45-CB45ADCD997A.html@@@1.2.11.5 WDRV_WINC_Tasks Function@@@void WDRV_WINC_Tasks (SYS_MODULE_OBJ object) Maintains the WINC drivers state machine. This function is used to maintain the driver&apos;s internal state machine. WDRV_WINC_Initialize must have been called...","GUID-CA544C44-D3FF-451B-9DC3-EF8A5A84C161.html@@@1.2.9 NVM Access@@@This topic provides information on how the SPI flash within the WINC device can be read, written and erased. The WINC device contains a SPI flash device within which firmware and data are stored. It...","GUID-CA70D66A-9358-49F8-8E90-1D92FFD8DD8B.html@@@1.1.30.6 WDRV_WINC_COEX_CFG Struct@@@typedef struct { bool use2Wire; bool wlanRxHigherThanBt; bool wlanTxHigherThanBt; bool sharedAntenna; } WDRV_WINC_COEX_CFG; Contains arbiter configuration for interface mode, priority and antenna...","GUID-CAEE987E-7C37-4ED7-8306-49A2E8EF93EA.html@@@1.3.6.7 WDRV_PIC32MZW_AssocRSSIGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocRSSIGet ( WDRV_PIC32MZW_ASSOC_HANDLE assocHandle, int8_t * const pRSSI, WDRV_PIC32MZW_ASSOC_RSSI_CALLBACK const pfAssociationRSSICB ) Retrieve the current...","GUID-CB0E1B53-597E-49E5-B9EE-3BFC3B3DA983.html@@@1.1.30.9 WDRV_WINC_POWERSAVE_CALLBACK Typedef@@@typedef void (*WDRV_WINC_POWERSAVE_CALLBACK) ( DRV_HANDLE handle, const WDRV_WINC_POWERSAVE_INFO * const pPowersaveInfo ); This defines a function pointer to a powersave information callback...","GUID-CBD6DAFC-600B-40F5-A4AD-AF8049FFB412.html@@@1.1.28.1 WDRV_WINC_SYSTIME_CURRENT_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SYSTIME_CURRENT_CALLBACK) ( DRV_HANDLE handle, uint32_t timeUTC ); Callback returning the system time. The time is returned as UTC seconds since 01/01/1970. Parameters...","GUID-CDA512D8-0DE4-4672-8716-04CAC681CB38.html@@@Product Change Notification Service@@@Microchip\u2019s product change notification service helps keep customers current on Microchip products. Subscribers will receive email notification whenever there are changes, updates, revisions or errata...","GUID-CE31A004-61F9-480A-A2ED-86AE40681AAD.html@@@1.3.3.11 WDRV_PIC32MZW_BSSFindSetEnabledChannels24 Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindSetEnabledChannels24 ( DRV_HANDLE handle, WDRV_PIC32MZW_CHANNEL24_MASK channelMask24 ) Set the enabled channels list for 2.4GHz. To comply with regulatory...","GUID-CF1824B4-C6B8-4EC6-B91B-9DACFA4D7266.html@@@1.2.14.9 WDRV_WINC_SSLRetrieveCert Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLRetrieveCert ( DRV_HANDLE handle, uint16_t *pCurveType, uint8_t *pHash, uint8_t *pSig, WDRV_WINC_EC_POINT_REP *pKey ) Retrieve the certificate to be verified from the...","GUID-CF8371AB-6D6F-4241-880D-6A6D6EC7E5F8.html@@@1.1.30.15 WDRV_WINC_WifiCoexEnableSet@@@WDRV_WINC_STATUS WDRV_WINC_WifiCoexEnableSet ( DRV_HANDLE handle, bool enableCoexArbiter ) Enables or disables the coexistence arbiter. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open must...","GUID-CFBC8377-2DCD-4C48-AB07-B620B37D378A.html@@@1.3.11.2 WDRV_PIC32MZW_IE_RX_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_IE_RX_CALLBACK) Pointer to a callback function to receive vendor specific IE data and related information. This defines a function pointer to a vendor specific IE callback...","GUID-D21AD79C-567A-4A01-993A-82FC7E3611CA.html@@@1.2.5.9 WDRV_WINC_BSSFindSetRSSIThreshold Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetRSSIThreshold ( DRV_HANDLE handle, int8_t rssiThreshold ) Configures the scan RSSI threshold. The RSSI threshold required for reconnection to an AP without...","GUID-D23B0F95-3356-4AB9-BF46-B92FE9935C90.html@@@1.1.18.5.8 WDRV_WINC_MQTTPubPropTopicAliasSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTPubPropTopicAliasSet ( WDRV_WINC_MQTT_PUB_PROP *pPubProp, uint16_t topicAlias ) Sets the topic alias property in the publish property structure...","GUID-D2767F7F-A339-48EE-B082-78588D0B6CA3.html@@@1.2.3.6 WDRV_WINC_AssocPeerAddressGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocPeerAddressGet ( DRV_HANDLE handle, WDRV_WINC_NETWORK_ADDRESS * const pPeerAddress, WDRV_WINC_ASSOC_CALLBACK const pfAssociationInfoCB ) Retrieve the current...","GUID-D2AD9BDB-1A38-4CF9-8411-15056780CA42.html@@@1.1.16.9 WDRV_WINC_FileFind@@@WDRV_WINC_STATUS WDRV_WINC_FileFind ( DRV_HANDLE handle, WDRV_WINC_FILE_TYPE type, WDRV_WINC_FILE_FIND_CALLBACK pfFindCb, uintptr_t findCbCtx ) Requests the WINC device send a list of a particular...","GUID-D45FD002-4D1F-482A-A111-4FEED907F099.html@@@1.2.10.5 WDRV_WINC_PS_MODE Enum@@@typedef enum { /* Invalid mode. */ WDRV_WINC_PS_MODE_INVALID = , /* Power save is off. */ WDRV_WINC_PS_MODE_OFF = , /* Automatic control of power save. */ WDRV_WINC_PS_MODE_AUTO_HIGH_POWER = , /*...","GUID-D46FBC90-658F-441D-B73A-6627E7CBC558.html@@@1.1.6.3 WDRV_WINC_ASSOC_HANDLE Typedef@@@typedef uintptr_t WDRV_WINC_ASSOC_HANDLE; An association handle references a single association instance between AP and STA. None...","GUID-D4A37629-F12D-429D-8208-9AA40C686E2B.html@@@1.1.4.1 WDRV_WINC_Open@@@DRV_HANDLE WDRV_WINC_Open ( const SYS_MODULE_INDEX index, const DRV_IO_INTENT intent ) Opens an instance of the WINC driver and returns a handle which must be used when calling other driver functions...","GUID-D58D1F96-DFB6-4A48-9D0B-BD09F88955CC.html@@@1.3.5.11 WDRV_PIC32MZW_AuthCtxApTransitionDisable Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxApTransitionDisable ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, bool tdOn, ) Turn on/off the transition disable feature in AP mode. The authentication...","GUID-D6D47967-A85F-453D-B723-BA8FE853A5CD.html@@@1.1.14.3 WDRV_WINC_DNSServerAddressSet@@@WDRV_WINC_STATUS WDRV_WINC_DNSServerAddressSet ( DRV_HANDLE handle, uint8_t numServers, WDRV_WINC_IP_MULTI_TYPE_ADDRESS *pServerAddr ) Configures the system to use the DNS servers specified...","GUID-D6FEA61E-0617-459F-A65A-80D24FA301CB.html@@@1.1.16.2 WDRV_WINC_FILE_TYPE Enum@@@typedef enum { WDRV_WINC_FILE_TYPE_INVALID = 0 , WDRV_WINC_FILE_TYPE_CERTS = WINC_CONST_FS_FILETYPE_CERT, WDRV_WINC_FILE_TYPE_PRIKEYS = WINC_CONST_FS_FILETYPE_PRIKEY, WDRV_WINC_FILE_TYPE_DHPARAM =...","GUID-D72C2510-8FB6-427B-B408-31FAB76C46D0.html@@@1.1.29.1.3 WDRV_WINC_TLS_INVALID_HANDLE Macro@@@#define WDRV_WINC_TLS_INVALID_HANDLE 0 U Defines an invalid TLS context handle. None...","GUID-D77087B6-33AC-472C-AD7D-0EB6F30F123E.html@@@1.2.5.4 WDRV_WINC_BSSFindGetNumBSSResults Function@@@uint8_t WDRV_WINC_BSSFindGetNumBSSResults (DRV_HANDLE handle) Returns the number of BSS scan results found. Returns the number of BSS scan results found. WDRV_WINC_Initialize must have been called...","GUID-D78897BE-D6B4-4CCB-BECA-7BA3125C9097.html@@@1.1.18.6.1 WDRV_WINC_MQTT_SUB_PROP Struct@@@typedef struct { uint32_t subscriptionIdentifer; } WDRV_WINC_MQTT_SUB_PROP; Properties to be applied to MQTT subscription requests. Members Description subscriptionIdentifer Subscription Identifier...","GUID-D8D5DAC8-3B55-4B87-9428-936D8B524F3D.html@@@1.3.5.12 WDRV_PIC32MZW_AuthCtxStaTransitionDisable Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AuthCtxStaTransitionDisable ( WDRV_PIC32MZW_AUTH_CONTEXT * const pAuthCtx, ) Disable transition security algorithms in STA mode. The authentication context is...","GUID-D8E6AFA2-54E4-4A4A-8969-0047AA200187.html@@@1.1.24.1 WINC_SOCKET_STATUS Enum@@@typedef enum { WINC_SOCKET_STATUS_OK, WINC_SOCKET_STATUS_ERROR } WINC_SOCKET_STATUS; Socket status types. Members Description WINC_SOCKET_STATUS_OK The status is OK. WINC_SOCKET_STATUS_ERROR The...","GUID-D98943EC-3139-4C73-8FB2-8996959CE791.html@@@1.1.27.5 WDRV_WINC_BSSRoamingConfigure@@@WDRV_WINC_STATUS WDRV_WINC_BSSRoamingConfigure ( DRV_HANDLE handle, WDRV_WINC_BSS_ROAMING_CFG roamingCfg ) Enables or disables BSS roaming support. If enabled, the WINC can perform a renew of the...","GUID-D9C35F46-3BAD-427E-9C83-CA548BAE77DF.html@@@1.3.6.8 WDRV_PIC32MZW_AssocTransitionDisableGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocTransitionDisableGet ( WDRV_PIC32MZW_ASSOC_HANDLE assocHandle, bool * const pTransitionDisable ) Determine whether transition algorithms should be disabled for...","GUID-D9C5F6DC-9CEB-44ED-88FF-6B3E6F8F5F81.html@@@1.1.25 Client - ICMP APIs@@@This interface provides functionality required for ICMP operations. An ICMP echo request can be sent using the function WDRV_WINC_ICMPEchoRequestAddr . Responses are reported via the...","GUID-DA950097-9D0A-4C14-B218-7BE648EB4BB0.html@@@1.1.17.1 WDRV_WINC_DEVICE_INFO Struct@@@typedef struct { bool isValid; uint32_t id; uint8_t numImages; /* Information for each device image. */ struct { uint32_t seqNum; uint32_t version; uint32_t srcAddr; }...","GUID-DABDB3CC-B50A-4748-A8E7-4A25A791D627.html@@@1.1.1.2 WDRV_WINC_SYSTEM_EVENT_TYPE Enum@@@typedef enum { WDRV_WINC_SYSTEM_EVENT_INVALID, WDRV_WINC_SYSTEM_EVENT_DEVICE_HARD_RESET, WDRV_WINC_SYSTEM_EVENT_DEVICE_INIT_BEGIN, WDRV_WINC_SYSTEM_EVENT_DEVICE_INIT_COMPLETE...","GUID-DB172BDF-7D69-4E47-8E3A-9BE4DDBE6144.html@@@1.3.9.1 WDRV_PIC32MZW_PS_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_PS_NOTIFY_CALLBACK) Callback to signal sleep entry of SMC(WSM/WDS) and exit of powersave cycle. After WiFi power-save mode is set by the user, the driver will use this...","GUID-DB4BC8A6-B6B3-4743-8308-A5CF5C5E942B.html@@@1.1.24.20 htonl@@@uint32_t htonl (uint32_t n) Convert 32-bit value from host to network byte order. Parameters Description n Value to convert. Converted value. None...","GUID-DB718ADE-4DFD-4A28-A968-C4354594BAD1.html@@@1.2.10.4 WDRV_WINC_PowerSaveSetMode Function@@@WDRV_WINC_STATUS WDRV_WINC_PowerSaveSetMode ( DRV_HANDLE handle, WDRV_WINC_PS_MODE mode ) Sets the power save mode. Selects the current power save mode the WINC should be using. WDRV_WINC_Initialize...","GUID-DD1B8C31-2334-40FA-B562-83563A4A8933.html@@@1.3.12.2 WDRV_PIC32MZW_CHANNEL24_MASK Enum@@@typedef enum { /* 2.4GHz (2412 MHz) channel 1. */ WDRV_PIC32MZW_CM_ 2 _ 4 G_CH1 = 0x0001 , /* 2.4GHz (2417 MHz) channel 2. */ WDRV_PIC32MZW_CM_ 2 _ 4 G_CH2 = 0x0002 , /* 2.4GHz (2422 MHz) channel 3...","GUID-DD76403F-BE86-427A-A35A-A90A52D2DB7A.html@@@1.1.1.6 WDRV_WINC_Initialize@@@SYS_MODULE_OBJ WDRV_WINC_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ) This is the function that initializes the WINC driver. It is called by the system. None...","GUID-DDF7C35B-3ADE-47F3-813D-4628CCDF4218.html@@@1.3.1.5 WDRV_PIC32MZW_Reinitialize Function@@@void WDRV_PIC32MZW_Reinitialize ( SYS_MODULE_OBJ object, const SYS_MODULE_INIT * const init ) PIC32MZW driver reinitialization function. This is the function that re-initializes the PIC32MZW. It is...","GUID-DE8FA814-FDE4-430A-9B99-2A68C30F0233.html@@@1.2.4.1 WDRV_WINC_BLEIsStarted Function@@@bool WDRV_WINC_BLEIsStarted (DRV_HANDLE handle) Determines if BLE has been started. Determines if BLE has been started. WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should have been...","GUID-DEDB8880-71DA-46D9-8223-C2C95F6D3B18.html@@@1.2.7.2 WDRV_WINC_Open Function@@@DRV_HANDLE WDRV_WINC_Open ( const SYS_MODULE_INDEX index, const DRV_IO_INTENT intent) Opens an instance of the WINC driver. Opens an instance of the WINC driver and returns a handle which must be used...","GUID-DF1F07ED-24D2-4681-801D-F6FC9E3875D9.html@@@1.1.18.4 Message Information@@@Message information can be included when calling either WDRV_WINC_MQTTPublish or WDRV_WINC_MQTTLWTSet . Message information can also be received in a PUBLISH message via the...","GUID-DF31D42F-71E9-487F-9802-03172B69D54F.html@@@1.1.20.10 WDRV_WINC_NVMEraseSector@@@WDRV_WINC_STATUS WDRV_WINC_NVMEraseSector ( DRV_HANDLE handle, uint8_t startSector, uint8_t numSectors, WDRV_WINC_NVM_STATUS_CALLBACK pfUpdateStatusCB ) Erases a number of sectors...","GUID-DF8699E1-859E-498A-A2B2-14BA484F15AA.html@@@1.2.3.5 WDRV_WINC_AssocAuthTypeGet Function@@@WDRV_WINC_STATUS WDRV_WINC_AssocAuthTypeGet ( DRV_HANDLE handle, WDRV_WINC_AUTH_TYPE * const pAuthType, WDRV_WINC_ASSOC_CALLBACK const pfAssociationInfoCB ) Retrieve the current association...","GUID-E012F7C2-64C2-40DA-89CF-C613B200BF19.html@@@1.3.3.3 WDRV_PIC32MZW_SEC_MASK Enum@@@typedef enum { /* AP supports WEP-40 or WEP-104, as standalone or as GTK with 11i TSN. */ WDRV_PIC32MZW_SEC_BIT_WEP = 0x01 , /* AP supports TKIP as GTK (if not WEP) and PTK. */...","GUID-E033932D-A82D-4E32-998C-C19802B5C4C0.html@@@1.1.29.1.4 WDRV_WINC_TLSCTX_INFO Struct@@@typedef struct { bool idxInUse; WDRV_WINC_EXTCRYPTO_SIGN_CB pfSignCB; uintptr_t signCbCtx; WDRV_WINC_TLS_CS_HANDLE tlsCsHandle; } WDRV_WINC_TLSCTX_INFO; Structure containing information about a TLS...","GUID-E0B3B3A6-07A9-4EC6-9C84-977842046668.html@@@1.3.9.3 WDRV_PIC32MZW_POWERSAVE_PIC_CORRELATION Enum@@@typedef enum { /* Asynchronous correlation. Trigger of sleep mode entry/exit is done through software */ WDRV_PIC32MZW_POWERSAVE_PIC_ASYNC_MODE = 0 , /* Synchronous correlation. Trigger of sleep mode...","GUID-E1BD903C-9D8D-45EA-BC9F-9E419FA48AC2.html@@@1.1.6.7 WDRV_WINC_AssocPeerAddressGet@@@WDRV_WINC_STATUS WDRV_WINC_AssocPeerAddressGet ( WDRV_WINC_ASSOC_HANDLE assocHandle, WDRV_WINC_NETWORK_ADDRESS * const pPeerAddress ) Attempts to retrieve the network address of the peer device in the...","GUID-E339E93F-7BCF-4C2F-80D5-783001332B05.html@@@1.3.4.3 WDRV_PIC32MZW_BSSCON_NOTIFY_CALLBACK Typedef@@@typedef void (*WDRV_PIC32MZW_BSSCON_NOTIFY_CALLBACK) Callback to notify the user of a change in connection state. When the connection state changes this callback enable the driver to signal the user...","GUID-E38D481A-4A2F-44FF-9BFD-C96514AD47C5.html@@@1.1.30 Client - Wi-Fi Configuration APIs@@@This interface provides functionality required for configuring the Wi-Fi. This includes powersave mode, regulatory domain and coexistence settings. The WINCS02 implements the 802.11 Protocol Power...","GUID-E3CFDB88-339C-4918-8465-B97CCCB71358.html@@@1.1.18.8.4 WDRV_WINC_MQTTClientCfgSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTClientCfgSet ( DRV_HANDLE handle, const char *pClientId, const char *pUsername, const char *pPassword ) Configures the client ID, username and password...","GUID-E4146D37-A9A1-40C9-B0AD-6A8E31C00666.html@@@1.2.12.4 WDRV_WINC_CUST_IE Struct@@@typedef struct { /* ID. */ uint8_t id; /* Length of data. */ uint8_t length; /* Data. */ uint8_t data[]; } WDRV_WINC_CUST_IE; Defines the format of a custom IE. Custom IEs consist of an ID, length and...","GUID-E4FB7265-596C-45C1-8F42-DF6BE34156DF.html@@@1.1.8.3 WDRV_WINC_BSSCtxSetBSSID@@@WDRV_WINC_STATUS WDRV_WINC_BSSCtxSetBSSID ( WDRV_WINC_BSS_CONTEXT * const pBSSCtx, uint8_t * const pBSSID ) The BSSID string is copied into the BSS context. None. Parameters Description pBSSCtx...","GUID-E57B7F3F-55D4-4D9A-9D6D-D15872EE8DD4.html@@@1.1.18.7.1 WDRV_WINC_MQTT_USER_PROP Struct@@@typedef struct { const uint8_t *pKey; size_t lenKey; const uint8_t *pValue; size_t lenValue; } WDRV_WINC_MQTT_USER_PROP; User properties consisting of a key/value pair. Members Description pKey...","GUID-E73DDC4E-D573-4154-9C3F-12F38C20A4CB.html@@@1.1.18.8.5 WDRV_WINC_MQTTLWTSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTLWTSet ( DRV_HANDLE handle, const WDRV_WINC_MQTT_MSG_INFO *pMsgInfo, const char *pTopicName, const uint8_t *pTopicData, size_t topicDataLen ) Configures the Last Will...","GUID-E7DAC95F-81BE-4A52-82E8-79727587D282.html@@@1.2.14.11 WDRV_WINC_SSLStopRetrieveCert Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLStopRetrieveCert (DRV_HANDLE handle) Stop processing the certificate Stop processing the certificate WDRV_WINC_Initialize should have been called. WDRV_WINC_Open should...","GUID-E8251634-7B15-4073-A103-5A5F128B8699.html@@@Microchip Devices Code Protection Feature@@@Note the following details of the code protection feature on Microchip products: Microchip products meet the specifications contained in their particular Microchip Data Sheet. Microchip believes that...","GUID-E9817D33-381A-4C91-8FF9-F8E18A31A19A.html@@@1.1.29.1 TLS Contexts@@@TLS contexts encapsulate a TLS configuration which can then be associated with a service needing TLS support such as socket or MQTT connections. To use a TLS context it must first be opened by calling...","GUID-E98C2F70-A211-4437-A69D-23612AE87FC6.html@@@1.2.11.2 WDRV_WINC_Initialize Function@@@SYS_MODULE_OBJ WDRV_WINC_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ) System interface initialization of the WINC driver. This is the function that initializes the...","GUID-EA06AD1D-6A2D-4772-9E90-E7A8F2EC23DA.html@@@1.3.3.8 WDRV_PIC32MZW_BSSFindInProgress Function@@@bool WDRV_PIC32MZW_BSSFindInProgress (DRV_HANDLE handle) Indicates if a BSS scan is in progress. Returns a flag indicating if a BSS scan operation is currently running. WDRV_PIC32MZW_Initialize must...","GUID-EB80A93F-A238-4808-BE70-B7E819DC87FB.html@@@1.1.3 System - Interrupts@@@The interrupts API connects the WINCS02 driver to an appropriate interrupt driver within the Harmony framework. Depending on hardware and system configuration Harmony will construct a suitable...","GUID-EC329287-D025-476B-B425-F87C906D4D83.html@@@1.1.9.2 WDRV_WINC_BSS_INFO Struct@@@typedef struct { WDRV_WINC_BSS_CONTEXT ctx; int8_t rssi; WDRV_WINC_AUTH_TYPE authTypeRecommended; } WDRV_WINC_BSS_INFO; This structure contains the BSSID and SSID of the BSS as well as the signal...","GUID-EC53AE64-05BF-48B0-99DB-A40DABE5E4C7.html@@@1.3.1.3 WDRV_PIC32MZW_Initialize Function@@@SYS_MODULE_OBJ WDRV_PIC32MZW_Initialize ( const SYS_MODULE_INDEX index, const SYS_MODULE_INIT * const init ) System interface initialization of the PIC32MZW driver. This is the function that...","GUID-EC99F412-F62C-484E-8614-D6AB3C3DE841.html@@@1.1.5.5 WDRV_WINC_MAX_SSID_LEN Macro@@@#define WDRV_WINC_MAX_SSID_LEN 32 U Maximum length of an SSID. None...","GUID-EEA85810-A80A-4525-B6EE-E2A402D7D2A1.html@@@1.1.6.2 WDRV_WINC_ASSOC_HANDLE_INVALID Macro@@@#define WDRV_WINC_ASSOC_HANDLE_INVALID (((WDRV_WINC_ASSOC_HANDLE) - 1 )) Defines a value for an association handle which is not yet valid. None...","GUID-EEB1E527-0941-4465-8EC4-6DD8A46D4C71.html@@@1.1.16.3 WDRV_WINC_FILE_STATUS_TYPE Enum@@@typedef enum { WDRV_WINC_FILE_STATUS_ERROR, WDRV_WINC_FILE_STATUS_OK, WDRV_WINC_FILE_STATUS_OPEN, WDRV_WINC_FILE_STATUS_WRITE_COMPLETE, WDRV_WINC_FILE_STATUS_CLOSE, } WDRV_WINC_FILE_STATUS_TYPE...","GUID-EF43A9A5-C88D-421F-9FC6-C46810C675C0.html@@@1.1.18.5.5 WDRV_WINC_MQTTPubPropPayloadFormatSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTPubPropPayloadFormatSet ( WDRV_WINC_MQTT_PUB_PROP *pPubProp, WDRV_WINC_MQTT_PROP_PAYLOAD_FORMAT_TYPE payloadFormat ) Sets the payload format property in the publish...","GUID-EF8FA112-7322-4D3F-A37B-11854EEE2094.html@@@1.1.24.23 ntohs@@@uint16_t ntohs (uint16_t n) Convert 16-bit value from network to host byte order. Parameters Description n Value to convert. Converted value. None...","GUID-EFC66B72-BB64-4453-85E3-AABE07F442C1.html@@@1.1.16.4 WDRV_WINC_FILE_MODE_TYPE Enum@@@typedef enum { WDRV_WINC_FILE_MODE_INVALID = 0 , WDRV_WINC_FILE_MODE_WRITE } WDRV_WINC_FILE_MODE_TYPE; Possible file modes used when opening a file transfer operation. Members Description...","GUID-EFE4EBAB-3F25-4EE9-BD27-D3BD6F14C3D8.html@@@1.3.3.10 WDRV_PIC32MZW_BSSFindReset Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_BSSFindReset ( DRV_HANDLE handle, WDRV_PIC32MZW_BSSFIND_NOTIFY_CALLBACK pfNotifyCallback ) Request the first scan results again The information structure of the...","GUID-EFEFA06B-16BD-412C-A3B1-F37AA66E9AC4.html@@@1.2.11.1 WDRV_WINC_Deinitialize Function@@@void WDRV_WINC_Deinitialize (SYS_MODULE_OBJ object) WINC driver deinitialization function. This is the function that deinitializes the WINC. It is called by the system. WDRV_WINC_Initialize should...","GUID-EFF9549A-EEFC-44D5-B439-4CB4DFC44361.html@@@1.1.18.7.3 WDRV_WINC_MQTTUserPropCallbackSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTUserPropCallbackSet ( DRV_HANDLE handle, WDRV_WINC_MQTT_USER_PROP_CALLBACK pfUserPropCb ) Used to set the user property callback which will be called whenever a user...","GUID-F039E584-5BA5-4B4F-8B45-EC797B2CCF36.html@@@1.1.18.11 WDRV_WINC_MQTT_DISCONN_REASON_CODE_TYPE Enum@@@typedef enum { WDRV_WINC_MQTT_DISCONN_REASON_CODE_NORMAL, WDRV_WINC_MQTT_DISCONN_REASON_CODE_SEND_LWT, WDRV_WINC_MQTT_DISCONN_REASON_CODE_ERROR, WDRV_WINC_MQTT_DISCONN_REASON_CODE_MALFORM_PKT...","GUID-F05182E4-B102-4775-A746-1FF37F465312.html@@@Customer Support@@@Users of Microchip products can receive assistance through several channels: Distributor or Representative Local Sales Office Embedded Solutions Engineer (ESE) Technical Support Customers should...","GUID-F1B1F042-5BC2-45FC-850E-792C58024027.html@@@1.2.3.3 WDRV_WINC_ASSOC_HANDLE_INVALID Macro@@@#define WDRV_WINC_ASSOC_HANDLE_INVALID (((WDRV_WINC_ASSOC_HANDLE) - 1 )) Invalid association handle. Defines a value for an association handle which isn&apos;t yet valid. None...","GUID-F2BF27B3-E943-4081-AC9B-46E4786DAEDE.html@@@1.1.24.21 htons@@@uint16_t htons (uint16_t n) Convert 16-bit value from host to network byte order. Parameters Description n Value to convert. Converted value. None...","GUID-F2CEE7DB-50AA-4BC1-8D8D-8EA6D79A42E2.html@@@1.2.14.1 WDRV_WINC_SSL_CIPHERSUITELIST_CALLBACK Typedef@@@typedef void (*WDRV_WINC_SSL_CIPHERSUITELIST_CALLBACK) Callback to report cipher suites. Called when the cipher suites are changed. Param Description handle Client handle obtained by a call to...","GUID-F2F8819C-1108-4BC3-9896-C145EA6632C7.html@@@1.1.24.17 freeaddrinfo@@@void freeaddrinfo ( const struct addrinfo *p) Frees the memory allocated by getaddrinfo() . Parameters Description p Pointer to address linked list returned by getaddrinfo() . None. None...","GUID-F3321C75-475D-4B2D-AB74-B43F5F87A957.html@@@1.1.18.17 WDRV_WINC_MQTTUnsubscribe@@@WDRV_WINC_STATUS WDRV_WINC_MQTTUnsubscribe ( DRV_HANDLE handle, const char * pTopicName ) Sends a request to un-subscribe from an MQTT topic. WDRV_WINC_Initialize must have been called. WDRV_WINC_Open...","GUID-F4D61340-9BBF-4528-9D6B-4FB3E554F2AF.html@@@1.3.11.4 WDRV_PIC32MZW_IECustTxDataSet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_IECustTxDataSet ( DRV_HANDLE handle, WDRV_PIC32MZW_IE_FRAME_TYPE_MASK frameMask, const WDRV_PIC32MZW_CUST_IE_STORE_CONTEXT * const pCustIECtx ) Configures the custom...","GUID-F5181FAD-1E9A-4343-AB61-D69A823EB512.html@@@1.1.17.6 WDRV_WINC_InfoDeviceFirmwareVersionGet@@@WDRV_WINC_STATUS WDRV_WINC_InfoDeviceFirmwareVersionGet ( DRV_HANDLE handle, bool active, WDRV_WINC_FIRMWARE_VERSION_INFO * const pFirmwareVersion ) Returns information on the WINC firmware version...","GUID-F5D29548-6E9F-40CD-9F17-12E9ACCE1427.html@@@1.1.8.4 WDRV_WINC_BSSCtxSetChannel@@@WDRV_WINC_STATUS WDRV_WINC_BSSCtxSetChannel ( WDRV_WINC_BSS_CONTEXT * const pBSSCtx, WDRV_WINC_CHANNEL_ID channel ) The supplied channel value is copied into the BSS context. None. Parameters...","GUID-F63B27BC-58CA-410B-89D2-FC5221B921AD.html@@@1.2.5.10 WDRV_WINC_BSSFindSetScanMatchMode Function@@@WDRV_WINC_STATUS WDRV_WINC_BSSFindSetScanMatchMode ( DRV_HANDLE handle, WDRV_WINC_SCAN_MATCH_MODE matchMode ) Configures the scan matching mode. This function configures the matching mode, either stop...","GUID-F649E22F-F2D5-4BE9-9A50-0889D0B40464.html@@@1.2.15.5 WDRV_WINC_SystemTimeSNTPClientEnable Function@@@WDRV_WINC_STATUS WDRV_WINC_SystemTimeSNTPClientEnable ( DRV_HANDLE handle, const char *pServerName, bool allowDHCPOverride ); Enable the SNTP client to set system time. Enables the SNTP client used to...","GUID-F65DB975-4558-4D72-AB33-F88CF945C740.html@@@1.1.16 Client - File Operations APIs@@@This interface supports file system operations on the WINCS02 device. Files are organized by type: Certificates Private Keys Diffie-Hellman Parameters Configuration Settings Files can be searched by...","GUID-F6B052B7-D963-48BC-868B-05554677B794.html@@@1.1.10.2 WDRV_WINC_L2DataFrameSend@@@WDRV_WINC_STATUS WDRV_WINC_L2DataFrameSend ( DRV_HANDLE handle, WDRV_WINC_NETIF_IDX ifIdx, const uint8_t * const pl2Data, size_t l2DataLen ) Queues an L2 frame to the WiFi subsystem for transmission...","GUID-F6DD1B35-FC5A-4B80-B687-7FAFEA5754B8.html@@@1.1.13.4 WDRV_WINC_DHCPSPoolAddressSet@@@WDRV_WINC_STATUS WDRV_WINC_DHCPSPoolAddressSet ( DRV_HANDLE handle, WDRV_WINC_DHCPS_IDX poolIdx, WDRV_WINC_IPV4_ADDR *pStartAddr ) Configures the starting IP address of the selected DHCP server pool...","GUID-F7E5FF2D-5176-49B5-AC28-14FA4DD63E5D.html@@@1.2.14.6 WDRV_WINC_SSLCTXDefault Function@@@WDRV_WINC_STATUS WDRV_WINC_SSLCTXDefault ( WDRV_WINC_CIPHER_SUITE_CONTEXT *pSSLCipherSuiteCtx ) Initialize an SSL cipher suite context. Sets the default values for the cipher suite context. None...","GUID-F860FD90-9B84-4376-813B-0A12901873D0.html@@@1.3.5.2 WDRV_PIC32MZW_AUTH_MFP_CONFIG Enum@@@typedef enum { /* Management Frame Protection enabled but not required. * This is the default configuration for the following auth types: * WDRV_PIC32MZW_AUTH_TYPE_WPAWPA2_PERSONAL *...","GUID-F8AE50B1-BB2E-4D07-9AF3-19CAA7EFEF17.html@@@1.1.30.2 WDRV_WINC_POWERSAVE_MODE Enum@@@typedef enum { WDRV_WINC_POWERSAVE_RUN_MODE, WDRV_WINC_POWERSAVE_WSM_MODE } WDRV_WINC_POWERSAVE_MODE; Enumeration describing available powersave modes. Members Description WDRV_WINC_POWERSAVE_RUN_MODE...","GUID-F8B44B94-EF42-4DF5-A206-FB9586150864.html@@@1.1.20.6 WDRV_WINC_NVM_READ_STATUS_INFO Struct@@@typedef struct { uint32_t offset; uint32_t length; const uint8_t *pData; } WDRV_WINC_READ_STATUS_INFO; Status information provided upon successful completion of NVM read operation. Members Description...","GUID-F8DEA63C-71E7-4553-A3D4-94CA8A3B4691.html@@@1.2.8.10 WDRV_WINC_IPUseDHCPGet Function@@@bool WDRV_WINC_IPUseDHCPGet (DRV_HANDLE handle) Determine if DHCP is to be used. Determines if the WINC will use DHCP for IP address configuration. WDRV_WINC_Initialize should have been called...","GUID-F92285BC-A872-46B2-82CB-E96DB26375B5.html@@@1.1.24.14 shutdown@@@int shutdown ( int fd, int how) Shut down part of a full-duplex connection. Parameters Description fd Socket file descriptor. how Shutdown flags, must be SHUT_RDWR . 0 - Success. -1 - Error, errno...","GUID-F9C3DFB6-51B9-40F4-8758-50E21B8C7A9F.html@@@1.1.29.1.10 WDRV_WINC_TLSCtxPrivKeySet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxPrivKeySet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, const char *pPrivKeyName, const char *pPrivKeyPassword ) Sets the private key name and password fields...","GUID-FA49E783-D2CE-49ED-A713-3C6FFA518DD5.html@@@1.1.24.3 WINC_SOCKET_EVENT_CALLBACK Typedef@@@typedef void (*WINC_SOCKET_EVENT_CALLBACK) ( uintptr_t context, int socket, WINC_SOCKET_EVENT event, WINC_SOCKET_STATUS status ); Socket event callback function type. Parameters Description context...","GUID-FA69393B-F4DB-41C5-B1D8-AC183D005B00.html@@@1.1.29.1.9 WDRV_WINC_TLSCtxDHParamtersFileSet@@@WDRV_WINC_STATUS WDRV_WINC_TLSCtxDHParamtersFileSet ( DRV_HANDLE handle, WDRV_WINC_TLS_HANDLE tlsHandle, const char *pDHParamId ) Sets the Diffie-Hellman parameters field of a TLS context...","GUID-FA9685C3-2B37-4821-AD49-3A01ED20F7CC.html@@@1.3.10.4 WDRV_PIC32MZW_RegDomainGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_RegDomainGet ( DRV_HANDLE handle, const WDRV_PIC32MZW_REGDOMAIN_SELECT selection, const WDRV_PIC32MZW_REGDOMAIN_CALLBACK pfRegDomCallback ) Requests information...","GUID-FAF69F81-E0AF-4297-AA15-28901CBC15C6.html@@@1.1.7.5 WDRV_WINC_AUTH_MFP_CONFIG Enum@@@typedef enum { WDRV_WINC_AUTH_MFP_ENABLED, WDRV_WINC_AUTH_MFP_REQUIRED, WDRV_WINC_AUTH_MFP_DISABLED, } WDRV_WINC_AUTH_MFP_CONFIG; This type defines the possible configurations that can be specified in...","GUID-FB01454A-0101-4B89-B669-531006574BFA.html@@@1.1.13.2 WDRV_WINC_DHCPS_EVENT_TYPE Enum@@@typedef enum { WDRV_WINC_DHCPS_EVENT_LEASE_ASSIGNED, } WDRV_WINC_DHCPS_EVENT_TYPE; Possible values for the DHCP server events. Members Description WDRV_WINC_DHCPS_EVENT_LEASE_ASSIGNED DHCP lease...","GUID-FB67A67F-72B2-42C7-9DA1-89FF06D5BD7C.html@@@1.1.1.3 WDRV_WINC_SYS_INIT Struct@@@typedef struct { const WDRV_WINC_SPI_CFG* const pSPICfg; int intSrc; } WDRV_WINC_SYS_INIT; This structure defines the Control instance initialization. Members Description pSPICfg SPI configuration...","GUID-FBC0AE41-4A67-4BBB-A76A-9BD20BADBCE5.html@@@1.1.21.5 WDRV_WINC_OTA_OPTIONS Struct@@@typedef struct { uint8_t timeout; } WDRV_WINC_OTA_OPTIONS; Contains OTA options. Members Description timeout Operation timeout. None...","GUID-FC71C8AD-7FE7-4AB9-ABB6-253F3A59D480.html@@@1.1.18.3.2 WDRV_WINC_MQTT_CONNACK_PROP Struct@@@typedef struct { uint32_t sessionExpiryInterval; uint32_t maxPacketSize; uint16_t receiveMax; uint16_t topicAliasMax; bool retainAvailable; bool wildcardSubsAvailable; bool subIDsAvailable; bool...","GUID-FC75E7D6-8778-4E1C-977F-CB39857FCBCB.html@@@1.3.6.5 WDRV_PIC32MZW_AssocDisconnect Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_AssocDisconnect (WDRV_PIC32MZW_ASSOC_HANDLE assocHandle) Disconnects an association. This API disconnects the STA associated with softAP based on the input...","GUID-FCE9BE49-1885-43A2-8C31-2CE643110BC8.html@@@1.1.18.5.4 WDRV_WINC_MQTTPubPropDefaultSet@@@WDRV_WINC_STATUS WDRV_WINC_MQTTPubPropDefaultSet ( WDRV_WINC_MQTT_PUB_PROP *pPubProp ) Sets the publish property structure to safe default values. None. Parameters Description pPubProp Pointer to...","GUID-FD15FA49-9089-44AF-9012-CCC3EE291522.html@@@1.3.8.5 WDRV_PIC32MZW_APSetCustIE Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_APSetCustIE ( DRV_HANDLE handle, const WDRV_PIC32MZW_CUST_IE_STORE_CONTEXT * const pCustIECtx ) Configures the custom IE. Soft-AP beacons may contain an application...","GUID-FD9A848C-2A30-435E-8DC9-7E74BE080570.html@@@1.1.24.11 recvfrom@@@ssize_t recvfrom ( int fd, void *buf, size_t len, int flags, struct sockaddr *addr, socklen_t *alen) Receive a message from a socket. Parameters Description fd Socket file descriptor. buf Pointer to...","GUID-FE74C47F-C7D7-4176-A1EA-175D26C02B19.html@@@1.1.8.2 WDRV_WINC_BSSCtxIsValid@@@bool WDRV_WINC_BSSCtxIsValid ( const WDRV_WINC_BSS_CONTEXT * const pBSSCtx, bool ssidValid ) Tests the elements of the BSS context to judge if their values are legal. None. Parameters Description...","GUID-FEC3A720-1B2C-44BD-AC84-884A8ACCE8FD.html@@@1.1.18.2.1 WDRV_WINC_MQTT_CONN_PROP Struct@@@typedef struct { uint32_t sessionExpiryInterval; uint32_t maxPacketSize; uint16_t receiveMax; uint16_t topicAliasMax; } WDRV_WINC_MQTT_CONN_PROP; Properties associated with an MQTT connection. Members...","GUID-FECD3CB6-70F0-44C7-AC06-C2FFFB669D65.html@@@1.2.13 STA@@@This topic provides information on how the library supports connecting to BSSs as a Wi-Fi station device. The WINC device can connect to a BSS as a Wi-Fi station device. To connect to a BSS the...","GUID-FEFAE3A3-DF30-45CE-B6F3-199064BEF00B.html@@@1.1.24.7 bind@@@int bind ( int fd, const struct sockaddr *addr, socklen_t len) Bind a name to a socket. Parameters Description fd Socket file descriptor. addr Pointer to socket address. len Length of socket address...","GUID-FF05BAE1-E2E0-4281-A31D-9659BC2F604D.html@@@1.3.12.5 WDRV_PIC32MZW_InfoDeviceMACAddressGet Function@@@WDRV_PIC32MZW_STATUS WDRV_PIC32MZW_InfoDeviceMACAddressGet ( DRV_HANDLE handle, uint8_t * const pMACAddress ) Retrieves the MAC address of the PIC32MZW. Retrieves the current working MAC address...","GUID-FFABF8A5-6F52-4480-B17B-B1797DF8F65A.html@@@1.1.18.2 Connection Properties@@@Connection properties can be included when calling WDRV_WINC_MQTTConnect to connect to a version 5 MQTT broker. WDRV_WINC_MQTTConnPropDefaultSet is used to initialize a WDRV_WINC_MQTT_CONN_PROP...","cshelp.html@@@Context Sensitive Help@@@..."];
});